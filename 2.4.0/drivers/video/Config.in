#
# Video configuration
#

mainmenu_option next_comment
comment 'Frame-buffer support'

bool 'Support for frame buffer devices (EXPERIMENTAL)' CONFIG_FB

if [ "$CONFIG_FB" = "y" ]; then
   define_bool CONFIG_DUMMY_CONSOLE y
   if [ "$CONFIG_EXPERIMENTAL" = "y" ]; then
      if [ "$CONFIG_PCI" = "y" ]; then
         tristate '  nVidia Riva support (EXPERIMENTAL)' CONFIG_FB_RIVA
      fi
      if [ "$CONFIG_AMIGA" = "y" -o "$CONFIG_PCI" = "y" ]; then
	 tristate '  Cirrus Logic support (EXPERIMENTAL)' CONFIG_FB_CLGEN
	 tristate '  Permedia2 support (EXPERIMENTAL)' CONFIG_FB_PM2
	 if [ "$CONFIG_FB_PM2" = "y" -o "$CONFIG_FB_PM2" = "m" ]; then
	    if [ "$CONFIG_PCI" = "y" ]; then
	       bool '    enable FIFO disconnect feature' CONFIG_FB_PM2_FIFO_DISCONNECT
	       bool '    generic Permedia2 PCI board support' CONFIG_FB_PM2_PCI
	    fi
	    if [ "$CONFIG_AMIGA" = "y" ]; then
	       bool '    Phase5 CVisionPPC/BVisionPPC support' CONFIG_FB_PM2_CVPPC
	    fi
	 fi
      fi
   fi
   if [ "$CONFIG_ARCH_ACORN" = "y" ]; then
      bool '  Acorn VIDC support' CONFIG_FB_ACORN
   fi
   dep_tristate '  Cyber2000 support' CONFIG_FB_CYBER2000 $CONFIG_PCI
   if [ "$CONFIG_ARCH_SA1100" = "y" ]; then
      bool '  SA-1100 LCD support' CONFIG_FB_SA1100
   fi
   if [ "$CONFIG_APOLLO" = "y" ]; then
      define_bool CONFIG_FB_APOLLO y
   fi
   if [ "$CONFIG_Q40" = "y" ]; then
      define_bool CONFIG_FB_Q40 y
   fi
   if [ "$CONFIG_AMIGA" = "y" ]; then
      tristate '  Amiga native chipset support' CONFIG_FB_AMIGA
      if [ "$CONFIG_FB_AMIGA" != "n" ]; then
	 bool '    Amiga OCS chipset support' CONFIG_FB_AMIGA_OCS
	 bool '    Amiga ECS chipset support' CONFIG_FB_AMIGA_ECS
	 bool '    Amiga AGA chipset support' CONFIG_FB_AMIGA_AGA
      fi
   fi
   if [ "$CONFIG_ZORRO" = "y" ]; then
      tristate '  Amiga CyberVision support' CONFIG_FB_CYBER
      if [ "$CONFIG_EXPERIMENTAL" = "y" ]; then
	 bool '  Amiga CyberVision3D support (EXPERIMENTAL)' CONFIG_FB_VIRGE
	 tristate '  Amiga RetinaZ3 support (EXPERIMENTAL)' CONFIG_FB_RETINAZ3
	 bool '  Amiga FrameMaster II/Rainbow II support (EXPERIMENTAL)' CONFIG_FB_FM2
      fi
   fi
   if [ "$CONFIG_ATARI" = "y" ]; then
      bool '  Atari native chipset support' CONFIG_FB_ATARI
      tristate '  ATI Mach64 display support' CONFIG_FB_ATY
   fi
   if [ "$CONFIG_PPC" = "y" ]; then
      bool '  Open Firmware frame buffer device support' CONFIG_FB_OF
      bool '  Apple "control" display support' CONFIG_FB_CONTROL
      bool '  Apple "platinum" display support' CONFIG_FB_PLATINUM
      bool '  Apple "valkyrie" display support' CONFIG_FB_VALKYRIE
      bool '  Chips 65550 display support' CONFIG_FB_CT65550
      bool '  IMS Twin Turbo display support' CONFIG_FB_IMSTT
      bool '  S3 Trio display support' CONFIG_FB_S3TRIO
      tristate '  VGA 16-color graphics console' CONFIG_FB_VGA16
   fi
   if [ "$CONFIG_MAC" = "y" ]; then
      define_bool CONFIG_FB_MAC y
      bool '  Apple "valkyrie" display support' CONFIG_FB_VALKYRIE
#      bool '  Apple DAFB display support' CONFIG_FB_DAFB
   fi
   if [ "$CONFIG_HP300" = "y" ]; then
      define_bool CONFIG_FB_HP300 y
   fi
   if [ "$ARCH" = "alpha" ]; then
      tristate '  TGA framebuffer support' CONFIG_FB_TGA
   fi
   if [ "$ARCH" = "i386" ]; then
      bool '  VESA VGA graphics console' CONFIG_FB_VESA
      tristate '  VGA 16-color graphics console' CONFIG_FB_VGA16
      tristate '  Hercules mono graphics console (EXPERIMENTAL)' CONFIG_FB_HGA
      define_bool CONFIG_VIDEO_SELECT y
   fi
   if [ "$CONFIG_VISWS" = "y" ]; then
      tristate '  SGI Visual Workstation framebuffer support' CONFIG_FB_SGIVW
      define_bool CONFIG_BUS_I2C y
   fi
   if [ "$CONFIG_SUN3" = "y" -o "$CONFIG_SUN3X" = "y" ]; then
      bool '  Sun3 framebuffer support' CONFIG_FB_SUN3
      if [ "$CONFIG_FB_SUN3" != "n" ]; then
         bool '    BWtwo support' CONFIG_FB_BWTWO
         bool '    CGsix (GX,TurboGX) support' CONFIG_FB_CGSIX
      fi
   fi
   if [ "$CONFIG_EXPERIMENTAL" = "y" ]; then
      if [ "$CONFIG_PCI" != "n" ]; then
	 tristate '  Matrox acceleration (EXPERIMENTAL)' CONFIG_FB_MATROX
	 if [ "$CONFIG_FB_MATROX" != "n" ]; then
	    bool '    Millennium I/II support' CONFIG_FB_MATROX_MILLENIUM
	    bool '    Mystique support' CONFIG_FB_MATROX_MYSTIQUE
	    bool '    G100/G200/G400/G450 support' CONFIG_FB_MATROX_G100
            if [ "$CONFIG_I2C" != "n" ]; then
	       dep_tristate '      Matrox I2C support' CONFIG_FB_MATROX_I2C $CONFIG_FB_MATROX $CONFIG_I2C_ALGOBIT
	       if [ "$CONFIG_FB_MATROX_G100" = "y" ]; then
	          dep_tristate '      G400 second head support' CONFIG_FB_MATROX_MAVEN $CONFIG_FB_MATROX_I2C
	       fi
            fi
            dep_tristate '      G450 second head support' CONFIG_FB_MATROX_G450 $CONFIG_FB_MATROX_G100
	    bool '    Multihead support' CONFIG_FB_MATROX_MULTIHEAD
	 fi
	 tristate '  ATI Mach64 display support (EXPERIMENTAL)' CONFIG_FB_ATY
	 tristate '  ATI Rage 128 display support (EXPERIMENTAL)' CONFIG_FB_ATY128
	 tristate '  3Dfx Banshee/Voodoo3 display support (EXPERIMENTAL)' CONFIG_FB_3DFX
	 tristate '  SIS 630/540 display support (EXPERIMENTAL)' CONFIG_FB_SIS
      fi
   fi
   if [ "$ARCH" = "sparc" -o "$ARCH" = "sparc64" ]; then
      bool '  SBUS and UPA framebuffers' CONFIG_FB_SBUS
      if [ "$CONFIG_FB_SBUS" != "n" ]; then
	 if [ "$ARCH" = "sparc64" ]; then
	    bool '    Creator/Creator3D support' CONFIG_FB_CREATOR
	 fi
	 bool '    CGsix (GX,TurboGX) support' CONFIG_FB_CGSIX
	 bool '    BWtwo support' CONFIG_FB_BWTWO
	 bool '    CGthree support' CONFIG_FB_CGTHREE
	 if [ "$ARCH" = "sparc" ]; then
	    bool '    TCX (SS4/SS5 only) support' CONFIG_FB_TCX
	    bool '    CGfourteen (SX) support' CONFIG_FB_CGFOURTEEN
	    bool '    P9100 (Sparcbook 3 only) support' CONFIG_FB_P9100
	 fi
	 bool '    Leo (ZX) support' CONFIG_FB_LEO
      fi
   fi
   if [ "$ARCH" = "sparc" ]; then
      if [ "$CONFIG_PCI" != "n" ]; then
	 bool '  PCI framebuffers' CONFIG_FB_PCI
	 if [ "$CONFIG_FB_PCI" != "n" ]; then
	    bool '    IGA 168x display support' CONFIG_FB_IGA
	 fi
      fi
   fi
   if [ "$ARCH" = "sparc64" ]; then
      if [ "$CONFIG_PCI" != "n" ]; then
	 bool '  PCI framebuffers' CONFIG_FB_PCI
	 if [ "$CONFIG_FB_PCI" != "n" ]; then
	    tristate '    ATI Mach64 display support' CONFIG_FB_ATY
	 fi
      fi
   fi
   if [ "$CONFIG_HD64461" = "y" ]; then
      tristate '  HD64461 Frame Buffer support' CONFIG_FB_HIT
   fi
   if [ "$CONFIG_EXPERIMENTAL" = "y" ]; then
      tristate '  Virtual Frame Buffer support (ONLY FOR TESTING!)' CONFIG_FB_VIRTUAL
   fi

   bool '  Advanced low level driver options' CONFIG_FBCON_ADVANCED
   if [ "$CONFIG_FBCON_ADVANCED" = "y" ]; then
      tristate '    Monochrome support' CONFIG_FBCON_MFB
      tristate '    2 bpp packed pixels support' CONFIG_FBCON_CFB2
      tristate '    4 bpp packed pixels support' CONFIG_FBCON_CFB4
      tristate '    8 bpp packed pixels support' CONFIG_FBCON_CFB8
      tristate '    16 bpp packed pixels support' CONFIG_FBCON_CFB16
      tristate '    24 bpp packed pixels support' CONFIG_FBCON_CFB24
      tristate '    32 bpp packed pixels support' CONFIG_FBCON_CFB32
      tristate '    Amiga bitplanes support' CONFIG_FBCON_AFB
      tristate '    Amiga interleaved bitplanes support' CONFIG_FBCON_ILBM
      tristate '    Atari interleaved bitplanes (2 planes) support' CONFIG_FBCON_IPLAN2P2
      tristate '    Atari interleaved bitplanes (4 planes) support' CONFIG_FBCON_IPLAN2P4
      tristate '    Atari interleaved bitplanes (8 planes) support' CONFIG_FBCON_IPLAN2P8
#      tristate '    Atari interleaved bitplanes (16 planes) support' CONFIG_FBCON_IPLAN2P16
      tristate '    Mac variable bpp packed pixels support' CONFIG_FBCON_MAC
      tristate '    VGA 16-color planar support' CONFIG_FBCON_VGA_PLANES
      tristate '    VGA characters/attributes support' CONFIG_FBCON_VGA
      tristate '    HGA monochrome support (EXPERIMENTAL)' CONFIG_FBCON_HGA
   else
      # Guess what we need
      if [ "$CONFIG_FB_ACORN" = "y" -o "$CONFIG_FB_AMIGA" = "y" -o \
	   "$CONFIG_FB_ATARI" = "y" -o "$CONFIG_FB_CYBER" = "y" -o \
	   "$CONFIG_FB_MAC" = "y" -o "$CONFIG_FB_RETINAZ3" = "y" -o \
	   "$CONFIG_FB_VIRGE" = "y" -o "$CONFIG_FB_VIRTUAL" = "y" -o \
	   "$CONFIG_FB_BWTWO" = "y" -o "$CONFIG_FB_CLGEN" = "y" ]; then
	 define_tristate CONFIG_FBCON_MFB y
      else
	 if [ "$CONFIG_FB_ACORN" = "m" -o "$CONFIG_FB_AMIGA" = "m" -o \
	      "$CONFIG_FB_ATARI" = "m" -o "$CONFIG_FB_CYBER" = "m" -o \
	      "$CONFIG_FB_MAC" = "m" -o "$CONFIG_FB_RETINAZ3" = "m" -o \
	      "$CONFIG_FB_VIRGE" = "m" -o "$CONFIG_FB_VIRTUAL" = "m" -o \
	      "$CONFIG_FB_BWTWO" = "m" -o "$CONFIG_FB_CLGEN" = "m" ]; then
	    define_tristate CONFIG_FBCON_MFB m
	 fi
      fi
      if [ "$CONFIG_FB_ACORN" = "y" -o "$CONFIG_FB_MAC" = "y" -o \
	   "$CONFIG_FB_SA1100" = "y" -o "$CONFIG_FB_VIRTUAL" = "y" ]; then
	 define_tristate CONFIG_FBCON_CFB2 y
	 define_tristate CONFIG_FBCON_CFB4 y
      else
	 if [ "$CONFIG_FB_ACORN" = "m" -o "$CONFIG_FB_MAC" = "m" -o \
	      "$CONFIG_FB_SA1100" = "m" -o "$CONFIG_FB_VIRTUAL" = "m" ]; then
	    define_tristate CONFIG_FBCON_CFB2 m
	    define_tristate CONFIG_FBCON_CFB4 m
	 fi
      fi
      if [ "$CONFIG_FB_ACORN" = "y" -o "$CONFIG_FB_ATARI" = "y" -o \
	   "$CONFIG_FB_ATY" = "y" -o "$CONFIG_FB_MAC" = "y" -o \
	   "$CONFIG_FB_OF" = "y" -o "$CONFIG_FB_TGA" = "y" -o \
	   "$CONFIG_FB_VESA" = "y" -o "$CONFIG_FB_VIRTUAL" = "y" -o \
	   "$CONFIG_FB_TCX" = "y" -o "$CONFIG_FB_CGTHREE" = "y" -o \
	   "$CONFIG_FB_CONTROL" = "y" -o "$CONFIG_FB_CLGEN" = "y" -o \
	   "$CONFIG_FB_CGFOURTEEN" = "y" -o "$CONFIG_FB_G364" = "y" -o \
	   "$CONFIG_FB_VIRGE" = "y" -o "$CONFIG_FB_CYBER" = "y" -o \
	   "$CONFIG_FB_VALKYRIE" = "y" -o "$CONFIG_FB_PLATINUM" = "y" -o \
           "$CONFIG_FB_IGA" = "y" -o "$CONFIG_FB_MATROX" = "y" -o \
	   "$CONFIG_FB_CT65550" = "y" -o "$CONFIG_FB_PM2" = "y" -o \
	   "$CONFIG_FB_P9100" = "y" -o "$CONFIG_FB_ATY128" = "y" -o \
	   "$CONFIG_FB_RIVA" = "y" -o \
	   "$CONFIG_FB_SGIVW" = "y" -o "$CONFIG_FB_CYBER2000" = "y" -o \
	   "$CONFIG_FB_SA1100" = "y" -o "$CONFIG_FB_3DFX" = "y" -o \
	   "$CONFIG_FB_SIS" = "y" ]; then
	 define_tristate CONFIG_FBCON_CFB8 y
      else
	 if [ "$CONFIG_FB_ACORN" = "m" -o "$CONFIG_FB_ATARI" = "m" -o \
	      "$CONFIG_FB_ATY" = "m" -o "$CONFIG_FB_MAC" = "m" -o \
	      "$CONFIG_FB_OF" = "m" -o "$CONFIG_FB_TGA" = "m" -o \
	      "$CONFIG_FB_VESA" = "m" -o "$CONFIG_FB_VIRTUAL" = "m" -o \
	      "$CONFIG_FB_TCX" = "m" -o "$CONFIG_FB_CGTHREE" = "m" -o \
	      "$CONFIG_FB_CONTROL" = "m" -o "$CONFIG_FB_CLGEN" = "m" -o \
	      "$CONFIG_FB_CGFOURTEEN" = "m" -o "$CONFIG_FB_G364" = "m" -o \
	      "$CONFIG_FB_VIRGE" = "m" -o "$CONFIG_FB_CYBER" = "m" -o \
	      "$CONFIG_FB_VALKYRIE" = "m" -o "$CONFIG_FB_PLATINUM" = "m" -o \
              "$CONFIG_FB_IGA" = "m" -o "$CONFIG_FB_MATROX" = "m" -o \
	      "$CONFIG_FB_CT65550" = "m" -o "$CONFIG_FB_PM2" = "m" -o \
	      "$CONFIG_FB_P9100" = "m" -o "$CONFIG_FB_ATY128" = "m" -o \
	      "$CONFIG_FB_RIVA" = "m" -o "$CONFIG_FB_3DFX" = "m" -o \
	      "$CONFIG_FB_SGIVW" = "m" -o "$CONFIG_FB_CYBER2000" = "m" -o \
	      "$CONFIG_FB_SA1100" = "m" -o "$CONFIG_FB_SIS" = "m" ]; then
	    define_tristate CONFIG_FBCON_CFB8 m
	 fi
      fi
      if [ "$CONFIG_FB_ATARI" = "y" -o "$CONFIG_FB_ATY" = "y" -o \
	   "$CONFIG_FB_MAC" = "y" -o "$CONFIG_FB_VESA" = "y" -o \
	   "$CONFIG_FB_VIRTUAL" = "y" -o "$CONFIG_FB_TBOX" = "y" -o \
	   "$CONFIG_FB_Q40" = "y" -o \
	   "$CONFIG_FB_CONTROL" = "y" -o "$CONFIG_FB_CLGEN" = "y" -o \
	   "$CONFIG_FB_VIRGE" = "y" -o "$CONFIG_FB_CYBER" = "y" -o \
	   "$CONFIG_FB_VALKYRIE" = "y" -o "$CONFIG_FB_PLATINUM" = "y" -o \
	   "$CONFIG_FB_CT65550" = "y" -o "$CONFIG_FB_MATROX" = "y" -o \
	   "$CONFIG_FB_PM2" = "y" -o "$CONFIG_FB_SGIVW" = "y" -o \
	   "$CONFIG_FB_RIVA" = "y" -o "$CONFIG_FB_ATY128" = "y" -o \
	   "$CONFIG_FB_CYBER2000" = "y" -o "$CONFIG_FB_3DFX" = "y"  -o \
	   "$CONFIG_FB_SIS" = "y" -o "$CONFIG_FB_SA1100" = "y" ]; then
	 define_tristate CONFIG_FBCON_CFB16 y
      else
	 if [ "$CONFIG_FB_ATARI" = "m" -o "$CONFIG_FB_ATY" = "m" -o \
	      "$CONFIG_FB_MAC" = "m" -o "$CONFIG_FB_VESA" = "m" -o \
	      "$CONFIG_FB_VIRTUAL" = "m" -o "$CONFIG_FB_TBOX" = "m" -o \
	      "$CONFIG_FB_Q40" = "m" -o "$CONFIG_FB_3DFX" = "m" -o \
	      "$CONFIG_FB_CONTROL" = "m" -o "$CONFIG_FB_CLGEN" = "m" -o \
	      "$CONFIG_FB_VIRGE" = "m" -o "$CONFIG_FB_CYBER" = "m" -o \
	      "$CONFIG_FB_VALKYRIE" = "m" -o "$CONFIG_FB_PLATINUM" = "m" -o \
	      "$CONFIG_FB_CT65550" = "m" -o "$CONFIG_FB_MATROX" = "m" -o \
	      "$CONFIG_FB_PM2" = "m" -o "$CONFIG_FB_SGIVW" = "m" -o \
	      "$CONFIG_FB_RIVA" = "m" -o "$CONFIG_FB_ATY128" = "m" -o \
	      "$CONFIG_FB_CYBER2000" = "m" -o "$CONFIG_FB_SIS" = "m" -o \
	      "$CONFIG_FB_SA1100" = "m" ]; then
	    define_tristate CONFIG_FBCON_CFB16 m
	 fi
      fi
      if [ "$CONFIG_FB_ATY" = "y" -o "$CONFIG_FB_VIRTUAL" = "y" -o \
	   "$CONFIG_FB_CLGEN" = "y" -o "$CONFIG_FB_VESA" = "y" -o \
	   "$CONFIG_FB_MATROX" = "y" -o "$CONFIG_FB_PM2" = "y" -o \
           "$CONFIG_FB_ATY128" = "y" -o \
	   "$CONFIG_FB_CYBER2000" = "y" ]; then
	 define_tristate CONFIG_FBCON_CFB24 y
      else
	 if [ "$CONFIG_FB_ATY" = "m" -o "$CONFIG_FB_VIRTUAL" = "m" -o \
	      "$CONFIG_FB_CLGEN" = "m" -o "$CONFIG_FB_VESA" = "m" -o \
	      "$CONFIG_FB_MATROX" = "m" -o "$CONFIG_FB_PM2" = "m" -o \
	      "$CONFIG_FB_ATY128" = "m" -o \
	      "$CONFIG_FB_CYBER2000" = "m" ]; then
	    define_tristate CONFIG_FBCON_CFB24 m
	 fi
      fi
      if [ "$CONFIG_FB_ATARI" = "y" -o "$CONFIG_FB_ATY" = "y" -o \
	   "$CONFIG_FB_VESA" = "y" -o "$CONFIG_FB_VIRTUAL" = "y" -o \
	   "$CONFIG_FB_CONTROL" = "y" -o "$CONFIG_FB_CLGEN" = "y" -o \
	   "$CONFIG_FB_TGA" = "y" -o "$CONFIG_FB_PLATINUM" = "y" -o \
	   "$CONFIG_FB_MATROX" = "y" -o "$CONFIG_FB_PM2" = "y" -o \
	   "$CONFIG_FB_RIVA" = "y" -o "$CONFIG_FB_ATY128" = "y" -o \
	   "$CONFIG_FB_FM2" = "y" -o "$CONFIG_FB_SGIVW" = "y" -o \
	   "$CONFIG_FB_3DFX" = "y" -o "$CONFIG_FB_SIS" = "y" ]; then
	 define_tristate CONFIG_FBCON_CFB32 y
      else
	 if [ "$CONFIG_FB_ATARI" = "m" -o "$CONFIG_FB_ATY" = "m" -o \
	      "$CONFIG_FB_VESA" = "m" -o "$CONFIG_FB_VIRTUAL" = "m" -o \
	      "$CONFIG_FB_CONTROL" = "m" -o "$CONFIG_FB_CLGEN" = "m" -o \
	      "$CONFIG_FB_TGA" = "m" -o "$CONFIG_FB_PLATINUM" = "m" -o \
	      "$CONFIG_FB_MATROX" = "m" -o "$CONFIG_FB_PM2" = "m" -o \
	      "$CONFIG_FB_RIVA" = "m" -o "$CONFIG_FB_ATY128" = "m" -o \
	      "$CONFIG_FB_3DFX" = "m" -o \
	      "$CONFIG_FB_SGIVW" = "m" -o "$CONFIG_FB_SIS" = "m" ]; then
	    define_tristate CONFIG_FBCON_CFB32 m
	 fi
      fi
      if [ "$CONFIG_FB_AMIGA" = "y" ]; then
	 define_tristate CONFIG_FBCON_AFB y
	 define_tristate CONFIG_FBCON_ILBM y
      else
	 if [ "$CONFIG_FB_AMIGA" = "m" ]; then
	    define_tristate CONFIG_FBCON_AFB m
	    define_tristate CONFIG_FBCON_ILBM m
	 fi
      fi
      if [ "$CONFIG_FB_ATARI" = "y" ]; then
	 define_tristate CONFIG_FBCON_IPLAN2P2 y
	 define_tristate CONFIG_FBCON_IPLAN2P4 y
	 define_tristate CONFIG_FBCON_IPLAN2P8 y
#	 define_tristate CONFIG_FBCON_IPLAN2P16 y
      else
	 if [ "$CONFIG_FB_ATARI" = "m" ]; then
	    define_tristate CONFIG_FBCON_IPLAN2P2 m
	    define_tristate CONFIG_FBCON_IPLAN2P4 m
	    define_tristate CONFIG_FBCON_IPLAN2P8 m
#	    define_tristate CONFIG_FBCON_IPLAN2P16 m
	 fi
      fi
      if [ "$CONFIG_FB_MAC" = "y" -o "$CONFIG_FB_VIRTUAL" = "y" ]; then
	 define_tristate CONFIG_FBCON_MAC  y
      else
	 if [ "$CONFIG_FB_MAC" = "m" -o "$CONFIG_FB_VIRTUAL" = "m" ]; then
	    define_tristate CONFIG_FBCON_MAC  m
	 fi
      fi
      if [ "$CONFIG_FB_VGA16" = "y" ]; then
	 define_tristate CONFIG_FBCON_VGA_PLANES y
      else
	 if [ "$CONFIG_FB_VGA16" = "m" ]; then
	    define_tristate CONFIG_FBCON_VGA_PLANES m
	 fi
      fi
      if [ "$CONFIG_FB_HGA" = "y" ]; then
	 define_tristate CONFIG_FBCON_HGA y
      else
	 if [ "$CONFIG_FB_HGA" = "m" ]; then
	    define_tristate CONFIG_FBCON_HGA m
	 fi
      fi
   fi
   bool '  Support only 8 pixels wide fonts' CONFIG_FBCON_FONTWIDTH8_ONLY
   if [ "$ARCH" = "sparc" -o "$ARCH" = "sparc64" ]; then
      bool '  Sparc console 8x16 font' CONFIG_FONT_SUN8x16
      if [ "$CONFIG_FBCON_FONTWIDTH8_ONLY" = "n" ]; then
	 bool '  Sparc console 12x22 font (not supported by all drivers)' CONFIG_FONT_SUN12x22
      fi
      bool '  Select other fonts' CONFIG_FBCON_FONTS
      if [ "$CONFIG_FBCON_FONTS" = "y" ]; then
	 bool '    VGA 8x8 font' CONFIG_FONT_8x8
	 bool '    VGA 8x16 font' CONFIG_FONT_8x16
	 if [ "$CONFIG_FBCON_FONTWIDTH8_ONLY" = "n" ]; then
	    bool '    Mac console 6x11 font (not supported by all drivers)' CONFIG_FONT_6x11
	 fi
	 bool '    Pearl (old m68k) console 8x8 font' CONFIG_FONT_PEARL_8x8
	 bool '    Acorn console 8x8 font' CONFIG_FONT_ACORN_8x8
      fi
   else
      bool '  Select compiled-in fonts' CONFIG_FBCON_FONTS
      if [ "$CONFIG_FBCON_FONTS" = "y" ]; then
	 bool '    VGA 8x8 font' CONFIG_FONT_8x8
	 bool '    VGA 8x16 font' CONFIG_FONT_8x16
	 bool '    Sparc console 8x16 font' CONFIG_FONT_SUN8x16
	 if [ "$CONFIG_FBCON_FONTWIDTH8_ONLY" = "n" ]; then
	    bool '    Sparc console 12x22 font (not supported by all drivers)' CONFIG_FONT_SUN12x22
	    bool '    Mac console 6x11 font (not supported by all drivers)' CONFIG_FONT_6x11
	 fi
	 bool '    Pearl (old m68k) console 8x8 font' CONFIG_FONT_PEARL_8x8
	 bool '    Acorn console 8x8 font' CONFIG_FONT_ACORN_8x8
      else
	 define_bool CONFIG_FONT_8x8 y
	 define_bool CONFIG_FONT_8x16 y
	 if [ "$CONFIG_MAC" = "y" ]; then
	    if [ "$CONFIG_FBCON_FONTWIDTH8_ONLY" = "n" ]; then
	       define_bool CONFIG_FONT_6x11 y
	    fi
	 fi
	 if [ "$CONFIG_AMIGA" = "y" ]; then
	    define_bool CONFIG_FONT_PEARL_8x8 y
	 fi
	 if [ "$CONFIG_ARM" = "y" -a "$CONFIG_ARCH_ACORN" = "y" ]; then
	    define_bool CONFIG_FONT_ACORN_8x8 y
	 fi
      fi
   fi
fi

endmenu

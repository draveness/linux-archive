# Maintained by Axel Boldt (axel@uni-paderborn.de)
#
# This version of the Linux kernel configuration help texts
# corresponds to the kernel versions 2.3.x.
#
# Translations of this file available on the WWW:
#
#   - Japanese, maintained by the JF Project (JF@linux.or.jp), at
#     http://www.linux.or.jp/JF/JFdocs/Configure.help/
#   - Russian, by kaf@linux.nevod.perm.su, at
#     http://nevod.perm.su/service/linux/doc/kernel/Configure.help
#   - French, by Pierre Tane (tanep@bigfoot.com), at
#     http://www.traduc.org/kernelfr
#   - Spanish, by Carlos Perelló Marín (fperllo@ehome.encis.es), at
#     http://visar.csustan.edu/~carlos/
#   - Italian, by Alessandro Rubini (rubini@linux.it), at
#     ftp://ftp-pavia1.linux.it/pub/linux/Configure.help
#   - Polish, by Cezar Cichocki (cezar@cs.net.pl), at
#     http://www.cs.net.pl/~cezar/Kernel
#   - German, by SuSE, at http://www.suse.de/~ke/kernel . This patch
#     also includes infrastructure to support different languages.
#
# To access a document on the WWW, you need to have a direct Internet
# connection and a browser program such as netscape or lynx. If you
# only have email access, you can still use FTP and WWW servers: send
# an email to mail-server@rtfm.mit.edu with the text 
#   send usenet/news.answers/internet-services/access-via-email 
# in the body of the message.
#
# Information about what a kernel is, what it does, how to patch and
# compile it and much more is contained in the Kernel-HOWTO, available
# at http://www.linuxdoc.org/docs.html#howto . Before you start
# compiling, make sure that you have the necessary versions of all
# programs and libraries required to compile and run this kernel; they
# are listed in the file Documentation/Changes. Make sure to read the
# toplevel kernel README file as well.
#
# Format of this file: description<nl>variable<nl>help text<nl><nl>. If
# the question being documented is of type "choice", we list only the
# first occurring config variable. The help texts may contain empty
# lines, but every non-empty line must be indented two positions.
# Order of the help texts does not matter, however, no variable should
# be documented twice: if it is, only the first occurrence will be
# used by Configure. We try to keep the help texts of related variables
# close together. Lines starting with `#' are ignored. To be nice to
# menuconfig, limit your line length to 70 characters. Use emacs'
# kfill.el to edit and ispell.el to spell check this file or you lose.
#
# If you add a help text to this file, please try to be as gentle as
# possible. Don't use unexplained acronyms and generally write for the
# hypothetical ignorant but intelligent user who has just bought a PC,
# removed Windows, installed Linux and is now recompiling the kernel
# for the first time. Tell them what to do if they're unsure. Technical 
# information should go in a README in the Documentation directory.
# Mention all the relevant READMEs and HOWTOs in the help text.
# Repetitions are fine since the help texts are not meant to be read
# in sequence.
#
# All this was shamelessly stolen from several different sources. Many
# thanks to all the contributors. Feel free to use these help texts in
# your own kernel configuration tools. The texts are copyrighted (c)
# 1995-2000 by Axel Boldt and many others and are governed by the GNU
# General Public License.

Prompt for development and/or incomplete code/drivers
CONFIG_EXPERIMENTAL
  Some of the various things that Linux supports (such as network 
  drivers, file systems, network protocols, etc.) can be in a state 
  of development where the functionality, stability, or the level of 
  testing is not yet high enough for general use. This is usually
  known as the "alpha-test" phase amongst developers. If a feature is
  currently in alpha-test, then the developers usually discourage 
  uninformed widespread use of this feature by the general public to
  avoid "Why doesn't this work?" type mail messages. However, active
  testing and use of these systems is welcomed. Just be aware that it
  may not meet the normal level of reliability or it may fail to work
  in some special cases. Detailed bug reports from people familiar
  with the kernel internals are usually welcomed by the developers
  (before submitting bug reports, please read the documents README,
  MAINTAINERS, REPORTING-BUGS, Documentation/BUG-HUNTING, and
  Documentation/oops-tracing.txt in the kernel source). 

  This option will also make obsoleted drivers available. These are
  drivers that have been replaced by something else, and/or are
  scheduled to be removed in a future kernel release.

  Unless you intend to help test and develop a feature or driver that
  falls into this category, or you have a situation that requires
  using these features, you should probably say N here, which will
  cause this configure script to present you with fewer choices. If
  you say Y here, you will be offered the choice of using features or
  drivers that are currently considered to be in the alpha-test phase.

Symmetric Multi Processing
CONFIG_SMP
  This enables support for systems with more than one CPU. If you have
  a system with only one CPU, like most personal computers, say N. If
  you have a system with more than one CPU, say Y.

  If you say N here, the kernel will run on single and multiprocessor
  machines, but will use only one CPU of a multiprocessor machine. If
  you say Y here, the kernel will run on many, but not all,
  singleprocessor machines. On a singleprocessor machine, the kernel
  will run faster if you say N here.

  Note that if you say Y here and choose architecture "586" or
  "Pentium" under "Processor family", the kernel will not work on 486
  architectures. Similarly, multiprocessor kernels for the "PPro"
  architecture may not work on all Pentium based boards.

  People using multiprocessor machines who say Y here should also say
  Y to "Enhanced Real Time Clock Support", below. The "Advanced Power
  Management" code will be disabled if you say Y here.

  See also the files Documentation/smp.tex, Documentation/smp.txt,
  Documentation/i386/IO-APIC.txt, Documentation/nmi_watchdog.txt and the 
  SMP-FAQ on the WWW at http://www.irisa.fr/prive/mentre/smp-faq/ .
  
  If you don't know what to do here, say N.
  
APIC and IO-APIC Support on Uniprocessors
CONFIG_X86_UP_IOAPIC
  APIC (Advanced Programmable Interrupt Controller) is a scheme for
  delivering hardware interrupt requests to the CPU. It is commonly
  used on systems with several CPU's. If you have a single-CPU system
  which uses APIC, you can say Y here to use it. If you say Y here
  even though your machine doesn't have APIC, then the kernel will
  still run with no slowdown at all.

  If you have system with several CPU's, you do not need to say Y
  here: APIC will be used automatically.

Kernel math emulation
CONFIG_MATH_EMULATION
  Linux can emulate a math coprocessor (used for floating point
  operations) if you don't have one. 486DX and Pentium processors have
  a math coprocessor built in, 486SX and 386 do not, unless you added
  a 487DX or 387, respectively. (The messages during boot time can
  give you some hints here ["man dmesg"].) Everyone needs either a
  coprocessor or this emulation. 

  If you don't have a math coprocessor, you need to say Y here; if you
  say Y here even though you have a coprocessor, the coprocessor will
  be used nevertheless. (This behavior can be changed with the kernel
  command line option "no387", which comes handy if your coprocessor
  is broken. Try "man bootparam" or see the documentation of your boot
  loader (lilo or loadlin) about how to pass options to the kernel at
  boot time.) This means that it is a good idea to say Y here if you
  intend to use this kernel on different machines.

  More information about the internals of the Linux math coprocessor
  emulation can be found in arch/i386/math-emu/README.

  If you are not sure, say Y; apart from resulting in a 66 KB bigger
  kernel, it won't hurt.

Timer and CPU usage LEDs
CONFIG_LEDS
  If you say Y here, the LEDs on your machine will be used
  to provide useful information about your current system status.

  If you are compiling a kernel for a NetWinder or EBSA-285, you will
  be able to select which LEDs are active using the options below. If
  you are compiling a kernel for the EBSA-110 or the LART however, the
  red LED will simply flash regularly to indicate that the system is
  still functional. It is safe to say Y here if you have a CATS
  system, but the driver will do nothing.

Timer LED
CONFIG_LEDS_TIMER
  If you say Y here, one of the system LEDs (the green one on the
  NetWinder, the amber one on the EBSA285, or the red one on the LART)
  will flash regularly to indicate that the system is still
  operational. This is mainly useful to kernel hackers who are
  debugging unstable kernels.

  The LART uses the same LED for both Timer LED and CPU usage LED
  functions. You may choose to use both, but the Timer LED function
  will overrule the CPU usage LED.

CPU usage LED
CONFIG_LEDS_CPU
  If you say Y here, the red LED will be used to give a good real
  time indication of CPU usage, by lighting whenever the idle task
  is not currently executing.

  The LART uses the same LED for both Timer LED and CPU usage LED
  functions. You may choose to use both, but the Timer LED function
  will overrule the CPU usage LED.

Kernel FP software completion (EXPERIMENTAL)
CONFIG_MATHEMU
  This option is required for IEEE compliant floating point arithmetic
  on the Alpha. The only time you would ever not say Y is to say M in
  order to debug the code. Say Y unless you know what you are doing.

High Memory support
CONFIG_NOHIGHMEM
  Linux can use up to 64 Gigabytes of physical memory on x86 systems.
  However, the address space of 32-bit x86 processors is only 4
  Gigabytes large. That means that, if you have a large amount of
  physical memory, not all of it can be "permanently mapped" by the
  kernel. The physical memory that's not permanently mapped is called
  "high memory".

  If you are compiling a kernel which will never run on a machine with
  more than 1 Gigabyte total physical RAM, answer "off" here (default
  choice and suitable for most users). This will result in a "3GB/1GB"
  split: 3GB are mapped so that each process sees a 3GB virtual memory
  space and the remaining part of the 4GB virtual memory space is used
  by the kernel to permanently map as much physical memory as
  possible.

  If the machine has between 1 and 4 Gigabytes physical RAM, then
  answer "4GB" here.

  If more than 4 Gigabytes is used then answer "64GB" here. This
  selection turns Intel PAE (Physical Address Extension) mode on.
  PAE implements 3-level paging on IA32 processors. PAE is fully
  supported by Linux, PAE mode is implemented on all recent Intel
  processors (Pentium Pro and better). NOTE: If you say "64GB" here,
  then the kernel will not boot on CPUs that don't support PAE!

  The actual amount of total physical memory will either be
  auto detected or can be forced by using a kernel command line option
  such as "mem=256M". (Try "man bootparam" or see the documentation of
  your boot loader (lilo or loadlin) about how to pass options to the
  kernel at boot time.) 

  If unsure, say "off".

Normal PC floppy disk support
CONFIG_BLK_DEV_FD
  If you want to use the floppy disk drive(s) of your PC under Linux,
  say Y. Information about this driver, especially important for IBM
  Thinkpad users, is contained in Documentation/floppy.txt. That file
  also contains the location of the Floppy driver FAQ as well as
  location of the fdutils package used to configure additional
  parameters of the driver at run time.

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called floppy.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt.

Support for PowerMac floppy
CONFIG_MAC_FLOPPY
  If you have a SWIM-3 (Super Woz Integrated Machine 3; from Apple)
  floppy controller, say Y here. Most commonly found in PowerMacs.

RAM disk support
CONFIG_BLK_DEV_RAM
  Saying Y here will allow you to use a portion of your RAM memory as
  a block device, so that you can make file systems on it, read and
  write to it and do all the other things that you can do with normal
  block devices (such as hard drives). It is usually used to load and
  store a copy of a minimal root file system off of a floppy into RAM
  during the initial install of Linux. 

  Note that the kernel command line option "ramdisk=XX" is now
  obsolete. For details, read Documentation/ramdisk.txt.

  If you want to compile this as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M and read Documentation/modules.txt. The module will be called
  rd.o. 

  Most normal users won't need the RAM disk functionality, and can
  thus say N here.

Initial RAM disk (initrd) support
CONFIG_BLK_DEV_INITRD
  The initial RAM disk is a RAM disk that is loaded by the boot loader
  (loadlin or lilo) and that is mounted as root before the normal boot
  procedure. It is typically used to load modules needed to mount the
  "real" root file system, etc. See Documentation/initrd.txt for
  details.

Loop device support
CONFIG_BLK_DEV_LOOP
  Saying Y here will allow you to use a regular file as a block
  device; you can then create a file system on that block device and
  mount it just as you would mount other block devices such as hard
  drive partitions, CDROM drives or floppy drives. The loop devices
  are block special device files with major number 7 and typically
  called /dev/loop0, /dev/loop1 etc.

  This is useful if you want to check an ISO 9660 file system before
  burning the CD, or if you want to use floppy images without first
  writing them to floppy. Furthermore, some Linux distributions avoid
  the need for a dedicated Linux partition by keeping their complete
  root file system inside a DOS FAT file using this loop device
  driver. 

  The loop device driver can also be used to "hide" a file system in a
  disk partition, floppy, or regular file, either using encryption
  (scrambling the data) or steganography (hiding the data in the low
  bits of, say, a sound file). This is also safe if the file resides
  on a remote file server. If you want to do this, you will first have
  to acquire and install a kernel patch from
  ftp://ftp.kerneli.org/pub/kerneli/ , and then you need to
  say Y to this option.

  Note that alternative ways to use encrypted file systems are
  provided by the cfs package, which can be gotten from
  ftp://ftp.kerneli.org/pub/kerneli/net-source/ , and the newer tcfs
  package, available at http://tcfs.dia.unisa.it/ . You do not need to
  say Y here if you want to use one of these. However, using cfs
  requires saying Y to "NFS file system support" below while using
  tcfs requires applying a kernel patch. An alternative steganography
  solution is provided by StegFS, also available from
  ftp://ftp.kerneli.org/pub/kerneli/net-source/ .

  To use the loop device, you need the losetup utility and a recent
  version of the mount program, both contained in the util-linux
  package. The location and current version number of util-linux is
  contained in the file Documentation/Changes.

  Note that this loop device has nothing to do with the loopback
  device used for network connections from the machine to itself.

  If you want to compile this driver as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt. The module will be
  called loop.o.

  Most users will answer N here.

Network Block Device support
CONFIG_BLK_DEV_NBD
  Saying Y here will allow your computer to be a client for network
  block devices, i.e. it will be able to use block devices exported by
  servers (mount file systems on them etc.). Communication between
  client and server works over TCP/IP networking, but to the client
  program this is hidden: it looks like a regular local file access to
  a block device special file such as /dev/nd0. 

  Network block devices also allows you to run a block-device in
  userland (making server and client physically the same computer,
  communicating using the loopback network device).
  
  Read Documentation/nbd.txt for more information, especially about
  where to find the server code, which runs in user space and does not
  need special kernel support.

  Note that this has nothing to do with the network file systems NFS
  or Coda; you can say N here even if you intend to use NFS or Coda.

  If you want to compile this driver as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt. The module will be
  called nbd.o.

  If unsure, say N.

ATA/IDE/MFM/RLL support
CONFIG_IDE
  If you say Y here, your kernel will be able to manage low cost mass
  storage units such as ATA/(E)IDE and ATAPI units. The most common
  cases are IDE hard drives and ATAPI CDROM drives.

  If your system is pure SCSI and doesn't use these interfaces, you
  can say N here.
 
  Integrated Disk Electronics (IDE aka ATA-1) is a connecting standard
  for mass storage units such as hard disks. It was designed by
  Western Digital and Compaq Computer in 1984. It was then named
  ST506. Quite a number of disks use the IDE interface.
	
  AT Attachment (ATA) is the superset of the IDE specifications.
  ST506 was also called ATA-1.

  Fast-IDE is ATA-2 (also named Fast ATA), Enhanced IDE (EIDE) is
  ATA-3. It provides support for larger disks (up to 8.4GB by means of
  the LBA standard), more disks (4 instead of 2) and for other mass
  storage units such as tapes and cdrom. UDMA/33 (aka UltraDMA/33) is
  ATA-4 and provides faster (and more CPU friendly) transfer modes
  than previous PIO (Programmed processor Input/Output) from previous
  ATA/IDE standards by means of fast DMA controllers.

  ATA Packet Interface (ATAPI) is a protocol used by EIDE tape and
  CDROM drives, similar in many respects to the SCSI protocol.
  
  SMART IDE (Self Monitoring, Analysis and Reporting Technology) was
  designed in order to prevent data corruption and disk crash by
  detecting pre hardware failure conditions (heat, access time, and
  the like...). Disks built since June 1995 may follow this
  standard. The kernel itself don't manage this; however there are
  quite a number of user programs such as smart that can query the
  status of SMART parameters disk.

  If you want to compile this driver as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt. The module will be
  called ide.o.

  For further information, please read Documentation/ide.txt.

  If unsure, say Y.

Enhanced IDE/MFM/RLL disk/cdrom/tape/floppy support
CONFIG_BLK_DEV_IDE
  If you say Y here, you will use the full-featured IDE driver to
  control up to ten ATA/IDE interfaces, each being able to serve a
  "master" and a "slave" device, for a total of up to twenty ATA/IDE
  disk/cdrom/tape/floppy drives.

  Useful information about large (>540 MB) IDE disks, multiple
  interfaces, what to do if ATA/IDE devices are not automatically
  detected, sound card ATA/IDE ports, module support, and other
  topics, is contained in Documentation/ide.txt. For detailed
  information about hard drives, consult the Disk-HOWTO and the
  Multi-Disk-HOWTO, available from
  http://www.linuxdoc.org/docs.html#howto .

  To fine-tune ATA/IDE drive/interface parameters for improved
  performance, look for the hdparm package at
  ftp://metalab.unc.edu/pub/Linux/kernel/patches/diskdrives/ .

  If you want to compile this driver as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt and
  Documentation/ide.txt. The module will be called ide-mod.o. Do not
  compile this driver as a module if your root file system (the one
  containing the directory /) is located on an IDE device.

  If you have one or more IDE drives, say Y or M here. If your system
  has no IDE drives, or if memory requirements are really tight, you
  could say N here, and select the "Old hard disk driver" below
  instead to save about 13 KB of memory in the kernel.

Old hard disk (MFM/RLL/IDE) driver
CONFIG_BLK_DEV_HD_ONLY
  There are two drivers for MFM/RLL/IDE hard disks. Most people use
  the newer enhanced driver, but this old one is still around for two
  reasons. Some older systems have strange timing problems and seem to
  work only with the old driver (which itself does not work with some
  newer systems). The other reason is that the old driver is smaller,
  since it lacks the enhanced functionality of the new one. This makes
  it a good choice for systems with very tight memory restrictions, or
  for systems with only older MFM/RLL/ESDI drives. Choosing the old
  driver can save 13 KB or so of kernel memory. 

  If you are unsure, then just choose the Enhanced IDE/MFM/RLL driver
  instead of this one. For more detailed information, read the
  Disk-HOWTO, available from
  http://www.linuxdoc.org/docs.html#howto .

Use old disk-only driver on primary interface
CONFIG_BLK_DEV_HD_IDE
  There are two drivers for MFM/RLL/IDE disks. Most people use just
  the new enhanced driver by itself. This option however installs the
  old hard disk driver to control the primary IDE/disk interface in
  the system, leaving the new enhanced IDE driver to take care of only
  the 2nd/3rd/4th IDE interfaces. Doing this will prevent you from
  having an IDE/ATAPI CDROM or tape drive connected to the primary IDE
  interface. Choosing this option may be useful for older systems
  which have MFM/RLL/ESDI controller+drives at the primary port
  address (0x1f0), along with IDE drives at the secondary/3rd/4th port
  addresses. 

  Normally, just say N here; you will then use the new driver for all
  4 interfaces.

Include IDE/ATA-2 DISK support
CONFIG_BLK_DEV_IDEDISK
  This will include enhanced support for MFM/RLL/IDE hard disks. If
  you have a MFM/RLL/IDE disk, and there is no special reason to use
  the old hard disk driver instead, say Y. If you have an SCSI-only
  system, you can say N here.

  If you want to compile this driver as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt. The module will be
  called ide-disk.o. Do not compile this driver as a module if your
  root file system (the one containing the directory /) is located on
  the IDE disk. If unsure, say Y.

Use multi-mode by default
CONFIG_IDEDISK_MULTI_MODE
  If you get this error, try to say Y here:

  hda: set_multmode: status=0x51 { DriveReady SeekComplete Error }
  hda: set_multmode: error=0x04 { DriveStatusError }

  If in doubt, say N.

Include IDE/ATAPI CDROM support
CONFIG_BLK_DEV_IDECD
  If you have a CDROM drive using the ATAPI protocol, say Y. ATAPI is
  a newer protocol used by IDE CDROM and TAPE drives, similar to the
  SCSI protocol. Most new CDROM drives use ATAPI, including the
  NEC-260, Mitsumi FX400, Sony 55E, and just about all non-SCSI
  double(2X) or better speed drives.

  If you say Y here, the CDROM drive will be identified at boot time
  along with other IDE devices, as "hdb" or "hdc", or something
  similar (check the boot messages with dmesg). If this is your only
  CDROM drive, you can say N to all other CDROM options, but be sure
  to say Y or M to "ISO 9660 CDROM file system support".

  Read the CDROM-HOWTO, available from
  http://www.linuxdoc.org/docs.html#howto and the file
  Documentation/cdrom/ide-cd. Note that older versions of lilo (the
  Linux boot loader) cannot properly deal with IDE/ATAPI CDROMs, so
  install lilo-16 or higher, available from
  ftp://metalab.unc.edu/pub/Linux/system/boot/lilo .

  If you want to compile the driver as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt. The module will be
  called ide-cd.o.

Include IDE/ATAPI TAPE support
CONFIG_BLK_DEV_IDETAPE
  If you have an IDE tape drive using the ATAPI protocol, say Y.
  ATAPI is a newer protocol used by IDE tape and CDROM drives, similar
  to the SCSI protocol. If you have an SCSI tape drive however, you
  can say N here.

  You should also say Y if you have an OnStream DI-30 tape drive; this
  will not work with the SCSI protocol, until there is support for the
  SC-30 and SC-50 versions.

  If you say Y here, the tape drive will be identified at boot time
  along with other IDE devices, as "hdb" or "hdc", or something
  similar, and will be mapped to a character device such as "ht0"
  (check the boot messages with dmesg). Be sure to consult the
  drivers/ide/ide-tape.c and Documentation/ide.txt files for usage
  information.

  If you want to compile the driver as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt. The module will be
  called ide-tape.o.

Include IDE/ATAPI FLOPPY support
CONFIG_BLK_DEV_IDEFLOPPY
  If you have an IDE floppy drive which uses the ATAPI protocol,
  answer Y. ATAPI is a newer protocol used by IDE CDROM/tape/floppy
  drives, similar to the SCSI protocol. 

  The LS-120 and the IDE/ATAPI Iomega ZIP drive are also supported by
  this driver. For information about jumper settings and the question
  of when a ZIP drive uses a partition table, see
  http://www.win.tue.nl/~aeb/linux/zip/zip-1.html .
  (ATAPI PD-CD/CDR drives are not supported by this driver; support
  for PD-CD/CDR drives is available if you answer Y to 
  "SCSI emulation support", below).

  If you say Y here, the FLOPPY drive will be identified along with
  other IDE devices, as "hdb" or "hdc", or something similar (check
  the boot messages with dmesg).

  If you want to compile the driver as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt. The module will be
  called ide-floppy.o.

SCSI emulation support
CONFIG_BLK_DEV_IDESCSI
  This will provide SCSI host adapter emulation for IDE ATAPI devices,
  and will allow you to use a SCSI device driver instead of a native
  ATAPI driver.

  This is useful if you have an ATAPI device for which no native
  driver has been written (for example, an ATAPI PD-CD or CDR drive);
  you can then use this emulation together with an appropriate SCSI
  device driver. In order to do this, say Y here and to "SCSI support"
  and "SCSI generic support", below. You must then provide the kernel
  command line "hdx=scsi" (try "man bootparam" or see the
  documentation of your boot loader (lilo or loadlin) about how to
  pass options to the kernel at boot time) for devices if you want the
  native EIDE sub-drivers to skip over the native support, so that
  this SCSI emulation can be used instead. This is required for use of
  CD-RW's.

  Note that this option does NOT allow you to attach SCSI devices to a
  box that doesn't have a SCSI host adapter installed.

  If both this SCSI emulation and native ATAPI support are compiled
  into the kernel, the native support will be used.

ISA-PNP EIDE support
CONFIG_BLK_DEV_ISAPNP
  If you have an ISA EIDE card that is PnP (Plug and Play) and
  requires setup first before scanning for devices, say Y here.

  If unsure, say N.

CMD640 chipset bugfix/support
CONFIG_BLK_DEV_CMD640
  The CMD-Technologies CMD640 IDE chip is used on many common 486 and
  Pentium motherboards, usually in combination with a "Neptune" or
  "SiS" chipset. Unfortunately, it has a number of rather nasty
  design flaws that can cause severe data corruption under many common
  conditions. Say Y here to include code which tries to automatically
  detect and correct the problems under Linux. This option also
  enables access to the secondary IDE ports in some CMD640 based
  systems. 

  This driver will work automatically in PCI based systems (most new
  systems have PCI slots). But if your system uses VESA local bus
  (VLB) instead of PCI, you must also supply a kernel boot parameter
  to enable the CMD640 bugfix/support: "ide0=cmd640_vlb". (Try "man
  bootparam" or see the documentation of your boot loader about how to
  pass options to the kernel.)

  The CMD640 chip is also used on add-in cards by Acculogic, and on
  the "CSA-6400E PCI to IDE controller" that some people have. For
  details, read Documentation/ide.txt. 

CMD640 enhanced support
CONFIG_BLK_DEV_CMD640_ENHANCED
  This option includes support for setting/autotuning PIO modes and
  prefetch on CMD640 IDE interfaces. For details, read
  Documentation/ide.txt. If you have a CMD640 IDE interface and your
  BIOS does not already do this for you, then say Y here. Otherwise
  say N.

RZ1000 chipset bugfix/support
CONFIG_BLK_DEV_RZ1000
  The PC-Technologies RZ1000 IDE chip is used on many common 486 and
  Pentium motherboards, usually along with the "Neptune" chipset.
  Unfortunately, it has a rather nasty design flaw that can cause
  severe data corruption under many conditions. Say Y here to include
  code which automatically detects and corrects the problem under
  Linux. This may slow disk throughput by a few percent, but at least
  things will operate 100% reliably. 

Generic PCI IDE chipset support
CONFIG_BLK_DEV_IDEPCI
  Say Y here for PCI systems which use IDE drive(s).
  This option helps the IDE driver to automatically detect and
  configure all PCI-based IDE interfaces in your system.
  
Support for sharing PCI IDE interrupts
CONFIG_IDEPCI_SHARE_IRQ
  Some ATA/IDE chipsets have hardware support which allows for
  sharing a single IRQ with other cards. To enable support for
  this in the ATA/IDE driver, say Y here.

  It is safe to say Y to this question, in most cases.
  If unsure, say N.

Generic PCI bus-master DMA support
CONFIG_BLK_DEV_IDEDMA_PCI
  If your PCI system uses IDE drive(s) (as opposed to SCSI, say) and
  is capable of bus-master DMA operation (most Pentium PCI systems),
  you will want to say Y here to reduce CPU overhead. You can then use
  the "hdparm" utility to enable DMA for drives for which it was not
  enabled automatically. By default, DMA is not enabled automatically
  for these drives, but you can change that by saying Y to the
  following question "Use DMA by default when available". You can get
  the latest version of the hdparm utility from
  ftp://metalab.unc.edu/pub/Linux/system/hardware/ .

  Read the comments at the beginning of drivers/ide/ide-dma.c and
  the file Documentation/ide.txt for more information.

  It is safe to say Y to this question.

Good-Bad DMA Model-Firmware (EXPERIMENTAL)
CONFIG_IDEDMA_NEW_DRIVE_LISTINGS
  If you say Y here, the model and firmware revision of your drive
  will be compared against a blacklist of buggy drives that claim to
  be (U)DMA capable but aren't. This is a blanket on/off test with no
  speed limit options.

  Straight GNU GCC 2.7.3/2.8.X compilers are known to be safe;
  whereas, many versions of EGCS have a problem and miscompile if you
  say Y here.

  If in doubt, say N.

Boot off-board chipsets first support
CONFIG_BLK_DEV_OFFBOARD
  Normally, IDE controllers built into the motherboard (on-board
  controllers) are assigned to ide0 and ide1 while those on add-in PCI
  cards (off-board controllers) are relegated to ide2 and ide3.
  Answering Y here will allow you to reverse the situation, with
  off-board controllers on ide0/1 and on-board controllers on ide2/3.
  This can improve the usability of some boot managers such as lilo
  when booting from a drive on an off-board controller.

  If you say Y here, and you actually want to reverse the device scan
  order as explained above, you also need to issue the kernel command
  line option "ide=reverse". (Try "man bootparam" or see the
  documentation of your boot loader (lilo or loadlin) about how to
  pass options to the kernel at boot time.)

  Note that, if you do this, the order of the hd* devices will be
  rearranged which may require modification of fstab and other files.

  If in doubt, say N.

Use DMA by default when available
CONFIG_IDEDMA_PCI_AUTO
  Prior to kernel version 2.1.112, Linux used to automatically use
  DMA for IDE drives and chipsets which support it. Due to concerns
  about a couple of cases where buggy hardware may have caused damage,
  the default is now to NOT use DMA automatically. To revert to the
  previous behaviour, say Y to this question.

  If you suspect your hardware is at all flakey, say N here.
  Do NOT email the IDE kernel people regarding this issue!

  It is normally safe to answer Y to this question unless your
  motherboard uses a VIA VP2 chipset, in which case you should say N.

IGNORE word93 Validation BITS
CONFIG_IDEDMA_IVB
  Since various rules were applied and created ... et al. as it relates
  the detection of vaild cable signals.  This is a result of unclear terms
  in ATA-4 and ATA-5 standards.

  It is normally safe to answer Y; however, the default is N.

Various ATA, Work(s) In Progress (EXPERIMENTAL)
CONFIG_IDEDMA_PCI_WIP
  If you enable this you will be able to use and test highly
  developmental projects. If you say N, this configure script will
  simply skip those options.

  It is SAFEST to say N to this question.

3ware Hardware ATA-RAID support
CONFIG_BLK_DEV_3W_XXXX_RAID
  3ware is the only hardware ATA-Raid product in Linux to date.
  This card is 2,4, or 8 channel master mode support only.
  SCSI support required!!!

  http://www.3ware.com/

  Please read the comments at the top of drivers/scsi/3w-xxxx.c  

AEC62XX chipset support
CONFIG_BLK_DEV_AEC62XX
  This driver adds up to 4 more EIDE devices sharing a single
  interrupt. This add-on card is a bootable PCI UDMA controller. In
  order to get this card to initialize correctly in some cases, you
  should say Y here, and preferably also to "Use DMA by default when
  available".

  The ATP850U/UF is an UltraDMA 33 chipset base.
  The ATP860 is an UltraDMA 66 chipset base.
  The ATP860M(acintosh) version is an UltraDMA 66 chipset base.

  Please read the comments at the top of drivers/ide/aec62xx.c
  If you say Y here, then say Y to "Use DMA by default when available" as
  well.

AEC62XX Tuning support
CONFIG_AEC62XX_TUNING
  Please read the comments at the top of drivers/ide/aec62xx.c  
  If unsure, say N.

ALI M15x3 chipset support
CONFIG_BLK_DEV_ALI15X3
  This driver ensures (U)DMA support for ALI 1533, 1543 and 1543C
  onboard chipsets.  It also tests for Simplex mode and enables
  normal dual channel support.

  If you say Y here, you also need to say Y to "Use DMA by default
  when available", above.
  Please read the comments at the top of drivers/ide/alim15x3.c

  If unsure, say N.

ALI M15x3 WDC support (DANGEROUS)
CONFIG_WDC_ALI15X3
  This allows for UltraDMA support for WDC drives that ignore CRC
  checking. You are a fool for enabling this option, but there have
  been requests. DO NOT COMPLAIN IF YOUR DRIVE HAS FS CORRUPTION, IF
  YOU ENABLE THIS! No one will listen, just laugh for ignoring this
  SERIOUS WARNING.

  Using this option can allow WDC drives to run at ATA-4/5 transfer
  rates with only an ATA-2 support structure.

  SAY NO!

AMD7409 chipset support
CONFIG_BLK_DEV_AMD7409
  This driver ensures (U)DMA support for the AMD756 Viper chipset.

  If you say Y here, you also need to say Y to "Use DMA by default
  when available", above.
  Please read the comments at the top of drivers/ide/amd7409.c

  If unsure, say N.

AMD Viper ATA-66 Override support (WIP)
CONFIG_AMD7409_OVERRIDE
  This option auto-forces the ata66 flag.
  This effect can be also invoked by calling "idex=ata66"
  If unsure, say N.

CMD64X chipset support
CONFIG_BLK_DEV_CMD64X
  Say Y here if you have an IDE controller which uses any of these
  chipsets: CMD643, CMD646, or CMD648.

CY82C693 chipset support
CONFIG_BLK_DEV_CY82C693
  This driver adds detection and support for the CY82C693 chipset
  used on Digital's PC-Alpha 164SX boards.

  If you say Y here, you need to say Y to "Use DMA by default
  when available" as well.

Cyrix CS5530 MediaGX chipset support
CONFIG_BLK_DEV_CS5530
  Include support for UDMA on the Cyrix MediaGX 5530 chipset. This
  will automatically be detected and configured if found.

  It is safe to say Y to this question.

  People with SCSI-only systems should say N here. If unsure, say Y.

HPT34X chipset support
CONFIG_BLK_DEV_HPT34X
  This driver adds up to 4 more EIDE devices sharing a single
  interrupt. The HPT343 chipset in its current form is a non-bootable
  controller; the HPT345/HPT363 chipset is a bootable (needs BIOS FIX)
  PCI UDMA controllers. This driver requires dynamic tuning of the
  chipset during the ide-probe at boot time. It is reported to support
  DVD II drives, by the manufacturer.

HPT34X AUTODMA support (WIP)
CONFIG_HPT34X_AUTODMA
  This is a dangerous thing to attempt currently! Please read the
  comments at the top of drivers/ide/hpt34x.c If you say Y here,
  then say Y to "Use DMA by default when available" as well.

  If unsure, say N.

HPT366 chipset support
CONFIG_BLK_DEV_HPT366
  HPT366 is an Ultra DMA chipset for ATA-66.
  HPT368 is an Ultra DMA chipset for ATA-66 RAID Based.
  HPT370 is an Ultra DMA chipset for ATA-100.
 
  This driver adds up to 4 more EIDE devices sharing a single
  interrupt. 

  The HPT366 chipset in its current form is bootable. One solution
  for this problem are special LILO commands for redirecting the
  reference to device 0x80. The other solution is to say Y to "Boot
  off-board chipsets first support" (CONFIG_BLK_DEV_OFFBOARD) unless
  your mother board has the chipset natively mounted. Regardless one
  should use the fore mentioned option and call at LILO or include
  "ide=reverse" in LILO's append-line.

  This driver requires dynamic tuning of the chipset during the
  ide-probe at boot. It is reported to support DVD II drives, by the
  manufacturer.

NS87415 support (EXPERIMENTAL)
CONFIG_BLK_DEV_NS87415
  This driver adds detection and support for the NS87415 chip
  (used in SPARC64, among others).

  Please read the comments at the top of drivers/ide/ns87415.c.

OPTi 82C621 enhanced support (EXPERIMENTAL)
CONFIG_BLK_DEV_OPTI621
  This is a driver for the OPTi 82C621 EIDE controller.
  Please read the comments at the top of drivers/ide/opti621.c.

ServerWorks OSB4 chipset support (EXPERIMENTAL)
CONFIG_BLK_DEV_OSB4
  This driver adds PIO/DMA support for the Serverworks OSB4 chipset

Intel PIIXn chipsets support
CONFIG_BLK_DEV_PIIX
  This driver adds PIO mode setting and tuning for all PIIX IDE
  controllers by Intel.  Since the BIOS can sometimes improperly tune
  PIO 0-4 mode settings, this allows dynamic tuning of the chipset
  via the standard end-user tool 'hdparm'.

  Please read the comments at the top of drivers/ide/piix.c.

  If you say Y here, you should also say Y to "PIIXn Tuning support",
  below.

  If unsure, say N.

PIIXn Tuning support
CONFIG_PIIX_TUNING
  This driver extension adds DMA mode setting and tuning for all PIIX
  IDE controllers by Intel. Since the BIOS can sometimes improperly
  set up the device/adapter combination and speed limits, it has
  become a necessity to back/forward speed devices as needed.

  Case 430HX/440FX PIIX3 need speed limits to reduce UDMA to DMA mode
  2 if the BIOS can not perform this task at initialization.

  If unsure, say N.

PROMISE PDC20246/PDC20262/PDC20267 support
CONFIG_BLK_DEV_PDC202XX
  Promise Ultra33 or PDC20246
  Promise Ultra66 or PDC20262
  Promise Ultra100 or PDC20265/PDC20267

  This driver adds up to 4 more EIDE devices sharing a single
  interrupt. This add-on card is a bootable PCI UDMA controller. Since
  multiple cards can be installed and there are BIOS ROM problems that
  happen if the BIOS revisions of all installed cards (three-max) do
  not match, the driver attempts to do dynamic tuning of the chipset
  at boot-time for max-speed. Ultra33 BIOS 1.25 or newer is required
  for more than one card. This card may require that you say Y to
  "Special UDMA Feature (EXPERIMENTAL)".

  If you say Y here, you need to say Y to "Use DMA by default when
  available" as well.

  Please read the comments at the top of drivers/ide/pdc202xx.c

  If unsure, say N.

Special UDMA Feature (EXPERIMENTAL)
CONFIG_PDC202XX_BURST
  For PDC20246, PDC20262, PDC20265 and PDC20267 Ultra DMA chipsets.
  Designed originally for PDC20246/Ultra33 that has BIOS setup
  failures when using 3 or more cards.

  Unknown for PDC20265/PDC20267 Ultra DMA 100.

  Please read the comments at the top of drivers/ide/pdc202xx.c

  If unsure, say N.

SiS5513 chipset support
CONFIG_BLK_DEV_SIS5513
  This driver ensures (U)DMA support for SIS5513 chipset based
  mainboards. SiS620/530 UDMA mode 4, SiS5600/5597 UDMA mode 2, all
  other DMA mode 2 limited chipsets are unsupported to date.

  If you say Y here, you need to say Y to "Use DMA by default when
  available" as well.

  Please read the comments at the top of drivers/ide/sis5513.c

SLC90E66 chipset support
CONFIG_BLK_DEV_SLC90E66
  This driver ensures (U)DMA support for Victroy66 SouthBridges for
  SMsC with Intel NorthBridges.  This is an Ultra66 based chipset.
  The nice thing about it is that you can mix Ultra/DMA/PIO devices
  and it will handle timing cycles.  Since this is an improved look-a-like
  to the PIIX4 it should be a nice addition.

  If you say Y here, you need to say Y to "Use DMA by default when
  available" as well.

  Please read the comments at the top of drivers/ide/slc90e66.c

Winbond SL82c105 support
CONFIG_BLK_DEV_SL82C105
  If you have a Winbond SL82c105 IDE controller, say Y here to enable
  special configuration for this chip. This is common on various CHRP
  motherboards, but could be used elsewhere. If in doubt, say Y.

Tekram TRM290 chipset support (EXPERIMENTAL)
CONFIG_BLK_DEV_TRM290
  This driver adds support for bus master DMA transfers
  using the Tekram TRM290 PCI IDE chip. Volunteers are
  needed for further tweaking and development.
  Please read the comments at the top of drivers/ide/trm290.c.

VIA82CXXX chipset support
CONFIG_BLK_DEV_VIA82CXXX
  This allows you to configure your chipset for a better use while
  running (U)DMA: it will allow you to enable efficiently the second
  channel dma usage, as it may not be set by BIOS. It allows you to
  pass a kernel command line at boot time in order to set fifo
  config. If no command line is provided, it will try to set fifo
  configuration at its best. It will allow you to get information from
  /proc/ide/via provided you enabled "proc" support.

  Please read the comments at the top of drivers/ide/via82cxxx.c

  If you say Y here, then say Y to "Use DMA by default when available"
  as well.

  If unsure, say N.

VIA82CXXX Tuning support (WIP)
CONFIG_VIA82CXXX_TUNING
  Please read the comments at the top of drivers/ide/via82cxxx.c

  If unsure, say N.

Other IDE chipset support
CONFIG_IDE_CHIPSETS
  Say Y here if you want to include enhanced support for various IDE
  interface chipsets used on motherboards and add-on cards. You can
  then pick your particular IDE chip from among the following options.
  This enhanced support may be necessary for Linux to be able to
  access the 3rd/4th drives in some systems. It may also enable
  setting of higher speed I/O rates to improve system performance with
  these chipsets. Most of these also require special kernel boot
  parameters to actually turn on the support at runtime; you can find
  a list of these in the file Documentation/ide.txt.
  
  People with SCSI-only systems can say N here. 

Generic 4 drives/port support
CONFIG_BLK_DEV_4DRIVES
  Certain older chipsets, including the Tekram 690CD, use a single set
  of I/O ports at 0x1f0 to control up to four drives, instead of the
  customary two drives per port. Support for this can be enabled at
  runtime using the "ide0=four" kernel boot parameter if you say Y
  here.

ALI M14xx support
CONFIG_BLK_DEV_ALI14XX
  This driver is enabled at runtime using the "ide0=ali14xx" kernel
  boot parameter. It enables support for the secondary IDE interface
  of the ALI M1439/1443/1445/1487/1489 chipsets, and permits faster
  I/O speeds to be set as well. See the files Documentation/ide.txt
  and drivers/ide/ali14xx.c for more info.

DTC-2278 support
CONFIG_BLK_DEV_DTC2278
  This driver is enabled at runtime using the "ide0=dtc2278" kernel
  boot parameter. It enables support for the secondary IDE interface
  of the DTC-2278 card, and permits faster I/O speeds to be set as
  well. See the Documentation/ide.txt and drivers/ide/dtc2278.c
  files for more info.

Holtek HT6560B support
CONFIG_BLK_DEV_HT6560B
  This driver is enabled at runtime using the "ide0=ht6560b" kernel
  boot parameter. It enables support for the secondary IDE interface
  of the Holtek card, and permits faster I/O speeds to be set as well.
  See the Documentation/ide.txt and drivers/ide/ht6560b.c files for
  more info.

PROMISE DC4030 support (EXPERIMENTAL)
CONFIG_BLK_DEV_PDC4030
  This driver provides support for the secondary IDE interface and
  cache of Promise IDE chipsets, e.g. DC4030 and DC5030. This driver
  is known to incur timeouts/retries during heavy I/O to drives
  attached to the secondary interface. CDROM and TAPE devices are not
  supported yet. This driver is enabled at runtime using the
  "ide0=dc4030" kernel boot parameter. See the Documentation/ide.txt
  and drivers/ide/pdc4030.c files for more info.

QDI QD6580 support
CONFIG_BLK_DEV_QD6580
  This driver is enabled at runtime using the "ide0=qd6580" kernel
  boot parameter. It permits faster I/O speeds to be set. See the
  files Documentation/ide.txt and drivers/ide/qd6580.c for more
  info.

UMC 8672 support
CONFIG_BLK_DEV_UMC8672
  This driver is enabled at runtime using the "ide0=umc8672" kernel
  boot parameter. It enables support for the secondary IDE interface
  of the UMC-8672, and permits faster I/O speeds to be set as well.
  See the files Documentation/ide.txt and drivers/ide/umc8672.c for
  more info.

Amiga builtin Gayle IDE interface support
CONFIG_BLK_DEV_GAYLE
  This is the IDE driver for the builtin IDE interface on some Amiga
  models. It supports both the `A1200 style' (used in A600 and A1200)
  and `A4000 style' (used in A4000 and A4000T) of the Gayle IDE
  interface. Say Y if you have such an Amiga model and want to use IDE
  devices (hard disks, CD-ROM drives, etc.) that are connected to the
  builtin IDE interface.

Falcon IDE interface support
CONFIG_BLK_DEV_FALCON_IDE
  This is the IDE driver for the builtin IDE interface on the Atari
  Falcon. Say Y if you have a Falcon and want to use IDE devices (hard
  disks, CD-ROM drives, etc.) that are connected to the builtin IDE
  interface.

Amiga Buddha/Catweasel IDE interface support (EXPERIMENTAL)
CONFIG_BLK_DEV_BUDDHA
  This is the IDE driver for the IDE interfaces on the Buddha and
  Catweasel expansion boards.  It supports up to two interfaces on the
  Buddha and three on the Catweasel.

  Say Y if you have a Buddha or Catweasel expansion board and want to
  use IDE devices (hard disks, CD-ROM drives, etc.) that are connected
  to one of its IDE interfaces.

Amiga IDE Doubler support (EXPERIMENTAL)
CONFIG_BLK_DEV_IDEDOUBLER
  This driver provides support for the so-called `IDE doublers' (made
  by various manufacturers, e.g. Eyetech) that can be connected to the
  builtin IDE interface of some Amiga models. Using such an IDE
  doubler, you can connect up to four instead of two IDE devices on
  the Amiga's builtin IDE interface.

  Note that the normal Amiga Gayle IDE driver may not work correctly
  if you have an IDE doubler and don't enable this driver!

  Say Y if you have an IDE doubler.  The driver is enabled at kernel
  runtime using the "ide=doubler" kernel boot parameter.

Support for PowerMac IDE devices (must also enable IDE)
CONFIG_BLK_DEV_IDE_PMAC
  This driver provides support for the built-in IDE controller on most
  of the recent Apple Power Macintoshes and PowerBooks.
  If unsure, say Y.

PowerMac IDE DMA support
CONFIG_BLK_DEV_IDEDMA_PMAC
  This option allows the driver for the built-in IDE controller on
  Power Macintoshes and PowerBooks to use DMA (direct memory access)
  to transfer data to and from memory.  Saying Y is safe and improves
  performance.

Use DMA by default
CONFIG_BLK_DEV_IDEDMA_PMAC_AUTO
  This option allows the driver for the built-in IDE controller on
  Power Macintoshes and PowerBooks to use DMA automatically, without
  it having to be explicitly enabled.  This option is provided because
  of concerns about a couple of cases where using DMA on buggy PC
  hardware may have caused damage.  Saying Y should be safe on all
  Apple machines.

Macintosh Quadra/Powerbook IDE interface support
CONFIG_BLK_DEV_MAC_IDE
  This is the IDE driver for the builtin IDE interface on some m68k
  Macintosh models. It supports both the `Quadra style' (used in
  Quadra/ Centris 630 and Performa 588 models) and `Powerbook style'
  (used in the Powerbook 150 and 190 models) IDE interface.

  Say Y if you have such an Macintosh model and want to use IDE
  devices (hard disks, CD-ROM drives, etc.) that are connected to the
  builtin IDE interface.

ICS IDE interface support
CONFIG_BLK_DEV_IDE_ICSIDE
  On Acorn systems, say Y here if you wish to use the ICS IDE
  interface card.  This is not required for ICS partition support.
  If you are unsure, say N to this.

ICS DMA support
CONFIG_BLK_DEV_IDEDMA_ICS
  Say Y here if you want to add DMA (Direct Memory Access) support to
  the ICS IDE driver.

Use ICS DMA by default
CONFIG_IDEDMA_ICS_AUTO
  Prior to kernel version 2.1.112, Linux used to automatically use
  DMA for IDE drives and chipsets which support it. Due to concerns
  about a couple of cases where buggy hardware may have caused damage,
  the default is now to NOT use DMA automatically. To revert to the
  previous behaviour, say Y to this question.

  If you suspect your hardware is at all flakey, say N here.
  Do NOT email the IDE kernel people regarding this issue!

XT hard disk support
CONFIG_BLK_DEV_XD
  Very old 8 bit hard disk controllers used in the IBM XT computer
  will be supported if you say Y here. 

  If you want to compile the driver as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt. The module will be
  called xd.o. 

  It's pretty unlikely that you have one of these: say N.

PS/2 ESDI hard disk support
CONFIG_BLK_DEV_PS2
  Say Y here if you have a PS/2 machine with a MCA bus and an ESDI
  hard disk.
  
  If you want to compile the driver as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt. The module will be
  called ps2esdi.o.

Mylex DAC960/DAC1100 PCI RAID Controller support
CONFIG_BLK_DEV_DAC960
  This driver adds support for the Mylex DAC960, AcceleRAID, and
  eXtremeRAID PCI RAID controllers. See the file
  Documentation/README.DAC960 for further information about this
  driver.

  If you want to compile the driver as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt.  The module will be
  called DAC960.o. 

Parallel port IDE device support
CONFIG_PARIDE
  There are many external CD-ROM and disk devices that connect through
  your computer's parallel port. Most of them are actually IDE devices
  using a parallel port IDE adapter. This option enables the PARIDE
  subsystem which contains drivers for many of these external drives.
  Read Documentation/paride.txt for more information.

  If you have said Y to the "Parallel-port support" configuration
  option, you may share a single port between your printer and other
  parallel port devices. Answer Y to build PARIDE support into your
  kernel, or M if you would like to build it as a loadable module. If
  your parallel port support is in a loadable module, you must build
  PARIDE as a module. If you built PARIDE support into your kernel,
  you may still build the individual protocol modules and high-level
  drivers as loadable modules. If you build this support as a module,
  it will be called paride.o.

  To use the PARIDE support, you must say Y or M here and also to at
  least one high-level driver (e.g. "Parallel port IDE disks",
  "Parallel port ATAPI CD-ROMs", "Parallel port ATAPI disks" etc.) and
  to at least one protocol driver (e.g. "ATEN EH-100 protocol",
  "MicroSolutions backpack protocol", "DataStor Commuter protocol"
  etc.).

Parallel port IDE disks
CONFIG_PARIDE_PD
  This option enables the high-level driver for IDE-type disk devices 
  connected through a parallel port. If you chose to build PARIDE 
  support into your kernel, you may answer Y here to build in the 
  parallel port IDE driver, otherwise you should answer M to build 
  it as a loadable module. The module will be called pd.o. You 
  must also have at least one parallel port protocol driver in your 
  system. Among the devices supported by this driver are the SyQuest 
  EZ-135, EZ-230 and SparQ drives, the Avatar Shark and the backpack
  hard drives from MicroSolutions.

Parallel port ATAPI CD-ROMs
CONFIG_PARIDE_PCD
  This option enables the high-level driver for ATAPI CD-ROM devices
  connected through a parallel port. If you chose to build PARIDE
  support into your kernel, you may answer Y here to build in the
  parallel port ATAPI CD-ROM driver, otherwise you should answer M to
  build it as a loadable module. The module will be called pcd.o. You
  must also have at least one parallel port protocol driver in your
  system. Among the devices supported by this driver are the
  MicroSolutions backpack CD-ROM drives and the Freecom Power CD. If
  you have such a CD-ROM drive, you should also say Y or M to "ISO
  9660 CDROM file system support" below, because that's the file
  system used on CDROMs.

Parallel port ATAPI disks
CONFIG_PARIDE_PF
  This option enables the high-level driver for ATAPI disk devices
  connected through a parallel port. If you chose to build PARIDE
  support into your kernel, you may answer Y here to build in the
  parallel port ATAPI disk driver, otherwise you should answer M
  to build it as a loadable module. The module will be called pf.o.
  You must also have at least one parallel port protocol driver in
  your system. Among the devices supported by this driver are the
  MicroSolutions backpack PD/CD drive and the Imation Superdisk
  LS-120 drive.

Parallel port ATAPI tapes
CONFIG_PARIDE_PT
  This option enables the high-level driver for ATAPI tape devices
  connected through a parallel port. If you chose to build PARIDE
  support into your kernel, you may answer Y here to build in the
  parallel port ATAPI disk driver, otherwise you should answer M
  to build it as a loadable module. The module will be called pt.o.
  You must also have at least one parallel port protocol driver in
  your system. Among the devices supported by this driver is the
  parallel port version of the HP 5GB drive.

Parallel port generic ATAPI devices
CONFIG_PARIDE_PG
  This option enables a special high-level driver for generic ATAPI
  devices connected through a parallel port. The driver allows user
  programs, such as cdrecord, to send ATAPI commands directly to a
  device. 

  If you chose to build PARIDE support into your kernel, you may
  answer Y here to build in the parallel port generic ATAPI driver,
  otherwise you should answer M to build it as a loadable module. The
  module will be called pg.o.

  You must also have at least one parallel port protocol driver in
  your system.

  This driver implements an API loosely related to the generic SCSI
  driver. See include/linux/pg.h for details.

  You can obtain the most recent version of cdrecord from
  ftp://ftp.fokus.gmd.de/pub/unix/cdrecord/ . Versions 1.6.1a3 and
  later fully support this driver.

ATEN EH-100 protocol
CONFIG_PARIDE_ATEN
  This option enables support for the ATEN EH-100 parallel port IDE
  protocol. This protocol is used in some inexpensive low performance
  parallel port kits made in Hong Kong. If you chose to build PARIDE
  support into your kernel, you may answer Y here to build in the
  protocol driver, otherwise you should answer M to build it as a
  loadable module. The module will be called aten.o. You must also
  have a high-level driver for the type of device that you want to
  support.

MicroSolutions backpack protocol
CONFIG_PARIDE_BPCK
  This option enables support for the MicroSolutions backpack parallel
  port IDE protocol. If you chose to build PARIDE support into your
  kernel, you may answer Y here to build in the protocol driver,
  otherwise you should answer M to build it as a loadable module. The
  module will be called bpck.o. You must also have a high-level driver
  for the type of device that you want to support.

DataStor Commuter protocol
CONFIG_PARIDE_COMM
  This option enables support for the Commuter parallel port IDE 
  protocol from DataStor. If you chose to build PARIDE support
  into your kernel, you may answer Y here to build in the protocol
  driver, otherwise you should answer M to build it as a loadable
  module. The module will be called comm.o. You must also have
  a high-level driver for the type of device that you want to support.

DataStor EP-2000 protocol
CONFIG_PARIDE_DSTR
  This option enables support for the EP-2000 parallel port IDE 
  protocol from DataStor. If you chose to build PARIDE support
  into your kernel, you may answer Y here to build in the protocol
  driver, otherwise you should answer M to build it as a loadable
  module. The module will be called dstr.o. You must also have
  a high-level driver for the type of device that you want to support.

Shuttle EPAT/EPEZ protocol
CONFIG_PARIDE_EPAT
  This option enables support for the EPAT parallel port IDE protocol.
  EPAT is a parallel port IDE adapter manufactured by Shuttle
  Technology and widely used in devices from major vendors such as
  Hewlett-Packard, SyQuest, Imation and Avatar. If you chose to build
  PARIDE support into your kernel, you may answer Y here to build in
  the protocol driver, otherwise you should answer M to build it as a
  loadable module. The module will be called epat.o. You must also
  have a high-level driver for the type of device that you want to
  support.

Shuttle EPIA protocol
CONFIG_PARIDE_EPIA
  This option enables support for the (obsolete) EPIA parallel port
  IDE protocol from Shuttle Technology. This adapter can still be
  found in some no-name kits. If you chose to build PARIDE support
  into your kernel, you may answer Y here to build in the protocol
  driver, otherwise you should answer M to build it as a loadable
  module. The module will be called epia.o. You must also have a
  high-level driver for the type of device that you want to support.

FIT TD-2000 protocol
CONFIG_PARIDE_FIT2
  This option enables support for the TD-2000 parallel port IDE
  protocol from Fidelity International Technology. This is a simple
  (low speed) adapter that is used in some portable hard drives. If
  you chose to build PARIDE support into your kernel, you may answer Y
  here to build in the protocol driver, otherwise you should answer M
  to build it as a loadable module. The module will be called ktti.o.
  You must also have a high-level driver for the type of device that
  you want to support.

FIT TD-3000 protocol
CONFIG_PARIDE_FIT3
  This option enables support for the TD-3000 parallel port IDE
  protocol from Fidelity International Technology. This protocol is
  used in newer models of their portable disk, CD-ROM and PD/CD
  devices. If you chose to build PARIDE support into your kernel, you
  may answer Y here to build in the protocol driver, otherwise you
  should answer M to build it as a loadable module. The module will be
  called fit3.o. You must also have a high-level driver for the type
  of device that you want to support.

Freecom IQ ASIC-2 protocol
CONFIG_PARIDE_FRIQ
  This option enables support for version 2 of the Freecom IQ parallel
  port IDE adapter.  This adapter is used by the Maxell Superdisk 
  drive.  If you chose to build PARIDE support into your kernel, you
  may answer Y here to build in the protocol driver, otherwise you
  should answer M to build it as a loadable module. The module will be
  called friq.o. You must also have a high-level driver for the type
  of device that you want to support. 

FreeCom power protocol
CONFIG_PARIDE_FRPW
  This option enables support for the Freecom power parallel port IDE
  protocol. If you chose to build PARIDE support into your kernel, you
  may answer Y here to build in the protocol driver, otherwise you
  should answer M to build it as a loadable module. The module will be
  called frpw.o. You must also have a high-level driver for the type
  of device that you want to support.

KingByte KBIC-951A/971A protocols
CONFIG_PARIDE_KBIC
  This option enables support for the KBIC-951A and KBIC-971A parallel
  port IDE protocols from KingByte Information Corp. KingByte's
  adapters appear in many no-name portable disk and CD-ROM products,
  especially in Europe. If you chose to build PARIDE support into your
  kernel, you may answer Y here to build in the protocol driver,
  otherwise you should answer M to build it as a loadable module. The
  module will be called kbic.o. You must also have a high-level driver
  for the type of device that you want to support.

KT PHd protocol
CONFIG_PARIDE_KTTI
  This option enables support for the "PHd" parallel port IDE protocol
  from KT Technology. This is a simple (low speed) adapter that is
  used in some 2.5" portable hard drives. If you chose to build PARIDE
  support into your kernel, you may answer Y here to build in the
  protocol driver, otherwise you should answer M to build it as a
  loadable module. The module will be called ktti.o. You must also
  have a high-level driver for the type of device that you want to
  support.

OnSpec 90c20 protocol
CONFIG_PARIDE_ON20
  This option enables support for the (obsolete) 90c20 parallel port 
  IDE protocol from OnSpec (often marketed under the ValuStore brand
  name). If you chose to build PARIDE support into your kernel, you 
  may answer Y here to build in the protocol driver, otherwise you 
  should answer M to build it as a loadable module. The module will 
  be called on20.o. You must also have a high-level driver for the 
  type of device that you want to support.

OnSpec 90c26 protocol
CONFIG_PARIDE_ON26
  This option enables support for the 90c26 parallel port IDE protocol
  from OnSpec Electronics (often marketed under the ValuStore brand
  name). If you chose to build PARIDE support into your kernel, you
  may answer Y here to build in the protocol driver, otherwise you
  should answer M to build it as a loadable module. The module will be
  called on26.o. You must also have a high-level driver for the type
  of device that you want to support.

Logical Volume Manager (LVM) support
CONFIG_BLK_DEV_LVM
  This driver lets you combine several hard disks, hard disk
  partitions, multiple devices or even loop devices (for evaluation
  purposes) into a volume group.  Imagine a volume group as a kind of
  virtual disk. Logical volumes, which can be thought of as virtual
  partitions, can be created in the volume group.  You can resize
  volume groups and logical volumes after creation time, corresponding
  to new capacity needs.  Logical volumes are accessed as block
  devices named /dev/VolumeGroupName/LogicalVolumeName.

  For details see Documentation/LVM-HOWTO. You will need supporting
  user space software; location is in Documentation/Changes.

  If you want to compile this support as a module ( = code which can
  be inserted in and removed from the running kernel whenever you
  want), say M here and read Documentation/modules.txt. The module
  will be called lvm-mod.o.

Logical Volume Manager /proc file system information
CONFIG_LVM_PROC_FS
  If you say Y here, you are able to access overall Logical Volume
  Manager, Volume Group, Logical and Physical Volume information in
  /proc/lvm.

  To use this option, you have to check, that the "/proc file system
  support" (CONFIG_PROC_FS) is enabled too.

Multiple devices driver support
CONFIG_BLK_DEV_MD
  This driver lets you combine several hard disk partitions into one
  logical block device. This can be used to simply append one
  partition to another one or to combine several redundant hard disks
  into a RAID1/4/5 device so as to provide protection against hard
  disk failures. This is called "Software RAID" since the combining of
  the partitions is done by the kernel. "Hardware RAID" means that the
  combining is done by a dedicated controller; if you have such a
  controller, you do not need to say Y here.

  More information about Software RAID on Linux is contained in the
  Software-RAID mini-HOWTO, available from
  http://www.linuxdoc.org/docs.html#howto . There you will also
  learn where to get the supporting user space utilities raidtools.

  If unsure, say N.

Linear (append) mode
CONFIG_MD_LINEAR
  If you say Y here, then your multiple devices driver will be able to
  use the so-called linear mode, i.e. it will combine the hard disk
  partitions by simply appending one to the other. 

  If you want to compile this as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt. The module will be
  called linear.o.

  If unsure, say Y.

RAID-0 (striping) mode
CONFIG_MD_RAID0
  If you say Y here, then your multiple devices driver will be able to
  use the so-called raid0 mode, i.e. it will combine the hard disk
  partitions into one logical device in such a fashion as to fill them
  up evenly, one chunk here and one chunk there. This will increase
  the throughput rate if the partitions reside on distinct disks. 

  Information about Software RAID on Linux is contained in the
  Software-RAID mini-HOWTO, available from
  http://www.linuxdoc.org/docs.html#howto . There you will also
  learn where to get the supporting user space utilities raidtools.

  If you want to compile this as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt. The module will be
  called raid0.o.

  If unsure, say Y.

RAID-1/RAID-5 code (DANGEROUS)
CONFIG_RAID15_DANGEROUS
  This new RAID1/RAID5 code has been freshly merged, and has not seen
  enough testing yet. While there are no known bugs in it, it might
  destroy your filesystems, eat your data and start World War III.
  You have been warned.

  If unsure, say N.

RAID-1 (mirroring) mode
CONFIG_MD_RAID1
  A RAID-1 set consists of several disk drives which are exact copies
  of each other. In the event of a mirror failure, the RAID driver
  will continue to use the operational mirrors in the set, providing
  an error free MD (multiple device) to the higher levels of the
  kernel. In a set with N drives, the available space is the capacity
  of a single drive, and the set protects against a failure of (N - 1)
  drives. 

  Information about Software RAID on Linux is contained in the
  Software-RAID mini-HOWTO, available from
  http://www.linuxdoc.org/docs.html#howto . There you will also
  learn where to get the supporting user space utilities raidtools.

  If you want to use such a RAID-1 set, say Y. This code is also
  available as a module called raid1.o ( = code which can be inserted
  in and removed from the running kernel whenever you want). If you
  want to compile it as a module, say M here and read
  Documentation/modules.txt.

  If unsure, say Y.

RAID-4/RAID-5 mode
CONFIG_MD_RAID5
  A RAID-5 set of N drives with a capacity of C MB per drive provides
  the capacity of C * (N - 1) MB, and protects against a failure
  of a single drive. For a given sector (row) number, (N - 1) drives
  contain data sectors, and one drive contains the parity protection.
  For a RAID-4 set, the parity blocks are present on a single drive,
  while a RAID-5 set distributes the parity across the drives in one
  of the available parity distribution methods.

  Information about Software RAID on Linux is contained in the
  Software-RAID mini-HOWTO, available from
  http://www.linuxdoc.org/docs.html#howto . There you will also
  learn where to get the supporting user space utilities raidtools.

  If you want to use such a RAID-4/RAID-5 set, say Y. This code is
  also available as a module called raid5.o ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  If you want to compile it as a module, say M here and read
  Documentation/modules.txt.

  If unsure, say Y.

RAID Boot support
CONFIG_MD_BOOT
  To boot with an initial raid volume (any type) you can select
  autodetect, or answer Y here and appropriate options to the kernel
  at boot time.
  For lilo and loadlin options see the file Documentation/md.txt.

RAID AutoDetect support
CONFIG_AUTODETECT_RAID
  An alternative to "Raid Boot support" is autodetect support.
  With this selected, any partitons of type 0xFD will be considered for
  inclusion in a RAID array.  Information in the RAID-superblock on
  the partition will determine how it is included.

Support for Acer PICA 1 chipset
CONFIG_ACER_PICA_61
  This is a machine with a R4400 133/150 MHz CPU. To compile a Linux
  kernel that runs on these, say Y here. For details about Linux on
  the MIPS architecture, check out the Linux/MIPS FAQ on the WWW at
  http://oss.sgi.com/mips .

Support for Algorithmics P4032 (EXPERIMENTAL)
CONFIG_ALGOR_P4032
  This is an evaluation board of the British company Algorithmics. The
  board uses the R4300 and a R5230 CPUs. For more information about
  this board see http://www.algor.co.uk .

Support for BAGET MIPS series
CONFIG_BAGET_MIPS
  This enables support for the Baget, a Russian embedded system.  For 
  more details about the Baget see the Linux/MIPS FAQ on 
  http://oss.sgi.com/mips .

Support for Cobalt Microserver
CONFIG_COBALT_MICRO_SERVER
  This enables support for the Cobalt Microserver.  For more information
  see the Linux/MIPS FAQ on http://oss.sgi.com/mips .

Support for 2800
CONFIG_COBALT_28
  This adds support for the Cobalt Microserver 2800.  A kernel with this
  option selected will only work on the 2800.

Support for DECstations
CONFIG_DECSTATION
  This enables support for DEC's MIPS based workstations.  For details
  see the Linux/MIPS FAQ on http://oss.sgi.com/mips and the 
  DECstation porting pages on http://decstation.unix-ag.org .

  If you have one of the following DECstation Models you definitely
  want to choose R4xx0 for the CPU Type:

	DECstation 5000/50
	DECstation 5000/150
	DECstation 5000/260
	DECsystem 5900/260

  otherwise choose R3000.

Support for NEC DDB Vrc-5074
CONFIG_DDB5074
  This enables support for the VR5000-based NEC DDB Vrc-5074
  evaluation board.

Support for Mips Magnum 4000
CONFIG_MIPS_MAGNUM_4000
  This is a machine with a R4000 100 MHz CPU. To compile a Linux
  kernel that runs on these, say Y here. For details about Linux on
  the MIPS architecture, check out the Linux/MIPS FAQ on the WWW at
  http://oss.sgi.com/mips.

Support for Olivetti M700
CONFIG_OLIVETTI_M700
  This is a machine with a R4000 100 MHz CPU. To compile a Linux
  kernel that runs on these, say Y here. For details about Linux on
  the MIPS architecture, check out the Linux/MIPS FAQ on the WWW at
  http://oss.sgi.com/mips.

Support for SGI IP22
CONFIG_SGI_IP22
  This are the SGI Indy, Challenge S and Indigo2, as well as certain
  OEM variants like the Tandem CMN B006S. To compile a Linux kernel
  that runs on these, say Y here.

Support for SGI IP27
  This are the SGI Origin 200, Origin 2000 and Onyx 2 Graphics
  workstations.  To compile a Linux kernel that runs on these, say Y
  here.

IP27 N-Mode
CONFIG_SGI_SN0_N_MODE
  The nodes of Origin 200, Origin 2000 and Onyx 2 systems can be
  configured in either N-Modes which allows for more nodes or M-Mode
  which allows for more more memory.  Your system is most probably
  running in M-Mode, so you should say N here.

MIPS JAZZ onboard SONIC Ethernet support
CONFIG_MIPS_JAZZ_SONIC
  This is the driver for the onboard card of of MIPS Magnum 4000,
  Acer PICA, Olivetti M700-10 and a few other identical OEM systems.

MIPS JAZZ FAS216 SCSI support
CONFIG_JAZZ_ESP
  This is the driver for the onboard SCSI host adapter of MIPS Magnum
  4000, Acer PICA, Olivetti M700-10 and a few other identical OEM
  systems.

PCMCIA SCSI adapter support
CONFIG_SCSI_PCMCIA
  Say Y here if you intend to attach a PCMCIA or CardBus card to your
  computer which acts as a SCSI host adapter. These are credit card
  size devices often used with laptops.

  Note that the answer to this question won't directly affect the
  kernel: saying N will just cause this configure script to skip all
  the questions PCMCIA SCSI host adapters.

Adaptec AHA152X PCMCIA support
CONFIG_PCMCIA_AHA152X
  Say Y here if you intend to attach this type of PCMCIA SCSI host
  adapter to your computer.

  This driver is also available as a module called aha152x_cs.o ( =
  code which can be inserted in and removed from the running kernel
  whenever you want). If you want to compile it as a module, say M
  here and read Documentation/modules.txt.

Qlogic PCMCIA support
CONFIG_PCMCIA_QLOGIC
  Say Y here if you intend to attach this type of PCMCIA SCSI host
  adapter to your computer.

  This driver is also available as a module called qlogic_cs.o ( =
  code which can be inserted in and removed from the running kernel
  whenever you want). If you want to compile it as a module, say M
  here and read Documentation/modules.txt.

Future Domain PCMCIA support
CONFIG_PCMCIA_FDOMAIN
  Say Y here if you intend to attach this type of PCMCIA SCSI host
  adapter to your computer.

  This driver is also available as a module called fdomain_cs.o ( =
  code which can be inserted in and removed from the running kernel
  whenever you want). If you want to compile it as a module, say M
  here and read Documentation/modules.txt.

Adaptec APA1480 CardBus support
CONFIG_PCMCIA_APA1480
  Say Y here if you intend to attach this type of CardBus SCSI host
  adapter to your computer.

  This driver is also available as a module called apa1480_cb.o ( =
  code which can be inserted in and removed from the running kernel
  whenever you want). If you want to compile it as a module, say M
  here and read Documentation/modules.txt.

CPU type
CONFIG_CPU_R3000
  Please make sure to pick the right CPU type. Linux/MIPS is not
  designed to be generic, i.e. Kernels compiled for R3000 CPUs will
  *not* work on R4000 Machines and vice versa.
  However, since most the supported Machines have an R4000 (or 
  similar) CPU, R4xx0 might be a safe bet.
  If the resulting Kernel does not work try to recompile with R3000.

Support for large 64-bit configurations
CONFIG_MIPS_INSANE_LARGE
  MIPS R10000 does support a 44 bit / 16TB address space as opposed to
  previous 64-bit processors which only supported 40 bit / 1TB. If you
  need processes of more than 1TB virtual address space, say Y here.
  This will result in additional memory usage, so it is not
  recommended for normal users.

Generate little endian code
CONFIG_CPU_LITTLE_ENDIAN
  Some MIPS machines can be configured for either little or big endian
  byte order. These modes require different kernels. Say Y if your
  machine is little endian, N if it's a big endian machine.

Networking support
CONFIG_NET
  Unless you really know what you are doing, you should say Y here.
  The reason is that some programs need kernel networking support even
  when running on a stand-alone machine that isn't connected to any
  other computer. If you are upgrading from an older kernel, you
  should consider updating your networking tools too because changes
  in the kernel and the tools often go hand in hand. The tools are
  contained in the package net-tools, the location and version number
  of which are given in Documentation/Changes.

  For a general introduction to Linux networking, it is highly
  recommended to read the NET-3-HOWTO, available from
  http://www.linuxdoc.org/docs.html#howto .

Socket filtering
CONFIG_FILTER
  The Linux Socket Filter is derived from the Berkeley Packet Filter.
  If you say Y here, user-space programs can attach a filter to any
  socket and thereby tell the kernel that it should allow or disallow
  certain types of data to get through the socket. Linux Socket
  Filtering works on all socket types except TCP for now. See the text
  file Documentation/networking/filter.txt for more information.
  If unsure, say N.

Network packet filtering
CONFIG_NETFILTER
  Netfilter is a framework for filtering and mangling network packets
  that pass through your Linux box.

  The most common use of packet filtering is to run your Linux box as
  a firewall protecting a local network from the Internet. The type of
  firewall provided by this kernel support is called a "packet
  filter", which means that it can reject individual network packets
  based on type, source, destination etc. The other kind of firewall,
  a "proxy-based" one, is more secure but more intrusive and more
  bothersome to set up; it inspects the network traffic much more
  closely, modifies it and has knowledge about the higher level
  protocols, which a packet filter lacks. Moreover, proxy-based
  firewalls often require changes to the programs running on the local
  clients. Proxy-based firewalls don't need support by the kernel, but
  they are often combined with a packet filter, which only works if
  you say Y here.

  You should also say Y here if you intend to use your Linux box as
  the gateway to the Internet for a local network of machines without
  globally valid IP addresses. This is called "masquerading": if one
  of the computers on your local network wants to send something to
  the outside, your box can "masquerade" as that computer, i.e. it
  forwards the traffic to the intended outside destination, but
  modifies the packets to make it look like they came from the
  firewall box itself. It works both ways: if the outside host
  replies, the Linux box will silently forward the traffic to the
  correct local computer. This way, the computers on your local net
  are completely invisible to the outside world, even though they can
  reach the outside and can receive replies. It is even possible to
  run globally visible servers from within a masqueraded local network
  using a mechanism called portforwarding. Masquerading is also often
  called NAT (Network Address Translation).

  Another use of Netfilter is in transparent proxying: if a machine on
  the local network tries to connect to an outside host, your Linux
  box can transparently forward the traffic to a local server,
  typically a caching proxy server.

  Various modules exist for netfilter which replace the previous
  masquerading (ipmasqadm), packet filtering (ipchains), transparent
  proxying, and portforwarding mechanisms. Please see
  Documentation/Changes under "iptables" for the location of these
  packages.
 
  Make sure to say N to "Fast switching" below if you intend to say Y
  here, as Fast switching currently bypasses netfilter.
 
  Chances are that you should say Y here if you compile a kernel which
  will run as a router and N for regular hosts. If unsure, say N.
 
Network packet filtering debugging
CONFIG_NETFILTER_DEBUG
  You can say Y here if you want to get additional messages useful in
  debugging the netfilter code. 

IP: connection tracking (required for masq/NAT)
CONFIG_IP_NF_CONNTRACK
  Connection tracking keeps a record of what packets have passed
  through your machine, in order to figure out how they are related
  into connections.

  This is required to do Masquerading or other kinds of Network
  Address Translation (except for Fast NAT).  It can also be used to
  enhance packet filtering (see `Connection state match support'
  below).

  If you want to compile it as a module, say M here and read
  Documentation/modules.txt.  If unsure, say `N'.

FTP protocol support
CONFIG_IP_NF_FTP
  Tracking FTP connections is problematic: special helpers are
  required for tracking them, and doing masquerading and other forms
  of Network Address Translation on them.

  If you want to compile it as a module, say M here and read
  Documentation/modules.txt.  If unsure, say `Y'.

IP: user space queueing via NETLINK (EXPERIMENTAL)
CONFIG_IP_NF_QUEUE
  Netfilter has the ability to queue packets to user space: the
  netlink device can be used to access them using this driver.

  If you want to compile it as a module, say M here and read
  Documentation/modules.txt.  If unsure, say `N'.

IP: ip tables support (required for filtering/masq/NAT)
CONFIG_IP_NF_IPTABLES
  iptables is a general, extensible packet identification framework.
  The packet filtering and full NAT (masquerading, port forwarding,
  etc) subsystems now use this: say `Y' or `M' here if you want to use
  either of those.

  If you want to compile it as a module, say M here and read
  Documentation/modules.txt.  If unsure, say `N'.

limit match support
CONFIG_IP_NF_MATCH_LIMIT
  limit matching allows you to control the rate at which a rule can be
  matched: mainly useful in combination with the LOG target ("LOG
  target support", below) and to avoid some Denial of Service attacks.

  If you want to compile it as a module, say M here and read
  Documentation/modules.txt.  If unsure, say `N'.

MAC address match support
CONFIG_IP_NF_MATCH_MAC
  mac matching allows you to match packets based on the source
  ethernet address of the packet.

  If you want to compile it as a module, say M here and read
  Documentation/modules.txt.  If unsure, say `N'.

netfilter mark match support
CONFIG_IP_NF_MATCH_MARK
  Netfilter mark matching allows you to match packets based on the
  `nfmark' value in the packet.  This can be set by the MARK target
  (see below).

  If you want to compile it as a module, say M here and read
  Documentation/modules.txt.  If unsure, say `N'.

Multiple port match support
CONFIG_IP_NF_MATCH_MULTIPORT
  Multiport matching allows you to match TCP or UDP packets based on
  a series of source or destination ports: normally a rule can only
  match a single range of ports.

  If you want to compile it as a module, say M here and read
  Documentation/modules.txt.  If unsure, say `N'.

TOS match support
CONFIG_IP_NF_MATCH_TOS
  TOS matching allows you to match packets based on the Type Of
  Service fields of the IP packet.

  If you want to compile it as a module, say M here and read
  Documentation/modules.txt.  If unsure, say `N'.

Connection state match support
CONFIG_IP_NF_MATCH_STATE
  Connection state matching allows you to match packets based on their
  relationship to a tracked connection (ie. previous packets).  This
  is a powerful tool for packet classification.

  If you want to compile it as a module, say M here and read
  Documentation/modules.txt.  If unsure, say `N'.

Unclean match support (EXPERIMENTAL)
CONFIG_IP_NF_MATCH_UNCLEAN
  Unclean packet matching matches any strange or invalid packets, by
  looking at a series of fields in the IP, TCP, UDP and ICMP headers.

  If you want to compile it as a module, say M here and read
  Documentation/modules.txt.  If unsure, say `N'.

Owner match support (EXPERIMENTAL)
CONFIG_IP_NF_MATCH_OWNER
  Packet owner matching allows you to match locally-generated packets
  based on who created them: the user, group, process or session.

  If you want to compile it as a module, say M here and read
  Documentation/modules.txt.  If unsure, say `N'.

Packet filtering
CONFIG_IP_NF_FILTER
  Packet filtering defines a table `filter', which has a series of
  rules for simple packet filtering at local input, forwarding and
  local output.  See the man page for iptables(8).

  If you want to compile it as a module, say M here and read
  Documentation/modules.txt.  If unsure, say `N'.

REJECT target support
CONFIG_IP_NF_TARGET_REJECT
  The REJECT target allows a filtering rule to specify that an ICMP
  error should be issued in response to an incoming packet, rather
  than silently being dropped.

  If you want to compile it as a module, say M here and read
  Documentation/modules.txt.  If unsure, say `N'.

MIRROR target support (EXPERIMENTAL)
CONFIG_IP_NF_TARGET_MIRROR
  The MIRROR target allows a filtering rule to specify that an
  incoming packet should be bounced back to the sender.

  If you want to compile it as a module, say M here and read
  Documentation/modules.txt.  If unsure, say `N'.

Full NAT
CONFIG_IP_NF_NAT
  The Full NAT option allows masquerading, port forwarding and other
  forms of full Network Address Port Translation.  It is controlled by
  the `nat' table in iptables: see the man page for iptables(8).

  If you want to compile it as a module, say M here and read
  Documentation/modules.txt.  If unsure, say `N'.

MASQUERADE target support
CONFIG_IP_NF_TARGET_MASQUERADE
  Masquerading is a special case of NAT: all outgoing connections are
  changed to seem to come from a particular interface's address, and
  if the interface goes down, those connections are lost.  This is
  only useful for dialup accounts with dynamic IP address (ie. your IP
  address will be different on next dialup).

  If you want to compile it as a module, say M here and read
  Documentation/modules.txt.  If unsure, say `N'.

REDIRECT target support
CONFIG_IP_NF_TARGET_REDIRECT
  REDIRECT is a special case of NAT: all incoming connections are
  mapped onto the incoming interface's address, causing the packets to
  come to the local machine instead of passing through.  This is
  useful for transparent proxies.

  If you want to compile it as a module, say M here and read
  Documentation/modules.txt.  If unsure, say `N'.

Packet mangling
CONFIG_IP_NF_MANGLE
  This option adds a `mangle' table to iptables: see the man page for
  iptables(8).  This table is used for various packet alterations
  which can effect how the packet is routed.

  If you want to compile it as a module, say M here and read
  Documentation/modules.txt.  If unsure, say `N'.

TOS target support
CONFIG_IP_NF_TARGET_TOS
  This option adds a `TOS' target, which allows you to create rules in
  the `mangle' table which alter the Type Of Service field of an IP
  packet prior to routing.

  If you want to compile it as a module, say M here and read
  Documentation/modules.txt.  If unsure, say `N'.

MARK target support
CONFIG_IP_NF_TARGET_MARK
  This option adds a `MARK' target, which allows you to create rules
  in the `mangle' table which alter the netfilter mark (nfmark) field
  associated with the packet packet prior to routing. This can change
  the routing method (see `IP: use netfilter MARK value as routing
  key') and can also be used by other subsystems to change their
  behavior.

  If you want to compile it as a module, say M here and read
  Documentation/modules.txt.  If unsure, say `N'.

LOG target support
CONFIG_IP_NF_TARGET_LOG
  This option adds a `LOG' target, which allows you to create rules in
  any iptables table which records the packet header to the syslog.

  If you want to compile it as a module, say M here and read
  Documentation/modules.txt.  If unsure, say `N'.

ipchains (2.2-style) support
CONFIG_IP_NF_COMPAT_IPCHAINS
  This option places ipchains (with masquerading and redirection
  support) back into the kernel, using the new netfilter
  infrastructure.  It is not recommended for new installations (see
  `Packet filtering').  With this enabled, you should be able to use
  the ipchains tool exactly as in 2.2 kernels.

  If you want to compile it as a module, say M here and read
  Documentation/modules.txt.  If unsure, say `N'.

ipfwadm (2.0-style) support
CONFIG_IP_NF_COMPAT_IPFWADM
  This option places ipfwadm (with masquerading and redirection
  support) back into the kernel, using the new netfilter
  infrastructure.  It is not recommended for new installations (see
  `Packet filtering').  With this enabled, you should be able to use
  the ipfwadm tool exactly as in 2.0 kernels.

  If you want to compile it as a module, say M here and read
  Documentation/modules.txt.  If unsure, say `N'.

TCP Explicit Congestion Notification support
CONFIG_INET_ECN
  Explicit Congestion Notification (ECN) allows routers to notify
  clients about network congestion, resulting in fewer dropped packets
  and increased network performance. This option adds ECN support to the
  Linux kernel, as well as a sysctl (/proc/sys/net/ipv4/tcp_ecn) which
  allows ECN support to be disabled at runtime.

  Note that, on the Internet, there are many broken firewalls which
  refuse connections from ECN-enabled machines, and it may be a while
  before these firewalls are fixed. Until then, to access a site behind
  such a firewall (some of which are major sites, at the time of this
  writing) you will have to disable this option, either by saying N now
  or by using the sysctl.

  If in doubt, say N.

SYN flood protection
CONFIG_SYN_COOKIES
  Normal TCP/IP networking is open to an attack known as "SYN
  flooding". This denial-of-service attack prevents legitimate remote
  users from being able to connect to your computer during an ongoing
  attack and requires very little work from the attacker, who can
  operate from anywhere on the Internet.

  SYN cookies provide protection against this type of attack. If you
  say Y here, the TCP/IP stack will use a cryptographic challenge
  protocol known as "SYN cookies" to enable legitimate users to
  continue to connect, even when your machine is under attack. There
  is no need for the legitimate users to change their TCP/IP software;
  SYN cookies work transparently to them. For technical information
  about SYN cookies, check out
  ftp://koobera.math.uic.edu/syncookies.html .

  If you are SYN flooded, the source address reported by the kernel is
  likely to have been forged by the attacker; it is only reported as
  an aid in tracing the packets to their actual source and should not
  be taken as absolute truth.

  SYN cookies may prevent correct error reporting on clients when the
  server is really overloaded. If this happens frequently better turn
  them off.

  If you say Y here, note that SYN cookies aren't enabled by default;
  you can enable them by saying Y to "/proc file system support" and
  "Sysctl support" below and executing the command

    echo 1 >/proc/sys/net/ipv4/tcp_syncookies 

  at boot time after the /proc file system has been mounted.
  
  If unsure, say Y.

Alpha system type
CONFIG_ALPHA_GENERIC
  This is the system type of your hardware.  A "generic" kernel will
  run on any supported Alpha system. However, if you configure a
  kernel for your specific system, it will be faster and smaller.

  To find out what type of Alpha system you have, you may want to
  check out the Linux/Alpha FAQ, accessible on the WWW from
  http://www.alphalinux.org . In summary:

  Alcor/Alpha-XLT     AS 600
  Alpha-XL            XL-233, XL-266
  AlphaBook1          Alpha laptop
  Avanti              AS 200, AS 205, AS 250, AS 255, AS 300, AS 400
  Cabriolet           AlphaPC64, AlphaPCI64
  DP264               DP264
  EB164               EB164 21164 evaluation board
  EB64+               EB64+ 21064 evaluation board
  EB66                EB66 21066 evaluation board
  EB66+               EB66+ 21066 evaluation board
  Jensen              DECpc 150, DEC 2000 model 300, 
                      DEC 2000 model 500
  LX164               AlphaPC164-LX
  Miata               Personal Workstation 433a, 433au, 500a,
                      500au, 600a, or 600au
  Mikasa              AS 1000
  Noname              AXPpci33, UDB (Multia)
  Noritake            AS 1000A, AS 600A, AS 800
  PC164               AlphaPC164
  Rawhide             AS 1200, AS 4000, AS 4100
  Ruffian             RPX164-2, AlphaPC164-UX, AlphaPC164-BX
  SX164               AlphaPC164-SX
  Sable               AS 2000, AS 2100
  Takara              Takara
  Titan               Privateer
  Wildfire            AlphaServer GS 40/80/160/320

  If you don't know what to do, choose "generic".

EV5 CPU daughtercard
CONFIG_ALPHA_PRIMO
  Say Y if you have an AS 1000 5/xxx or an AS 1000A 5/xxx.

EV5 CPU(s)
CONFIG_ALPHA_GAMMA
  Say Y if you have an AS 2000 5/xxx or an AS 2100 5/xxx.

Using SRM as bootloader
CONFIG_ALPHA_SRM
  There are two different types of booting firmware on Alphas: SRM,
  which is command line driven, and ARC, which uses menus and arrow
  keys. Details about the Linux/Alpha booting process are contained in
  the Linux/Alpha FAQ, accessible on the WWW from
  http://www.alphalinux.org .

  The usual way to load Linux on an Alpha machine is to use MILO
  (a bootloader that lets you pass command line parameters to the
  kernel just like lilo does for the x86 architecture) which can be
  loaded either from ARC or can be installed directly as a permanent
  firmware replacement from floppy (which requires changing a certain
  jumper on the motherboard). If you want to do either of these, say N
  here. If MILO doesn't work on your system (true for Jensen
  motherboards), you can bypass it altogether and boot Linux directly
  from an SRM console; say Y here in order to do that. Note that you
  won't be able to boot from an IDE disk using SRM. 

  If unsure, say N.

Legacy kernel start address
CONFIG_ALPHA_LEGACY_START_ADDRESS
  The 2.4 kernel changed the kernel start address from 0x310000
  to 0x810000 to make room for the Wildfire's larger SRM console.

  If you're using aboot 0.7 or later, the bootloader will examine
  the ELF headers to determine where to transfer control.  Unfortunately,
  most older bootloaders -- APB or MILO -- hardcoded the kernel
  start address rather than examining the ELF headers, and the result
  is a hard lockup.

  Say Y if you have a broken bootloader.  Say N if you do not, or
  if you wish to run on Wildfire.

Large VMALLOC support
CONFIG_ALPHA_LARGE_VMALLOC
  Process creation and other aspects of virtual memory management
  can be streamlined if we restrict the kernel to one PGD for all
  vmalloc allocations.  This equates to about 8GB.

  Under normal circumstances, this is so far and above what is needed
  as to be laughable.  However, there are certain applications (such
  as benchmark-grade in-kernel web serving) that can make use of as
  much vmalloc space as is available.

  Say N unless you know you need gobs and gobs of vmalloc space.

Non-standard serial port support
CONFIG_SERIAL_NONSTANDARD
  Say Y here if you have any non-standard serial boards -- boards
  which aren't supported using the standard "dumb" serial driver.
  This includes intelligent serial boards such as Cyclades,
  Digiboards, etc. These are usually used for systems that need many
  serial ports because they serve many terminals or dial-in
  connections. 

  Note that the answer to this question won't directly affect the
  kernel: saying N will just cause this configure script to skip all
  the questions about non-standard serial boards. 

  Most people can say N here.

Extended dumb serial driver options
CONFIG_SERIAL_EXTENDED
  If you wish to use any non-standard features of the standard "dumb"
  driver, say Y here. This includes HUB6 support, shared serial
  interrupts, special multiport support, support for more than the
  four COM 1/2/3/4 boards, etc. 

  Note that the answer to this question won't directly affect the
  kernel: saying N will just cause this configure script to skip all
  the questions about serial driver options. If unsure, say N.

Support more than 4 serial ports
CONFIG_SERIAL_MANY_PORTS
  Say Y here if you have dumb serial boards other than the four
  standard COM 1/2/3/4 ports. This may happen if you have an AST
  FourPort, Accent Async, Boca (read the Boca mini-HOWTO, available
  from http://www.linuxdoc.org/docs.html#howto ), or other custom
  serial port hardware which acts similar to standard serial port
  hardware. If you only use the standard COM 1/2/3/4 ports, you can
  say N here to save some memory. You can also say Y if you have an
  "intelligent" multiport card such as Cyclades, Digiboards, etc.

Support for sharing serial interrupts
CONFIG_SERIAL_SHARE_IRQ
  Some serial boards have hardware support which allows multiple dumb
  serial ports on the same board to share a single IRQ. To enable
  support for this in the serial driver, say Y here.

Auto detect IRQ on standard ports (unsafe)
CONFIG_SERIAL_DETECT_IRQ
  Say Y here if you want the kernel to try to guess which IRQ
  to use for your serial port. 

  This is considered unsafe; it is far better to configure the IRQ in
  a boot script using the setserial command.

  If unsure, say N.

Support special multiport boards
CONFIG_SERIAL_MULTIPORT
  Some multiport serial ports have special ports which are used to
  signal when there are any serial ports on the board which need
  servicing. Say Y here to enable the serial driver to take advantage
  of those special I/O ports.

SGI PROM Console Support
CONFIG_SGI_PROM_CONSOLE
  Say Y here if you want to use the PROMs for console I/O.

SGI Zilog85C30 serial support
CONFIG_SGI_SERIAL
  If you want to use your SGI's built-in serial ports under Linux,
  answer Y.

SGI Newport Graphics support (EXPERIMENTAL)
CONFIG_SGI_NEWPORT_GFX
  If you have an SGI machine and you want to compile the graphics
  drivers, say Y here. This will include the code for the
  /dev/graphics and /dev/gfx drivers into the kernel for supporting
  virtualized access to your graphics hardware.

SGI Newport Console support
CONFIG_SGI_NEWPORT_CONSOLE
  Say Y here if you want the console on the Newport aka XL graphics
  card of your Indy.  Most people say Y here.

SGI DS1286 RTC support
CONFIG_SGI_DS1286
  If you say Y here and create a character special file /dev/rtc with
  major number 10 and minor number 135 using mknod ("man mknod"), you
  will get access to the real time clock built into your computer.
  Every SGI has such a clock built in. It reports status information
  via the file /proc/rtc and its behaviour is set by various ioctls on
  /dev/rtc.

Support the Bell Technologies HUB6 card
CONFIG_HUB6
  Say Y here to enable support in the dumb serial driver to support
  the HUB6 card.

PCMCIA serial device support
CONFIG_PCMCIA_SERIAL_CS
  Say Y here to enable support for 16-bit PCMCIA serial devices,
  including serial port cards, modems, and the modem functions of
  multi-function ethernet/modem cards. (PCMCIA- or PC-cards are
  credit-card size devices often used with laptops.)

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called serial_cs.o. If you want to compile it as
  a module, say M here and read Documentation/modules.txt. If unsure,
  say N.

CardBus serial device support
CONFIG_PCMCIA_SERIAL_CB
  Say Y here to enable support for CardBus serial devices, including
  serial port cards, modems, and the modem functions of multi-function
  ethernet/modem devices. (CardBus cards are the newer and better 
  version of PCMCIA- or PC-cards: credit card size devices often 
  used with laptops.)

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called serial_cb.o. If you want to compile it as
  a module, say M here and read Documentation/modules.txt. If unsure,
  say N.

/dev/agpgart (AGP Support) (EXPERIMENTAL)
CONFIG_AGP
  AGP (Accelerated Graphics Port) is a bus system mainly used to
  connect graphics cards to the rest of the system. 

  If you have an AGP system and you say Y here, it will be possible to
  use the AGP features of your 3D rendering video card. This code acts
  as a sort of "AGP driver" for the motherboard's chipset. The glx
  module will then be able to program the GART (graphics aperture
  relocation table) registers with appropriate values to transfer
  commands to the card.

  If you need more texture memory than you can get with the AGP GART
  (theoretically up to 256 MB, but in practice usually 64 or 128 MB
  due to kernel allocation issues), you could use PCI accesses
  and have up to a couple gigs of texture space.

  Note that this is the only means to have XFree4/GLX use
  write-combining with MTRR support on the AGP bus. Without it, OpenGL
  direct rendering will be a lot slower but still faster than PIO.

  For the moment, you should probably say N, unless you want to test
  the GLX component for XFree86 3.3.6, which can be downloaded from
  http://utah-glx.sourceforge.net/ , or need to use the 810 Xserver in
  XFree 3.3.6.

  This driver is available as a module. If you want to compile it as a
  module, say M here and read Documentation/modules.txt. The module
  will be called agpgart.o.

Intel 440LX/BX/GX/815/840/850 support
CONFIG_AGP_INTEL
  This option gives you AGP support for the GLX component of the
  XFree86 4.x on Intel 440LX/BX/GX, 815, 840 and 850 chipsets.

  For the moment, you should probably say N, unless you want to test
  the GLX component for XFree86 3.3.6, which can be downloaded from
  http://utah-glx.sourceforge.net/ .

Intel I810/I810 DC100/I810e support
CONFIG_AGP_I810
  This option gives you AGP support for the Xserver on the Intel 810
  and 815 chipset boards for their on-board integrated graphics. This
  is required to do any useful video modes with these boards.

VIA chipset support
CONFIG_AGP_VIA
  This option gives you AGP support for the GLX component of the
  XFree86 4.x on VIA MPV3/Apollo Pro chipsets.

  For the moment, you should probably say N, unless you want to test
  the GLX component for XFree86 3.3.6, which can be downloaded from
  http://utah-glx.sourceforge.net/ .

AMD Irongate support
CONFIG_AGP_AMD
  This option gives you AGP support for the GLX component of the
  XFree86 4.x on AMD Irongate chipset.

  For the moment, you should probably say N, unless you want to test
  the GLX component for XFree86 3.3.6, which can be downloaded from
  http://utah-glx.sourceforge.net/ .

Generic SiS support
CONFIG_AGP_SIS
  This option gives you AGP support for the GLX component of the "soon
  to be released" XFree86 4.x on Silicon Integrated Systems [SiS]
  chipsets.

  Note that 5591/5592 AGP chipsets are NOT supported.

  For the moment, you should probably say N, unless you want to test
  the GLX component for XFree86 3.3.6, which can be downloaded from
  http://utah-glx.sourceforge.net/ .

ALI M1541 support
CONFIG_AGP_ALI
  This option gives you AGP support for the GLX component of the
  XFree86 4.x on the ALi M1541 chipset.

  This chipset can do AGP 1x and 2x, but note that there is an
  acknowledged incompatibility with Matrox G200 cards. Due to
  timing issues, this chipset cannot do AGP 2x with the G200.
  This is a hardware limitation. AGP 1x seems to be fine, though.

  For the moment, you should probably say N, unless you want to test
  the GLX component for XFree86 3.3.6, which can be downloaded from
  http://utah-glx.sourceforge.net/ .

PCI support
CONFIG_PCI
  Find out whether you have a PCI motherboard. PCI is the name of a
  bus system, i.e. the way the CPU talks to the other stuff inside
  your box. Other bus systems are ISA, EISA, Microchannel (MCA) or
  VESA. If you have PCI, say Y, otherwise N. 

  The PCI-HOWTO, available from
  http://www.linuxdoc.org/docs.html#howto , contains valuable
  information about which PCI hardware does work under Linux and which
  doesn't.

PCI support
CONFIG_PCI_INTEGRATOR
  Find out whether you have a PCI motherboard. PCI is the name of a
  bus system, i.e. the way the CPU talks to the other stuff inside
  your box. Other bus systems are ISA, EISA, Microchannel (MCA) or
  VESA. If you have PCI, say Y, otherwise N. 

  The PCI-HOWTO, available from
  http://www.linuxdoc.org/docs.html#howto , contains valuable
  information about which PCI hardware does work under Linux and which
  doesn't.

QSpan PCI
CONFIG_PCI_QSPAN
  Find out whether you have a PCI motherboard. PCI is the name of a
  bus system, i.e. the way the CPU talks to the other stuff inside
  your box. Other bus systems are ISA, EISA, Microchannel (MCA) or
  VESA. If you have PCI, say Y, otherwise N. 

  The PCI-HOWTO, available from
  http://www.linuxdoc.org/docs.html#howto , contains valuable
  information about which PCI hardware does work under Linux and which
  doesn't.

PCI access mode
CONFIG_PCI_GOBIOS
  On PCI systems, the BIOS can be used to detect the PCI devices and
  determine their configuration. However, some old PCI motherboards
  have BIOS bugs and may crash if this is done. Also, some embedded
  PCI-based systems don't have any BIOS at all. Linux can also try to
  detect the PCI hardware directly without using the BIOS.

  With this option, you can specify how Linux should detect the PCI
  devices. If you choose "BIOS", the BIOS will be used, if you choose
  "Direct", the BIOS won't be used, and if you choose "Any", the
  kernel will try the direct access method and falls back to the BIOS
  if that doesn't work. If unsure, go with the default, which is
  "Any".

PCI device name database
CONFIG_PCI_NAMES
  By default, the kernel contains a database of all known PCI device
  names to make the information in /proc/pci, /proc/ioports and
  similar files comprehensible to the user. This database increases
  size of the kernel image by about 80KB, but it gets freed after the
  system boots up, so it doesn't take up kernel memory. Anyway, if you
  are building an installation floppy or kernel for an embedded system
  where kernel image size really matters, you can disable this feature
  and you'll get device ID numbers instead of names.

  When in doubt, say Y.

MCA support
CONFIG_MCA
  MicroChannel Architecture is found in some IBM PS/2 machines and
  laptops. It is a bus system similar to PCI or ISA. See
  Documentation/mca.txt (and especially the web page given there)
  before attempting to build an MCA bus kernel.

EISA support
CONFIG_EISA
  The Extended Industry Standard Architecture (EISA) bus was
  developed as an open alternative to the IBM MicroChannel bus.

  The EISA bus provided some of the features of the IBM MicroChannel
  bus while maintaining backward compatibility with cards made for
  the older ISA bus. The EISA bus saw limited use between 1988 and 1995
  when it was made obsolete by the PCI bus.

  Say Y here if you are building a kernel for an EISA-based machine.

  Otherwise, say N.

SGI Visual Workstation support
CONFIG_VISWS
  The SGI Visual Workstation series is an IA32-based workstation
  based on SGI systems chips with some legacy PC hardware attached.
  Say Y here to create a kernel to run on the SGI 320 or 540.
  A kernel compiled for the Visual Workstation will not run on other
  PC boards and vice versa.
  See Documentation/sgi-visws.txt for more.

SGI Visual Workstation framebuffer support
CONFIG_FB_SGIVW
  SGI Visual Workstation support for framebuffer graphics.

I2O support
CONFIG_I2O
  The Intelligent Input/Output (I2O) architecture allows hardware
  drivers to be split into two parts: an operating system specific
  module called the OSM and an hardware specific module called the
  HDM. The OSM can talk to a whole range of HDM's, and ideally the
  HDM's are not OS dependent. This allows for the same HDM driver to
  be used under different operating systems if the relevant OSM is in
  place. In order for this to work, you need to have an I2O interface
  adapter card in your computer. This card contains a special I/O
  processor (IOP), thus allowing high speeds since the CPU does not
  have to deal with I/O.

  If you say Y here, you will get a choice of interface adapter
  drivers and OSM's with the following questions.

  This support is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  If you want to compile it as a module, say M here and read
  Documentation/modules.txt. You will get modules called i2o_core.o
  and i20_config.o. 

  If unsure, say N.

I2O PCI support
CONFIG_I2O_PCI
  Say Y for support of PCI bus I2O interface adapters. Currently this
  is the only variety supported, so you should say Y.

  This support is also available as a module called i2o_pci.o ( = code
  which can be inserted in and removed from the running kernel
  whenever you want). If you want to compile it as a module, say M
  here and read Documentation/modules.txt.

I2O Block OSM
CONFIG_I2O_BLOCK
  Include support for the I2O Block OSM. The Block OSM presents disk
  and other structured block devices to the operating system.

  This support is also available as a module called i2o_block.o ( =
  code which can be inserted in and removed from the running kernel
  whenever you want). If you want to compile it as a module, say M
  here and read Documentation/modules.txt.

I2O LAN OSM
CONFIG_I2O_LAN
  Include support for the LAN OSM. You will also need to include
  support for token ring or FDDI if you wish to use token ring or FDDI
  I2O cards with this driver.

  This support is also available as a module called i2o_lan.o ( = code
  which can be inserted in and removed from the running kernel
  whenever you want). If you want to compile it as a module, say M
  here and read Documentation/modules.txt.

I2O SCSI OSM
CONFIG_I2O_SCSI
  Allows direct SCSI access to SCSI devices on a SCSI or FibreChannel
  I2O controller. You can use both the SCSI and Block OSM together if
  you wish.

  This support is also available as a module called i2o_scsi.o ( =
  code which can be inserted in and removed from the running kernel
  whenever you want). If you want to compile it as a module, say M
  here and read Documentation/modules.txt.

I2O /proc support
CONFIG_I2O_PROC
  If you say Y here and to "/proc file system support", you will be
  able to read I2O related information from the virtual directory
  /proc/i2o.

  This support is also available as a module called i2o_proc.o ( =
  code which can be inserted in and removed from the running kernel
  whenever you want). If you want to compile it as a module, say M
  here and read Documentation/modules.txt.

Plug and Play support
CONFIG_PNP
  Plug and Play (PnP) is a standard for peripherals which allows those
  peripherals to be configured by software, e.g. assign IRQ's or other
  parameters. No jumpers on the cards are needed, instead the values
  are provided to the cards from the BIOS, from the operating system,
  or using a user-space utility.

  Say Y here if you would like Linux to configure your Plug and Play
  devices. You should then also say Y to "ISA Plug and Play support",
  below. Alternatively, you can say N here and configure your PnP 
  devices using the user space utilities contained in the isapnptools
  package.
  
  This support is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  If you want to compile it as a module, say M here and read
  Documentation/modules.txt.

ISA Plug and Play support
CONFIG_ISAPNP
  Say Y here if you would like support for ISA Plug and Play devices.
  Some information is in Documentation/isapnp.txt.
 
  This support is also available as a module called isapnp.o ( =
  code which can be inserted in and removed from the running kernel
  whenever you want). If you want to compile it as a module, say M
  here and read Documentation/modules.txt.

  If unsure, say Y.

Support for hot-pluggable devices
CONFIG_HOTPLUG
  Say Y here if you want to plug devices into your computer while
  the system is running, and be able to use them quickly.  In many
  cases, the devices can likewise be unplugged at any time too.

  One well known example of this is PCMCIA- or PC-cards, credit-card
  size devices such as network cards, modems or hard drives which are
  plugged into slots found on all modern laptop computers.

  Another example, used on modern desktops as well as laptops, is USB.
  Enable HOTPLUG with USB and KMOD, and your kernel will automatically
  call out to a user mode "policy agent" to load modules and set up
  software needed to use USB devices you plug in.  Get agent software
  (at http://www.linux-usb.org/policy.html) and install it.

PCMCIA/Cardbus support
CONFIG_PCMCIA
  Say Y here if you want to attach PCMCIA- or PC-cards to your Linux
  computer. These are credit-card size devices such as network cards,
  modems or hard drives often used with laptops computers. There are
  actually two varieties of these cards: the older 16 bit PCMCIA cards
  and the newer 32 bit CardBus cards. If you want to use CardBus
  cards, you need to say Y here and also to "CardBus support" below.

  To use your PC-cards, you will need supporting software from David 
  Hinds' pcmcia-cs package (see the file Documentation/Changes for 
  location). Please also read the PCMCIA-HOWTO, available from
  http://www.linuxdoc.org/docs.html#howto

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  When compiled this way, there will be modules called pcmcia_core.o
  and ds.o.  If you want to compile it as a module, say M here and
  read Documentation/modules.txt.

CardBus support
CONFIG_CARDBUS
  CardBus is a bus mastering architecture for PC-cards, which allows 
  for 32 bit PC-cards (the original PCMCIA standard specifies only 
  a 16 bit wide bus). Many newer PC-cards are actually CardBus cards.

  To use your PC-cards, you will need supporting software from David 
  Hinds' pcmcia-cs package (see the file Documentation/Changes for 
  location).

  If unsure, say Y.

i82365/Yenta compatible bridge support
CONFIG_I82365
  Say Y here to include support for PCMCIA and CardBus host bridges
  that are register compatible with the Intel i82365 and/or the Yenta
  specification: this includes virtually all modern PCMCIA bridges.
  "Bridge" is the name used for the hardware inside your computer that
  PCMCIA cards are plugged into. If unsure, say Y.

Databook TCIC host bridge support
CONFIG_TCIC
  Say Y here to include support for the Databook TCIC family of PCMCIA
  host bridges. These are only found on a handful of old systems.
  "Bridge" is the name used for the hardware inside your computer that
  PCMCIA cards are plugged into. If unsure, say N.

System V IPC
CONFIG_SYSVIPC
  Inter Process Communication is a suite of library functions and
  system calls which let processes (running programs) synchronize and
  exchange information. It is generally considered to be a good thing,
  and some programs won't run unless you say Y here. In particular, if
  you want to run the DOS emulator dosemu under Linux (read the
  DOSEMU-HOWTO, available from
  http://www.linuxdoc.org/docs.html#howto ), you'll need to say Y
  here.
  
  You can find documentation about IPC with "info ipc" and also in
  section 6.4 of the Linux Programmer's Guide, available from
  http://www.linuxdoc.org/docs.html#guide .

  Shared memory is now implemented using a new (minimal) virtual file
  system. To mount it automatically at system startup just add the
  following line to your /etc/fstab:

  none	/dev/shm	shm	defaults	0 0

  Saying Y here enlarges your kernel by about 18 KB. Just say Y.

BSD Process Accounting
CONFIG_BSD_PROCESS_ACCT
  If you say Y here, a user level program will be able to instruct the
  kernel (via a special system call) to write process accounting
  information to a file: whenever a process exits, information about
  that process will be appended to the file by the kernel. The
  information includes things such as creation time, owning user,
  command name, memory usage, controlling terminal etc. (the complete
  list is in the struct acct in include/linux/acct.h). It is up to the
  user level program to do useful things with this information. This
  is generally a good idea, so say Y.
  
Sysctl support
CONFIG_SYSCTL
  The sysctl interface provides a means of dynamically changing
  certain kernel parameters and variables on the fly without requiring
  a recompile of the kernel or reboot of the system. The primary
  interface consists of a system call, but if you say Y to "/proc
  file system support", a tree of modifiable sysctl entries will be
  generated beneath the /proc/sys directory. They are explained in the
  files in Documentation/sysctl/. Note that enabling this option will
  enlarge the kernel by at least 8 KB.

  As it is generally a good thing, you should say Y here unless
  building a kernel for install/rescue disks or your system is very
  limited in memory.

Kernel core (/proc/kcore) format
CONFIG_KCORE_ELF
  If you enabled support for /proc file system then the file 
  /proc/kcore will contain the kernel core image. This can be used 
  in gdb:

  $ cd /usr/src/linux ; gdb vmlinux /proc/kcore

  You have two choices here: ELF and A.OUT. Selecting ELF will make 
  /proc/kcore appear in ELF core format as defined by the Executable
  and Linking Format specification. Selecting A.OUT will choose the
  old "a.out" format which may be necessary for some old versions
  of binutils or on some architectures.

  This is especially useful if you have compiled the kernel with the 
  "-g" option to preserve debugging information. It is mainly used 
  for examining kernel data structures on the live kernel so if you 
  don't understand what this means or are not a kernel hacker, just 
  leave it at its default value ELF.

Kernel support for ELF binaries
CONFIG_BINFMT_ELF
  ELF (Executable and Linkable Format) is a format for libraries and
  executables used across different architectures and operating
  systems. Saying Y here will enable your kernel to run ELF binaries
  and enlarge it by about 13 KB. ELF support under Linux has now all
  but replaced the traditional Linux a.out formats (QMAGIC and ZMAGIC)
  because it is portable (this does *not* mean that you will be able
  to run executables from different architectures or operating systems
  however) and makes building run-time libraries very easy. Many new
  executables are distributed solely in ELF format. You definitely
  want to say Y here.

  Information about ELF is contained in the ELF HOWTO available from
  http://www.linuxdoc.org/docs.html#howto .

  If you find that after upgrading from Linux kernel 1.2 and saying Y
  here, you still can't run any ELF binaries (they just crash), then
  you'll have to install the newest ELF runtime libraries, including
  ld.so (check the file Documentation/Changes for location and latest
  version).

  If you want to compile this as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt. The module will be
  called binfmt_elf.o. Saying M or N here is dangerous because some
  crucial programs on your system might be in ELF format.

Kernel support for A.OUT binaries
CONFIG_BINFMT_AOUT
  A.out (Assembler.OUTput) is a set of formats for libraries and
  executables used in the earliest versions of UNIX. Linux used the
  a.out formats QMAGIC and ZMAGIC until they were replaced with the
  ELF format.

  As more and more programs are converted to ELF, the use for a.out
  will gradually diminish. If you disable this option it will reduce
  your kernel by one page. This is not much and by itself does not
  warrant removing support. However its removal is a good idea if you
  wish to ensure that absolutely none of your programs will use this
  older executable format. If you don't know what to answer at this
  point then answer Y. If someone told you "You need a kernel with
  QMAGIC support" then you'll have to say Y here. You may answer M to
  compile a.out support as a module and later load the module when you
  want to use a program or library in a.out format. The module will be
  called binfmt_aout.o. Saying M or N here is dangerous though,
  because some crucial programs on your system might still be in A.OUT
  format.

Kernel support for Linux/Intel ELF binaries
CONFIG_BINFMT_EM86
  Say Y here if you want to be able to execute Linux/Intel ELF
  binaries just like native Alpha binaries on your Alpha machine. For
  this to work, you need to have the emulator /usr/bin/em86 in place.

  You can get the same functionality by saying N here and saying Y to
  "Kernel support for MISC binaries". 

  You may answer M to compile the emulation support as a module and
  later load the module when you want to use a Linux/Intel binary. The
  module will be called binfmt_em86.o. If unsure, say Y.

Kernel support for MISC binaries
CONFIG_BINFMT_MISC
  If you say Y here, it will be possible to plug wrapper-driven binary
  formats into the kernel. You will like this especially when you use
  programs that need an interpreter to run like Java, Python or
  Emacs-Lisp. It's also useful if you often run DOS executables under
  the Linux DOS emulator DOSEMU (read the DOSEMU-HOWTO, available from
  http://www.linuxdoc.org/docs.html#howto ). Once you have
  registered such a binary class with the kernel, you can start one of
  those programs simply by typing in its name at a shell prompt; Linux
  will automatically feed it to the correct interpreter.

  You can do other nice things, too. Read the file
  Documentation/binfmt_misc.txt to learn how to use this feature, and
  Documentation/java.txt for information about how to include Java
  support.

  You must say Y to "/proc file system support" (CONFIG_PROC_FS) to
  use this part of the kernel.

  You may say M here for module support and later load the module when
  you have use for it; the module is called binfmt_misc.o. If you
  don't know what to answer at this point, say Y.

Solaris binary emulation (EXPERIMENTAL)
CONFIG_SOLARIS_EMUL
  This is experimental code which will enable you to run (many)
  Solaris binaries on your SPARC Linux machine. 

  This code is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called solaris.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt.

Processor family
CONFIG_M386
  This is the processor type of your CPU. This information is used for
  optimizing purposes. In order to compile a kernel that can run on
  all x86 CPU types (albeit not optimally fast), you can specify
  "386" here.

  The kernel will not necessarily run on earlier architectures than
  the one you have chosen, e.g. a Pentium optimized kernel will run on
  a PPro, but not necessarily on a i486.

  Here are the settings recommended for greatest speed:
   - "386" for the AMD/Cyrix/Intel 386DX/DXL/SL/SLC/SX, Cyrix/TI
     486DLC/DLC2, UMC 486SX-S and NexGen Nx586. Only "386" kernels will
     run on a 386 class machine.
   - "486" for the AMD/Cyrix/IBM/Intel 486DX/DX2/DX4 or
     SL/SLC/SLC2/SLC3/SX/SX2 and UMC U5D or U5S.
   - "586" for generic Pentium CPUs, possibly lacking the TSC 
     (time stamp counter) register.
   - "Pentium-Classic" for the Intel Pentium.
   - "Pentium-MMX" for the Intel Pentium MMX.
   - "Pentium-Pro" for the Intel Pentium Pro/Celeron/Pentium II.
   - "Pentium-III" for the Intel Pentium III.
   - "Pentium-4" for the Intel Pentium 4
   - "K6" for the AMD K6, K6-II and K6-III (aka K6-3D).
   - "Athlon" for the AMD Athlon (K7).
   - "Crusoe" for the Transmeta Crusoe series.
   - "Winchip-C6" for original IDT Winchip.
   - "Winchip-2" for IDT Winchip 2.
   - "Winchip-2A" for IDT Winchips with 3dNow! capabilities.

  If you don't know what to do, choose "386".

VGA text console
CONFIG_VGA_CONSOLE
  Saying Y here will allow you to use Linux in text mode through a
  display that complies with the generic VGA standard. Virtually
  everyone wants that. 

  The program SVGATextMode can be used to utilize SVGA video cards to
  their full potential in text mode. Download it from
  ftp://metalab.unc.edu/pub/Linux/utils/console .

  Say Y.

Video mode selection support
CONFIG_VIDEO_SELECT
  This enables support for text mode selection on kernel startup. If
  you want to take advantage of some high-resolution text mode your
  card's BIOS offers, but the traditional Linux utilities like
  SVGATextMode don't, you can say Y here and set the mode using the
  "vga=" option from your boot loader (lilo or loadlin) or set
  "vga=ask" which brings up a video mode menu on kernel startup. (Try
  "man bootparam" or see the documentation of your boot loader about
  how to pass options to the kernel.)

  Read the file Documentation/svga.txt for more information about the
  Video mode selection support. If unsure, say N.

Support for frame buffer devices (EXPERIMENTAL)
CONFIG_FB
  The frame buffer device provides an abstraction for the graphics
  hardware. It represents the frame buffer of some video hardware and
  allows application software to access the graphics hardware through
  a well-defined interface, so the software doesn't need to know
  anything about the low-level (hardware register) stuff. 

  Frame buffer devices work identically across the different
  architectures supported by Linux and make the implementation of
  application programs easier and more portable; at this point, an X
  server exists which uses the frame buffer device exclusively.
  On several non-X86 architectures, the frame buffer device is the
  only way to use the graphics hardware.
 
  The device is accessed through special device nodes, usually located
  in the /dev directory, i.e. /dev/fb*.

  You need an utility program called fbset to make full use of frame
  buffer devices. Please read Documentation/fb/framebuffer.txt and the
  Framebuffer-HOWTO at
  http://www.tahallah.demon.co.uk/programming/prog.html for more
  information.

  Say Y here and to the driver for your graphics board below if you
  are compiling a kernel for a non-x86 architecture.

  If you are compiling for the x86 architecture, you can say Y if you
  want to play with it, but it is not essential. Please note that
  running graphical applications that directly touch the hardware
  (e.g. an accelerated X server) and that are not frame buffer
  device-aware may cause unexpected results. If unsure, say N.

Acorn VIDC support
CONFIG_FB_ACORN
  This is the frame buffer device driver for the Acorn VIDC graphics
  hardware found in Acorn RISC PCs and other ARM-based machines.  If
  unsure, say N.

Amiga native chipset support
CONFIG_FB_AMIGA
  This is the frame buffer device driver for the builtin graphics
  chipset found in Amigas.

  The driver is also available as a module ( = code which can be
  inserted and removed from the running kernel whenever you want). The
  module will be called amifb.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt.

Amiga OCS chipset support
CONFIG_FB_AMIGA_OCS
  This enables support for the original Agnus and Denise video chips,
  found in the Amiga 1000 and most A500's and A2000's. If you intend
  to run Linux on any of these systems, say Y; otherwise say N.

Amiga ECS chipset support
CONFIG_FB_AMIGA_ECS
  This enables support for the Enhanced Chip Set, found in later
  A500's, later A2000's, the A600, the A3000, the A3000T and CDTV. If
  you intend to run Linux on any of these systems, say Y; otherwise
  say N.

Amiga AGA chipset support
CONFIG_FB_AMIGA_AGA
  This enables support for the Advanced Graphics Architecture (also
  known as the AGA or AA) Chip Set, found in the A1200, A4000, A4000T
  and CD32. If you intend to run Linux on any of these systems, say Y;
  otherwise say N.

Amiga CyberVision support
CONFIG_FB_CYBER
  This enables support for the Cybervision 64 graphics card from
  Phase5. Please note that its use is not all that intuitive (i.e. if
  you have any questions, be sure to ask!). Say N unless you have a
  Cybervision 64 or plan to get one before you next recompile the
  kernel. Please note that this driver DOES NOT support the
  Cybervision 64 3D card, as they use incompatible video chips.

CyberPro 20x0 support
CONFIG_FB_CYBER2000
  This enables support for the Integraphics CyberPro 20x0 and 5000
  VGA chips used in the Rebel.com Netwinder and other machines.
  Say Y if you have a NetWinder or a graphics card containing this
  device, otherwise say N.

Amiga CyberVision3D support (EXPERIMENTAL)
CONFIG_FB_VIRGE
  This enables support for the Cybervision 64/3D graphics card from
  Phase5. Please note that its use is not all that intuitive (i.e. if
  you have any questions, be sure to ask!). Say N unless you have a
  Cybervision 64/3D or plan to get one before you next recompile the
  kernel. Please note that this driver DOES NOT support the older
  Cybervision 64 card, as they use incompatible video chips.

Amiga RetinaZ3 support (EXPERIMENTAL)
CONFIG_FB_RETINAZ3
  This enables support for the Retina Z3 graphics card. Say N unless
  you have a Retina Z3 or plan to get one before you next recompile
  the kernel.

Cirrus Logic generic driver (EXPERIMENTAL)
CONFIG_FB_CLGEN
  This enables support for Cirrus Logic GD542x/543x based boards on
  Amiga: SD64, Piccolo, Picasso II/II+, Picasso IV, or EGS Spectrum.

  If you have a PCI-based system, this enables support for these
  chips: GD-543x, GD-544x, GD-5480.

  Please read the file Documentation/fb/clgenfb.txt.

  Say N unless you have such a graphics board or plan to get one
  before you next recompile the kernel.

Permedia2 support (EXPERIMENTAL)
CONFIG_FB_PM2
  Say Y here if this is your graphics board.

Apollo support
CONFIG_APOLLO
  Say Y here if you want to run Linux on an MC680x0-based Apollo
  Domain workstation such as the DN3500.

Apollo 3c505 support
CONFIG_APOLLO_ELPLUS
  Say Y or M here if your Apollo has a 3Com 3c505 ISA Ethernet card.
  If you don't have one made for Apollos, you can use one from a PC,
  except that your Apollo won't be able to boot from it (because the
  code in the ROM will be for a PC).

Atari native chipset support
CONFIG_FB_ATARI
  This is the frame buffer device driver for the builtin graphics
  chipset found in Ataris.

Open Firmware frame buffer device support 
CONFIG_FB_OF
  Say Y if you want support with Open Firmware for your graphics
  board.

S3 Trio frame buffer device support 
CONFIG_FB_S3TRIO
  If you have a S3 Trio say Y. Say N for S3 Virge. 

3Dfx Banshee/Voodoo3 display support (EXPERIMENTAL)
CONFIG_FB_3DFX
  This driver supports graphics boards with the 3Dfx Banshee/Voodoo3
  chips. Say Y if you have such a graphics board.

  The driver is also available as a module ( = code which can be
  inserted and removed from the running kernel whenever you want). The
  module will be called tdfxfb.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt.

nVidia Riva support (EXPERIMENTAL)
CONFIG_FB_RIVA
  This driver supports graphics boards with the nVidia Riva (aka TNTx)
  chips.
  Say Y if you have such a graphics board.

  The driver is also available as a module ( = code which can be
  inserted and removed from the running kernel whenever you want). The
  module will be called rivafb.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt.

ATI Mach64 display support (EXPERIMENTAL)
CONFIG_FB_ATY
  This driver supports graphics boards with the ATI Mach64 chips.
  Say Y if you have such a graphics board.

  The driver is also available as a module ( = code which can be
  inserted and removed from the running kernel whenever you want). The
  module will be called atyfb.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt.
  
ATI Rage128 display support (EXPERIMENTAL)
CONFIG_FB_ATY128
  This driver supports graphics boards with the ATI Rage128 chips.
  Say Y if you have such a graphics board and read
  Documentation/fb/aty128fb.txt. 

  The driver is also available as a module ( = code which can be
  inserted and removed from the running kernel whenever you want). The
  module will be called aty128fb.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt.

PowerMac "control" frame buffer device support
CONFIG_FB_CONTROL
  This driver supports a frame buffer for the graphics adapter in the
  Power Macintosh 7300 and others.

PowerMac "platinum" frame buffer device support
CONFIG_FB_PLATINUM
  This driver supports a frame buffer for the "platinum" graphics
  adapter in some Power Macintoshes.

PowerMac "valkyrie" frame buffer device support
CONFIG_FB_VALKYRIE
  This driver supports a frame buffer for the "valkyrie" graphics
  adapter in some Power Macintoshes.

Chips 65550 display support
CONFIG_FB_CT65550
  This is the frame buffer device driver for the Chips & Technologies
  65550 graphics chip in PowerBooks.

TGA frame buffer support
CONFIG_FB_TGA
  This is the frame buffer device driver for generic TGA graphic
  cards. Say Y if you have one of those.

VESA VGA graphics console
CONFIG_FB_VESA
  This is the frame buffer device driver for generic VESA 2.0
  compliant graphic cards. The older VESA 1.2 cards are not supported.
  You will get a boot time penguin logo at no additional cost. Please
  read Documentation/fb/vesafb.txt. If unsure, say Y.

VGA 16-color planar support
CONFIG_FBCON_VGA_PLANES
  This low level frame buffer console driver enable the kernel to use
  the 16-color planar modes of the old VGA cards where the bits of
  each pixel are separated into 4 planes. 

  Only answer Y here if you have a (very old) VGA card that isn't VESA
  2 compatible.

VGA 16-color graphics console
CONFIG_FB_VGA16
  This is the frame buffer device driver for VGA 16 color graphic
  cards. Say Y if you have such a card.

  This code is also available as a module. If you want to compile it
  as a module ( = code which can be inserted in and removed from the
  running kernel whenever you want), say M here and read
  Documentation/modules.txt. The module will be called vga16fb.o.

Select other compiled-in fonts
CONFIG_FBCON_FONTS
  Say Y here if you would like to use fonts other than the default
  your frame buffer console usually use.

  Note that the answer to this question won't directly affect the
  kernel: saying N will just cause this configure script to skip all
  the questions about foreign fonts.

  If unsure, say N (the default choices are safe).

VGA 8x16 font
CONFIG_FONT_8x16
  This is the "high resolution" font for the VGA frame buffer (the one
  provided by the VGA text console 80x25 mode.

  If unsure, say Y.

Support only 8 pixels wide fonts
CONFIG_FBCON_FONTWIDTH8_ONLY
  Answer Y here will make the kernel provide only the 8x8 fonts (these
  are the less readable).

  If unsure, say N.

Sparc console 8x16 font
CONFIG_FONT_SUN8x16
  This is the high resolution console font for Sun machines. Say Y.

Sparc console 12x22 font (not supported by all drivers)
CONFIG_FONT_SUN12x22
  This is the high resolution console font for Sun machines with very
  big letters (like the letters used in the SPARC PROM). If the
  standard font is unreadable for you, say Y, otherwise say N.

VGA 8x8 font
CONFIG_FONT_8x8
  This is the "high resolution" font for the VGA frame buffer (the one
  provided by the text console 80x50 (and higher) modes). 

  Note that this is a poor quality font. The VGA 8x16 font is quite a
  lot more readable. 

  Given the resolution provided by the frame buffer device, answer N
  here is safe.

Backward compatibility mode for Xpmac
CONFIG_FB_COMPAT_XPMAC
  If you use the Xpmac X server (common with mklinux), you'll need to
  say Y here to use X. You should consider changing to XFree86 which
  includes a server that supports the frame buffer device directly
  (XF68_FBDev).

HGA monochrome support (EXPERIMENTAL)
CONFIG_FB_HGA
  Say Y here if you have a Hercules mono graphics card.

  This driver is also available as a module ( = code which can be
  inserted and removed from the running kernel whenever you want).
  The module will be called hgafb.o. If you want to compile it as
  a module, say M here and read Documentation/modules.txt.

  As this card technology is 15 years old, most people will answer N
  here.

Matrox unified accelerated driver (EXPERIMENTAL)
CONFIG_FB_MATROX
  Say Y here if you have a Matrox Millennium, Matrox Millennium II,
  Matrox Mystique, Matrox Mystique 220, Matrox Productiva G100, Matrox
  Mystique G200, Matrox Millennium G200, Matrox Marvel G200 video,
  Matrox G400 or G450 card in your box. At this time, support for the G100
  is untested and support for G450 is highly experimental.

  This driver is also available as a module ( = code which can be
  inserted and removed from the running kernel whenever you want).
  The module will be called matroxfb.o. If you want to compile it as
  a module, say M here and read Documentation/modules.txt.

  You can pass several parameters to the driver at boot time or at
  module load time. The parameters look like "video=matrox:XXX", where
  the meaning of XXX can be found at the end of the main source file
  (drivers/video/matroxfb.c). Please see the file
  Documentation/fb/matroxfb.txt. 

Matrox Millennium support
CONFIG_FB_MATROX_MILLENIUM
  Say Y here if you have a Matrox Millennium or Matrox Millennium II
  video card. If you select "Advanced lowlevel driver options" below,
  you should check 4 bpp packed pixel, 8 bpp packed pixel, 16 bpp
  packed pixel, 24 bpp packed pixel and 32 bpp packed pixel. You can
  also use font widths different from 8.

Matrox Mystique support
CONFIG_FB_MATROX_MYSTIQUE
  Say Y here if you have a Matrox Mystique or Matrox Mystique 220
  video card. If you select "Advanced lowlevel driver options" below,
  you should check 8 bpp packed pixel, 16 bpp packed pixel, 24 bpp
  packed pixel and 32 bpp packed pixel. You can also use font widths
  different from 8.

Matrox G100/G200/G400/G450 support
CONFIG_FB_MATROX_G100
  Say Y here if you have a Matrox G100, G200, G400 or G450 based
  video card. If you select "Advanced lowlevel driver options", you 
  should check 8 bpp packed pixel, 16 bpp packed pixel, 24 bpp packed 
  pixel and 32 bpp packed pixel. You can also use font widths 
  different from 8.

  If you need support for G400 secondary head, you must first say Y to
  "I2C support" and "I2C bit-banging support" in the character devices
  section, and then to "Matrox I2C support" and "G400 second head
  support" here in the framebuffer section.

Matrox I2C support
CONFIG_FB_MATROX_I2C
  This drivers creates I2C buses which are needed for accessing the
  DDC (I2C) bus present on all Matroxes, an I2C bus which
  interconnects Matrox optional devices, like MGA-TVO on G200 and
  G400, and the secondary head DDC bus, present on G400 only.
  
  You can say Y or M here if you want to experiment with monitor 
  detection code. You must say Y or M here if you want to use either
  second head of G400 or MGA-TVO on G200 or G400.
  
  If you compile it as module, it will create a module named
  i2c-matroxfb.o.
  
Matrox G400 second head support
CONFIG_FB_MATROX_MAVEN
  WARNING !!! This support does not work with G450 !!!

  Say Y or M here if you want to use a secondary head (meaning two
  monitors in parallel) on G400 or MGA-TVO add-on on G200. Secondary
  head is not compatible with accelerated XFree 3.3.x SVGA servers -
  secondary head output is blanked while you are in X. With XFree
  3.9.17 preview you can use both heads if you use SVGA over fbdev or
  the fbdev driver on first head and the fbdev driver on second head.
  
  If you compile it as module, two modules are created,
  matroxfb_crtc2.o and matroxfb_maven.o. Matroxfb_maven is needed for
  both G200 and G400, matroxfb_crtc2 is needed only by G400. You must
  also load i2c-matroxfb to get it to run.
  
  The driver starts in monitor mode and you must use the matroxset
  tool (available at ftp://platan.vc.cvut.cz/pub/linux/matrox-latest)
  to switch it to PAL or NTSC or to swap primary and secondary head
  outputs. Secondary head driver also always start in 640x480
  resolution, you must use fbset to change it.
  
  Also do not forget that second head supports only 16 and 32 bpp
  packed pixels, so it is a good idea to compile them into the kernel
  too. You can use only some font widths, as the driver uses generic
  painting procedures (the secondary head does not use acceleration
  engine).
  
  There is no need for enabling 'Matrox multihead support' if you have
  only one Matrox card in the box.

Matrox G450 second head support
CONFIG_FB_MATROX_G450
  Say Y or M here if you want to use a secondary head (meaning two
  monitors in parallel) on G450.

  If you compile it as module, two modules are created,
  matroxfb_crtc2.o and matroxfb_g450.o. Both modules are needed if you
  want two independent display devices.

  The driver starts in monitor mode and currently does not support
  output in TV modes. You must use the matroxset tool (available
  at ftp://platan.vc.cvut.cz/pub/linux/matrox-latest) to swap primary
  and secondary head outputs. Secondary head driver always start in
  640x480 resolution and you must use fbset to change it.

  Also do not forget that second head supports only 16 and 32 bpp
  packed pixels, so it is a good idea to compile them into the kernel
  too. You can use only some font widths, as the driver uses generic
  painting procedures (the secondary head does not use acceleration
  engine).

  There is no need for enabling 'Matrox multihead support' if you have
  only one Matrox card in the box.

Matrox unified driver multihead support
CONFIG_FB_MATROX_MULTIHEAD
  Say Y here if you have more than one (supported) Matrox device in
  your computer and you want to use all of them for different monitors
  ("multihead"). If you have only one device, you should say N because
  the driver compiled with Y is larger and a bit slower, especially on
  ia32 (ix86).

  If you said M to "Matrox unified accelerated driver" and N here, you
  will still be able to use several Matrox devices simultaneously:
  insert several instances of the module matroxfb.o into the kernel
  with insmod, supplying the parameter "dev=N" where N is 0, 1, etc.
  for the different Matrox devices. This method is slightly faster but
  uses 40 KB of kernel memory per Matrox card.

MDA text console (dual-headed)
CONFIG_MDA_CONSOLE
  Say Y here if you have an old MDA or monochrome Hercules graphics
  adapter in your system acting as a second head ( = video card). You
  will then be able to use two monitors with your Linux system. Do not
  say Y here if your MDA card is the primary card in your system; the
  normal VGA driver will handle it.
  
  This driver is also available as a module ( = code which can be
  inserted and removed from the running kernel whenever you want).
  The module will be called mdacon.o. If you want to compile it as
  a module, say M here and read Documentation/modules.txt.
  
  If unsure, say N.

SBUS and UPA frame buffers
CONFIG_FB_SBUS
  Say Y if you want support for SBUS or UPA based frame buffer device.

Creator/Creator3D support
CONFIG_FB_CREATOR
  This is the frame buffer device driver for the Creator and Creator3D
  graphics boards.

CGsix (GX,TurboGX) support
CONFIG_FB_CGSIX
  This is the frame buffer device driver for the CGsix (GX, TurboGX)
  frame buffer.

BWtwo support
CONFIG_FB_BWTWO
  This is the frame buffer device driver for the BWtwo frame buffer.

CGthree support
CONFIG_FB_CGTHREE
  This is the frame buffer device driver for the CGthree frame buffer.

TCX (SS4/SS5 only) support
CONFIG_FB_TCX
  This is the frame buffer device driver for the TCX 24/8bit frame
  buffer.

Virtual Frame Buffer support (ONLY FOR TESTING!)
CONFIG_FB_VIRTUAL
  This is a `virtual' frame buffer device. It operates on a chunk of
  unswapable kernel memory instead of on the memory of a graphics
  board. This means you cannot see any output sent to this frame
  buffer device, while it does consume precious memory. The main use
  of this frame buffer device is testing and debugging the frame
  buffer subsystem. Do NOT enable it for normal systems! To protect
  the innocent, it has to be enabled explicitly at boot time using the
  kernel option `video=vfb:'.

  This driver is also available as a module ( = code which can be
  inserted and removed from the running kernel whenever you want). The
  module will be called vfb.o. If you want to compile it as a module,
  say M here and read Documentation/modules.txt.
 
  If unsure, say N.

CONFIG_FB_SA1100
  This is a framebuffer device for the SA-1100 LCD Controller.
  See http://www.linux-fbdev.org/ for information on framebuffer
  devices.

  If you plan to use the LCD display with your SA-1100 system, say
  Y here.

Advanced low level driver options
CONFIG_FBCON_ADVANCED
  The frame buffer console uses character drawing routines that are
  tailored to the specific organization of pixels in the memory of
  your graphics hardware. These are called the low level frame buffer
  console drivers. Note that they are used for text console output
  only; they are NOT needed for graphical applications.

  If you say N here, the needed low level drivers are automatically
  enabled, depending on what frame buffer devices you selected above.
  This is recommended for most users.

  If you say Y here, you have more fine-grained control over which low
  level drivers are enabled. You can e.g. leave out low level drivers
  for color depths you do not intend to use for text consoles.

  Low level frame buffer console drivers can be modules ( = code which
  can be inserted and removed from the running kernel whenever you
  want). The modules will be called fbcon-*.o. If you want to compile
  (some of) them as modules, read Documentation/modules.txt.
  
  If unsure, say N.

Monochrome support
CONFIG_FBCON_MFB
  This is the low level frame buffer console driver for monochrome
  (2 colors) packed pixels.

2 bpp packed pixels support
CONFIG_FBCON_CFB2
  This is the low level frame buffer console driver for 2 bits per
  pixel (4 colors) packed pixels.

4 bpp packed pixels support
CONFIG_FBCON_CFB4
  This is the low level frame buffer console driver for 4 bits per
  pixel (16 colors) packed pixels.

8 bpp packed pixels support
CONFIG_FBCON_CFB8
  This is the low level frame buffer console driver for 8 bits per
  pixel (256 colors) packed pixels.

16 bpp packed pixels support
CONFIG_FBCON_CFB16
  This is the low level frame buffer console driver for 15 or 16 bits
  per pixel (32K or 64K colors, also known as `hicolor') packed
  pixels.

24 bpp packed pixels support
CONFIG_FBCON_CFB24
  This is the low level frame buffer console driver for 24 bits per
  pixel (16M colors, also known as `truecolor') packed pixels. It is
  NOT for `sparse' 32 bits per pixel mode.

32 bpp packed pixels support
CONFIG_FBCON_CFB32
  This is the low level frame buffer console driver for 32 bits per
  pixel (16M colors, also known as `truecolor') sparse packed pixels.

Amiga bitplanes support
CONFIG_FBCON_AFB
  This is the low level frame buffer console driver for 1 to 8
  bitplanes (2 to 256 colors) on Amiga.

Amiga interleaved bitplanes support
CONFIG_FBCON_ILBM
  This is the low level frame buffer console driver for 1 to 8
  interleaved bitplanes (2 to 256 colors) on Amiga.

Atari interleaved bitplanes (2 planes) support
CONFIG_FBCON_IPLAN2P2
  This is the low level frame buffer console driver for 2 interleaved
  bitplanes (4 colors) on Atari.

Atari interleaved bitplanes (4 planes) support
CONFIG_FBCON_IPLAN2P4
  This is the low level frame buffer console driver for 4 interleaved
  bitplanes (16 colors) on Atari.

Atari interleaved bitplanes (8 planes) support
CONFIG_FBCON_IPLAN2P8
  This is the low level frame buffer console driver for 8 interleaved
  bitplanes (256 colors) on Atari.

Mac variable bpp packed pixels support
CONFIG_FBCON_MAC
  This is the low level frame buffer console driver for 1/2/4/8/16/32
  bits per pixel packed pixels on Mac. It supports variable font
  widths for low resolution screens.
  
HGA monochrome support (EXPERIMENTAL)
CONFIG_FBCON_HGA
  This is the low level frame buffer console driver for Hercules mono 
  graphics cards.

VGA characters/attributes support
CONFIG_FBCON_VGA
  This is the low level frame buffer console driver for VGA text mode;
  it is used by frame buffer device drivers that support VGA text
  mode.

Parallel-port support
CONFIG_PARPORT
  If you want to use devices connected to your machine's parallel port
  (the connector at the computer with 25 holes), e.g. printer, ZIP
  drive, PLIP link (Parallel Line Internet Protocol is mainly used to
  create a mini network by connecting the parallel ports of two local
  machines) etc., then you need to say Y here; please read
  Documentation/parport.txt and drivers/parport/BUGS-parport.

  For extensive information about drivers for many devices attaching
  to the parallel port see http://www.torque.net/linux-pp.html on the
  WWW.

  It is possible to share a single parallel port among several devices
  and it is safe to compile all the corresponding drivers into the
  kernel. If you want to compile parallel port support as a module ( =
  code which can be inserted in and removed from the running kernel
  whenever you want), say M here and read Documentation/modules.txt.
  The module will be called parport.o. If you have more than one
  parallel port and want to specify which port and IRQ to be used by
  this driver at module load time, take a look at
  Documentation/parport.txt.

  If unsure, say Y.

PC-style hardware
CONFIG_PARPORT_PC
  You should say Y here if you have a PC-style parallel port. All IBM
  PC compatible computers and some Alphas have PC-style parallel
  ports. 

  This code is also available as a module. If you want to compile it
  as a module ( = code which can be inserted in and removed from the
  running kernel whenever you want), say M here and read
  Documentation/modules.txt. The module will be called parport_pc.o.
  
  If unsure, say Y.

Use FIFO/DMA if available
CONFIG_PARPORT_PC_FIFO
  Many parallel port chipsets provide hardware that can speed up
  printing. Say Y here if you want to take advantage of that.

  As well as actually having a FIFO, or DMA capability, the kernel
  will need to know which IRQ the parallel port has. By default,
  parallel port interrupts will not be used, and so neither will the
  FIFO. See Documentation/parport.txt to find out how to specify
  which IRQ/DMA to use.

SuperIO chipset support (EXPERIMENTAL)
CONFIG_PARPORT_PC_SUPERIO
  Saying Y here enables some probes for Super-IO chipsets in order to
  find out things like base addresses, IRQ lines and DMA channels.  It
  is safe to say N.

Support for PCMCIA management for PC-style ports
CONFIG_PARPORT_PC_PCMCIA
  Say Y here if you need PCMCIA support for your PC-style parallel
  ports. If unsure, say N.

Support foreign hardware
CONFIG_PARPORT_OTHER
  Say Y here if you want to be able to load driver modules to support
  other non-standard types of parallel ports. This causes a
  performance loss, so most people say N.

Sun Ultra/AX-style hardware 
CONFIG_PARPORT_AX
  Say Y here if you need support for the parallel port hardware on Sun
  Ultra/AX machines. This code is also available as a module (say M),
  called parport_ax.o. If in doubt, saying N is the safe plan.

Amiga built-in parallel port support
CONFIG_PARPORT_AMIGA
  Say Y here if you need support for the parallel port hardware on
  Amiga machines. This code is also available as a module (say M),
  called parport_amiga.o. If in doubt, saying N is the safe plan.

Atari built-in parallel port support
CONFIG_PARPORT_ATARI
  Say Y here if you need support for the parallel port hardware on
  Atari machines. This code is also available as a module (say M),
  called parport_atari.o. If in doubt, saying N is the safe plan.

Multiface 3 parallel port card support
CONFIG_PARPORT_MFC3
  Say Y here if you need parallel port support for the MFC3 card.
  This code is also available as a module (say M), called
  parport_mfc3.o. If in doubt, saying N is the safe plan.

Support IEEE1284 status readback
CONFIG_PRINTER_READBACK
  If you have a device on your parallel port that support this
  protocol, this option will allow the device to report its status. It
  is safe to say Y.

IEEE1284 transfer modes
CONFIG_PARPORT_1284
  If you have a printer that supports status readback or device ID, or
  want to use a device that uses enhanced parallel port transfer modes
  such as EPP and ECP, say Y here to enable advanced IEEE 1284
  transfer modes. Also say Y if you want device ID information to
  appear in /proc/sys/dev/parport/*/autoprobe*. It is safe to say N.
 
Enable loadable module support
CONFIG_MODULES
  Kernel modules are small pieces of compiled code which can be
  inserted in or removed from the running kernel, using the programs
  insmod and rmmod. This is described in the file
  Documentation/modules.txt, including the fact that you have to say
  "make modules" in order to compile the modules that you chose during
  kernel configuration. Modules can be device drivers, file systems,
  binary executable formats, and so on. If you think that you may want
  to make use of modules with this kernel in the future, then say Y
  here. If unsure, say Y.

Set version information on all symbols for modules
CONFIG_MODVERSIONS
  Usually, modules have to be recompiled whenever you switch to a new
  kernel. Saying Y here makes it possible, and safe, to use the
  same modules even after compiling a new kernel; this requires the
  program modprobe. All the software needed for module support is in
  the modutils package (check the file Documentation/Changes for
  location and latest version). NOTE: if you say Y here but don't
  have the program genksyms (which is also contained in the above
  mentioned modutils package), then the building of your kernel will
  fail. If you are going to use modules that are generated from
  non-kernel sources, you would benefit from this option. Otherwise
  it's not that important. So, N ought to be a safe bet.

Kernel module loader support
CONFIG_KMOD
  Normally when you have selected some drivers and/or file systems to
  be created as loadable modules, you also have the responsibility to
  load the corresponding modules (using the programs insmod or
  modprobe) before you can use them. If you say Y here however, the
  kernel will be able to load modules for itself: when a part of the
  kernel needs a module, it runs modprobe with the appropriate
  arguments, thereby loading the module if it is available. (This is a
  replacement for kerneld.) Say Y here and read about configuring it
  in Documentation/kmod.txt.

ARP daemon support (EXPERIMENTAL)
CONFIG_ARPD
  Normally, the kernel maintains an internal cache which maps IP 
  addresses to hardware addresses on the local network, so that
  Ethernet/Token Ring/ etc. frames are sent to the proper address on
  the physical networking layer. For small networks having a few
  hundred directly connected hosts or less, keeping this address
  resolution (ARP) cache inside the kernel works well. However,
  maintaining an internal ARP cache does not work well for very large
  switched networks, and will use a lot of kernel memory if TCP/IP
  connections are made to many machines on the network. 

  If you say Y here, the kernel's internal ARP cache will never grow
  to more than 256 entries (the oldest entries are expired in a LIFO
  manner) and communication will be attempted with the user space ARP
  daemon arpd. Arpd then answers the address resolution request either
  from its own cache or by asking the net.

  This code is experimental and also obsolete. If you want to use it,
  you need to find a version of the daemon arpd on the net somewhere,
  and you should also say Y to "Kernel/User network link driver",
  below. If unsure, say N.

TCP/IP networking
CONFIG_INET
  These are the protocols used on the Internet and on most local
  Ethernets. It is highly recommended to say Y here (this will enlarge
  your kernel by about 144 KB), since some programs (e.g. the X window
  system) use TCP/IP even if your machine is not connected to any
  other computer. You will get the so-called loopback device which
  allows you to ping yourself (great fun, that!).

  For an excellent introduction to Linux networking, please read the
  NET-3-HOWTO, available from
  http://www.linuxdoc.org/docs.html#howto .

  This option is also necessary if you want to use the full power of
  term (term is a program which gives you almost full Internet
  connectivity if you have a regular dial up shell account on some
  Internet connected Unix computer; for more information, read
  http://www.bart.nl/~patrickr/term-howto/Term-HOWTO.html ).
  
  If you say Y here and also to "/proc file system support" and
  "Sysctl support" below, you can change various aspects of the
  behavior of the TCP/IP code by writing to the (virtual) files in
  /proc/sys/net/ipv4/*; the options are explained in the file
  Documentation/networking/ip-sysctl.txt.

  Short answer: say Y.

IP: multicasting
CONFIG_IP_MULTICAST
  This is code for addressing several networked computers at once,
  enlarging your kernel by about 2 KB. You need multicasting if you
  intend to participate in the MBONE, a high bandwidth network on top
  of the Internet which carries audio and video broadcasts. More
  information about the MBONE is on the WWW at
  http://www-itg.lbl.gov/mbone/ . Information about the multicast
  capabilities of the various network cards is contained in
  Documentation/networking/multicast.txt. For most people, it's safe
  to say N.

IP: advanced router
CONFIG_IP_ADVANCED_ROUTER
  If you intend to run your Linux box mostly as a router, i.e. as a
  computer that forwards and redistributes network packets, say Y; you
  will then be presented with several options that allow more precise
  control about the routing process.

  The answer to this question won't directly affect the kernel:
  answering N will just cause this configure script to skip all the
  questions about advanced routing.

  Note that your box can only act as a router if you enable IP
  forwarding in your kernel; you can do that by saying Y to "/proc
  file system support" and "Sysctl support" below and executing the
  line

    echo "1" > /proc/sys/net/ipv4/ip_forward

  at boot time after the /proc file system has been mounted. 

  If you turn on IP forwarding, you will also get the rp_filter, which
  automatically rejects incoming packets if the routing table entry
  for their source address doesn't match the network interface they're
  arriving on. This has security advantages because it prevents the
  so-called IP spoofing, however it can pose problems if you use
  asymmetric routing (packets from you to a host take a different path
  than packets from that host to you) or if you operate a non-routing
  host which has several IP addresses on different interfaces. To turn
  rp_filter off use:

        echo 0 > /proc/sys/net/ipv4/conf/<device>/rp_filter
  or
        echo 0 > /proc/sys/net/ipv4/conf/all/rp_filter

  If unsure, say N here.

IP: policy routing
CONFIG_IP_MULTIPLE_TABLES
  Normally, a router decides what to do with a received packet based
  solely on the packet's final destination address. If you say Y here,
  the Linux router will also be able to take the packet's source
  address into account. Furthermore, if you also say Y to "IP: use TOS
  value as routing key" below, the TOS (Type-Of-Service) field of the
  packet can be used for routing decisions as well. In addition, if
  you say Y here and to "IP: fast network address translation" below,
  the router will also be able to modify source and destination
  addresses of forwarded packets.

  If you are interested in this, please see the preliminary
  documentation at http://www.compendium.com.ar/policy-routing.txt and
  ftp://post.tepkom.ru/pub/vol2/Linux/docs/advanced-routing.tex . You
  will need supporting software from ftp://ftp.inr.ac.ru/ip-routing/
  
  If unsure, say N.
  
IP: equal cost multipath
CONFIG_IP_ROUTE_MULTIPATH
  Normally, the routing tables specify a single action to be taken in
  a deterministic manner for a given packet. If you say Y here
  however, it becomes possible to attach several actions to a packet
  pattern, in effect specifying several alternative paths to travel
  for those packets. The router considers all these paths to be of
  equal "cost" and chooses one of them in a non-deterministic fashion
  if a matching packet arrives.

IP: use TOS value as routing key
CONFIG_IP_ROUTE_TOS
  The header of every IP packet carries a TOS (Type Of Service) value
  with which the packet requests a certain treatment, e.g. low latency
  (for interactive traffic), high throughput, or high reliability. If
  you say Y here, you will be able to specify different routes for
  packets with different TOS values.

IP: use netfilter MARK value as routing key
CONFIG_IP_ROUTE_FWMARK
  If you say Y here, you will be able to specify different routes for
  packets with different mark values (see iptables(8), MARK target).

IP: verbose route monitoring
CONFIG_IP_ROUTE_VERBOSE
  If you say Y here, which is recommended, then the kernel will print
  verbose messages regarding the routing, for example warnings about
  received packets which look strange and could be evidence of an
  attack or a misconfigured system somewhere. The information is
  handled by the klogd daemon which is responsible for kernel messages
  ("man klogd").

IP: large routing tables
CONFIG_IP_ROUTE_LARGE_TABLES
  If you have routing zones that grow to more than about 64 entries,
  you may want to say Y here to speed up the routing process.

IP: fast network address translation
CONFIG_IP_ROUTE_NAT
  If you say Y here, your router will be able to modify source and
  destination addresses of packets that pass through it, in a manner
  you specify. General information about Network Address Translation
  can be gotten from the document
  http://www.csn.tu-chemnitz.de/~mha/linux-ip-nat/diplom/nat.html

IP: kernel level autoconfiguration
CONFIG_IP_PNP
  This enables automatic configuration of IP addresses of devices and
  of the routing table during kernel boot, based on either information
  supplied on the kernel command line or by BOOTP or RARP protocols.
  You need to say Y only for diskless machines requiring network
  access to boot (in which case you want to say Y to "Root file system
  on NFS" as well), because all other machines configure the network
  in their startup scripts.

BOOTP support
CONFIG_IP_PNP_BOOTP
  If you want your Linux box to mount its whole root file system (the
  one containing the directory /) from some other computer over the
  net via NFS and you want the IP address of your computer to be
  discovered automatically at boot time using the BOOTP protocol (a
  special protocol designed for doing this job), say Y here. In case
  the boot ROM of your network card was designed for booting Linux and
  does BOOTP itself, providing all necessary information on the kernel
  command line, you can say N here. If unsure, say Y. Note that if you
  want to use BOOTP, a BOOTP server must be operating on your network.
  Read Documentation/nfsroot.txt for details.

RARP support
CONFIG_IP_PNP_RARP
  If you want your Linux box to mount its whole root file system (the
  one containing the directory /) from some other computer over the
  net via NFS and you want the IP address of your computer to be
  discovered automatically at boot time using the RARP protocol (an
  older protocol which is being obsoleted by BOOTP and DHCP), say Y
  here. Note that if you want to use RARP, a RARP server must be
  operating on your network. Read Documentation/nfsroot.txt for
  details.

IP: tunneling
CONFIG_NET_IPIP
  Tunneling means encapsulating data of one protocol type within
  another protocol and sending it over a channel that understands the
  encapsulating protocol. This particular tunneling driver implements
  encapsulation of IP within IP, which sounds kind of pointless, but
  can be useful if you want to make your (or some other) machine
  appear on a different network than it physically is, or to use
  mobile-IP facilities (allowing laptops to seamlessly move between
  networks without changing their IP addresses; check out
  http://anchor.cs.binghamton.edu/~mobileip/LJ/index.html ). 

  Saying Y to this option will produce two modules ( = code which can
  be inserted in and removed from the running kernel whenever you
  want). Most people won't need this and can say N.

IP: GRE tunnels over IP
CONFIG_NET_IPGRE
  Tunneling means encapsulating data of one protocol type within
  another protocol and sending it over a channel that understands the
  encapsulating protocol. This particular tunneling driver implements
  GRE (Generic Routing Encapsulation) and at this time allows
  encapsulating of IPv4 or IPv6 over existing IPv4 infrastructure.
  This driver is useful if the other endpoint is a Cisco router: Cisco
  likes GRE much better than the other Linux tunneling driver ("IP:
  tunneling" above). In addition, GRE allows multicast redistribution
  through the tunnel.

IP: broadcast GRE over IP
CONFIG_NET_IPGRE_BROADCAST
  One application of GRE/IP is to construct a broadcast WAN (Wide Area
  Network), which looks like a normal Ethernet LAN (Local Area
  Network), but can be distributed all over the Internet. If you want
  to do that, say Y here and to "IP: multicast routing" below.

IP: multicast routing
CONFIG_IP_MROUTE
  This is used if you want your machine to act as a router for IP
  packets that have several destination addresses. It is needed on the
  MBONE, a high bandwidth network on top of the Internet which carries
  audio and video broadcasts. In order to do that, you would most
  likely run the program mrouted. Information about the multicast
  capabilities of the various network cards is contained in
  Documentation/networking/multicast.txt. If you haven't heard about
  it, you don't need it.

IP: PIM-SM version 1 support
CONFIG_IP_PIMSM_V1
  Kernel side support for Sparse Mode PIM (Protocol Independent
  Multicast) version 1. This multicast routing protocol is used widely
  because Cisco supports it. You need special software to use it
  (pimd-v1). Please see http://netweb.usc.edu/pim/ for more
  information about PIM.

  Say Y if you want to use PIM-SM v1. Note that you can say N here if
  you just want to use Dense Mode PIM.

IP: PIM-SM version 2 support
CONFIG_IP_PIMSM_V2
  Kernel side support for Sparse Mode PIM version 2. In order to use
  this, you need an experimental routing daemon supporting it (pimd or
  gated-5). This routing protocol is not used widely, so say N unless
  you want to play with it.

PC/TCP compatibility mode
CONFIG_INET_PCTCP
  If you have been having difficulties telnetting to your Linux
  machine from a DOS system that uses (broken) PC/TCP networking
  software (all versions up to OnNet 2.0) over your local Ethernet try
  saying Y here. Everyone else says N. 

  People having problems with NCSA telnet should see the file
  Documentation/networking/ncsa-telnet.

Path MTU Discovery (normally enabled)
CONFIG_PATH_MTU_DISCOVERY
  MTU (maximal transfer unit) is the size of the chunks we send out
  over the net. "Path MTU Discovery" means that, instead of always
  sending very small chunks, we start out sending big ones and if we
  then discover that some host along the way likes its chunks smaller,
  we adjust to a smaller size. This is good, so most people say Y
  here.

  However, some DOS software (versions of DOS NCSA telnet and Trumpet
  Winsock in PPP mode) is broken and won't be able to connect to your
  Linux machine correctly in all cases (especially through a terminal
  server) unless you say N here. See
  Documentation/networking/ncsa-telnet for the location of fixed NCSA
  telnet clients. If in doubt, say Y.

Disable NAGLE algorithm (normally enabled)
CONFIG_TCP_NAGLE_OFF
  The NAGLE algorithm works by requiring an acknowledgment before
  sending small IP frames (packets). This keeps tiny telnet and
  rlogin packets from congesting Wide Area Networks. Most people
  strongly recommend to say N here, thereby leaving NAGLE
  enabled. Those programs that would benefit from disabling this
  facility can do it on a per connection basis themselves.

IP: Allow large windows (not recommended if <16 MB of memory)
CONFIG_SKB_LARGE
  On high speed, long distance networks the performance limit on
  networking becomes the amount of data the sending machine can buffer
  until the other end confirms its reception. (At 45 Mbit/second there
  are a lot of bits between New York and London ...). If you say Y
  here, bigger buffers can be used which allows larger amounts of data
  to be "in flight" at any given time. It also means a user process
  can require a lot more memory for network buffers and thus this
  option is best used only on machines with 16 MB of memory or higher.
  Unless you are using long links with end to end speeds of over 2
  Mbit a second or satellite links this option will make no difference
  to performance.

Unix domain sockets
CONFIG_UNIX
  If you say Y here, you will include support for Unix domain sockets;
  sockets are the standard Unix mechanism for establishing and
  accessing network connections. Many commonly used programs such as
  the X Window system and syslog use these sockets even if your
  machine is not connected to any network. Unless you are working on
  an embedded system or something similar, you therefore definitely
  want to say Y here.

  However, the socket support is also available as a module ( = code
  which can be inserted in and removed from the running kernel
  whenever you want). If you want to compile it as a module, say M
  here and read Documentation/modules.txt. The module will be called
  unix.o. If you try building this as a module and you have said Y to
  "Kernel module loader support" above, be sure to add 'alias net-pf-1
  unix' to your /etc/modules.conf file. Note that several important
  services won't work correctly if you say M here and then neglect to
  load the module.

  Say Y unless you know what you are doing.

The IPv6 protocol (EXPERIMENTAL)
CONFIG_IPV6
  This is experimental support for the next version of the Internet
  Protocol: IP version 6 (also called IPng "IP next generation").
  Features of this new protocol include: expanded address space,
  authentication and privacy, and seamless interoperability with the
  current version of IP (IP version 4). For general information about
  IPv6, see http://playground.sun.com/pub/ipng/html/ipng-main.html ;
  for specific information about IPv6 under Linux read the HOWTO at
  http://www.bieringer.de/linux/IPv6/ and the file net/ipv6/README in
  the kernel source.

  If you want to use IPv6, please upgrade to the newest net-tools as
  given in Documentation/Changes. You will still be able to do regular
  IPv4 networking as well.

  This protocol support is also available as a module ( = code which
  can be inserted in and removed from the running kernel whenever you
  want). The module will be called ipv6.o. If you want to compile it
  as a module, say M here and read Documentation/modules.txt.

  It is safe to say N here for now.

IPv6: enable EUI-64 token format
CONFIG_IPV6_EUI64
  6bone, the network of computers using the IPv6 protocol, is moving
  to a new aggregatable address format and a new link local address
  assignment (EUI-64). Say Y if your site has upgraded already, or
  has started to upgrade.

IPv6: disable provider based addresses
CONFIG_IPV6_NO_PB
  Linux tries to operate correctly when your site has moved to EUI-64
  only partially. Unfortunately, the two address formats (old:
  "provider based" and new: "aggregatable") are incompatible. Say Y if
  your site finished the upgrade to EUI-64, and/or you encountered
  some problems caused by the presence of two link-local addresses on
  an interface.

IPv6: routing messages via old netlink
CONFIG_IPV6_NETLINK
  You can say Y here to receive routing messages from the IPv6 code
  through the old netlink interface. However, a better option is to
  say Y to "Kernel/User network link driver" and to "Routing
  messages" instead.
  
Kernel httpd acceleration (EXPERIMENTAL)
CONFIG_KHTTPD
  The kernel httpd acceleration daemon (kHTTPd) is a (limited) web
  server built into the kernel. It is limited since it can only serve
  files from the file system and cannot deal with executable content
  such as CGI scripts. Serving files is sped up if you use kHTTPd.
  If kHTTPd is not able to fulfill a request, it can transparently
  pass it through to a user space web server such as apache.

  Saying "M" here builds the kHTTPd module; this is NOT enough to have
  a working kHTTPd. For safety reasons, the module has to be activated
  by doing a "echo 1 > /proc/sys/net/khttpd/start" after inserting the
  module.

  Before using this, read the README in net/khttpd !

  The kHTTPd is experimental. Be careful when using it on a production
  machine. Also note that kHTTPd doesn't support virtual servers yet.

IPX networking
CONFIG_IPX
  This is support for the Novell networking protocol, IPX, commonly
  used for local networks of Windows machines. You need it if you want
  to access Novell NetWare file or print servers using the Linux
  Novell client ncpfs (available from
  ftp://metalab.unc.edu/pub/Linux/system/filesystems/ ) or from within
  the Linux DOS emulator DOSEMU (read the DOSEMU-HOWTO, available from
  http://www.linuxdoc.org/docs.html#howto ). In order to do the
  former, you'll also have to say Y to "NCP file system support",
  below.

  IPX is similar in scope to IP, while SPX, which runs on top of IPX,
  is similar to TCP. There is also experimental support for SPX in
  Linux (see "SPX networking", below).

  To turn your Linux box into a fully featured NetWare file server and
  IPX router, say Y here and fetch either lwared from
  ftp://metalab.unc.edu/pub/Linux/system/network/daemons/ or mars_nwe
  from ftp://ftp.gwdg.de/pub/linux/misc/ncpfs . For more information,
  read the IPX-HOWTO available from
  http://www.linuxdoc.org/docs.html#howto .

  General information about how to connect Linux, Windows machines and
  Macs is on the WWW at http://www.eats.com/linux_mac_win.html .

  The IPX driver would enlarge your kernel by about 16 KB. This driver
  is also available as a module ( = code which can be inserted in and
  removed from the running kernel whenever you want). The module will
  be called ipx.o. If you want to compile it as a module, say M here
  and read Documentation/modules.txt. Unless you want to integrate
  your Linux box with a local Novell network, say N.

IPX: Full internal IPX network
CONFIG_IPX_INTERN
  Every IPX network has an address that identifies it. Sometimes it is
  useful to give an IPX "network" address to your Linux box as well
  (for example if your box is acting as a file server for different
  IPX networks: it will then be accessible from everywhere using the
  same address). The way this is done is to create a virtual internal
  "network" inside your box and to assign an IPX address to this
  network. Say Y here if you want to do this; read the IPX-HOWTO at
  http://www.linuxdoc.org/docs.html#howto for details.

  The full internal IPX network enables you to allocate sockets on
  different virtual nodes of the internal network. This is done by
  evaluating the field sipx_node of the socket address given to the
  bind call. So applications should always initialize the node field
  to 0 when binding a socket on the primary network. In this case the
  socket is assigned the default node that has been given to the
  kernel when the internal network was created. By enabling the full
  internal IPX network the cross-forwarding of packets targeted at
  'special' sockets to sockets listening on the primary network is
  disabled. This might break existing applications, especially RIP/SAP
  daemons. A RIP/SAP daemon that works well with the full internal net
  can be found on ftp://ftp.gwdg.de/pub/linux/misc/ncpfs . 

  If you don't know what you are doing, say N.

IPX: SPX networking (EXPERIMENTAL)
CONFIG_SPX
  The Sequenced Packet eXchange protocol is a transport layer protocol
  built on top of IPX. It is used in Novell NetWare systems for
  client-server applications and is similar to TCP (which runs on top
  of IP).

  Note that Novell NetWare file sharing does not use SPX; it uses a
  protocol called NCP, for which separate Linux support is available
  ("NCP file system support" below for the client side, and the user
  space programs lwared or mars_nwe for the server side).

  Say Y here if you have use for SPX; read the IPX-HOWTO at
  http://www.linuxdoc.org/docs.html#howto for details.

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called af_spx.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt.

DECnet networking (EXPERIMENTAL)
CONFIG_DECNET
  The DECnet networking protocol was used in many products made by
  Digital (now Compaq). It provides reliable stream and sequenced
  packet communications over which run a variety of services similar
  to those which run over TCP/IP.

  To find some tools to use with the kernel layer support, please
  look at Patrick Caulfield's web site: 
  http://linux.dreamtime.org/decnet/

  More detailed documentation is available in the
  Documentation/networking/decnet.txt file.

  Be sure to say Y to "/proc file system support" and "Sysctl support"
  below when using DECnet, since you will need sysctl support to aid
  in configuration at run time.

  The DECnet code is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module is called decnet.o.

DECnet SIOCFIGCONF support
CONFIG_DECNET_SIOCGIFCONF
   This option should only be turned on if you are really sure that
   you know what you are doing. It can break other applications which
   use this system call and the proper way to get the information
   provided by this call is to use rtnetlink.
   
   If unsure, say N.

DECnet Router Support (EXPERIMENTAL)
CONFIG_DECNET_ROUTER
   Add support for turning your DECnet Endnode into a level 1 or 2
   router. This is an unfinished option for developers only. If you do
   say Y here, then make sure that you also say Y to "Kernel/User
   network link driver", "Routing messages" and "Network packet
   filtering". The first two are required to allow configuration via
   rtnetlink (currently you need Alexey Kuznetsov's iproute2 package
   from ftp://ftp.inr.ac.ru). The "Network packet filtering" option
   will be required for the forthcoming routing daemon to work.

   See Documentation/networking/decnet.txt for more information.

DECnet: use FWMARK value as routing key
CONFIG_DECNET_ROUTE_FWMARK
  If you say Y here, you will be able to specify different routes for
  packets with different FWMARK ("firewalling mark") values
  (see ipchains(8), "-m" argument).

Appletalk interfaces support
CONFIG_APPLETALK
  AppleTalk is the way Apple computers speak to each other on a
  network. If your Linux box is connected to such a network and you
  want to join the conversation, say Y.

AppleTalk protocol support
CONFIG_ATALK
  AppleTalk is the way Apple computers speak to each other on a
  network. If your Linux box is connected to such a network and you
  want to join the conversation, say Y. You will need to use the
  netatalk package so that your Linux box can act as a print and file
  server for Macs as well as access AppleTalk printers. Check out
  http://threepio.hitchcock.org/cgi-bin/faq/netatalk/faq.pl on the WWW
  for details. EtherTalk is the name used for AppleTalk over Ethernet
  and the cheaper and slower LocalTalk is AppleTalk over a proprietary
  Apple network using serial links. EtherTalk and LocalTalk are fully
  supported by Linux.

  General information about how to connect Linux, Windows machines and
  Macs is on the WWW at http://www.eats.com/linux_mac_win.html . The
  NET-3-HOWTO, available from
  http://www.linuxdoc.org/docs.html#howto , contains valuable
  information as well.

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module is called appletalk.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt. I hear that
  the GNU boycott of Apple is over, so even politically correct people
  are allowed to say Y here.

AppleTalk-IP driver support
CONFIG_IPDDP
  This allows IP networking for users who only have AppleTalk
  networking available. This feature is experimental. With this
  driver, you can encapsulate IP inside AppleTalk (e.g. if your Linux
  box is stuck on an AppleTalk only network) or decapsulate (e.g. if
  you want your Linux box to act as an Internet gateway for a zoo of
  AppleTalk connected Macs). Please see the file
  Documentation/networking/ipddp.txt for more information.

  If you say Y here, the AppleTalk-IP support will be compiled into
  the kernel. In this case, you can either use encapsulation or
  decapsulation, but not both. With the following two questions, you
  decide which one you want.

  If you say M here, the AppleTalk-IP support will be compiled as a
  module ( = code which can be inserted in and removed from the
  running kernel whenever you want, read Documentation/modules.txt).
  The module is called ipddp.o. In this case, you will be able to use
  both encapsulation and decapsulation simultaneously, by loading two
  copies of the module and specifying different values for the module
  option ipddp_mode. 

IP to AppleTalk-IP Encapsulation support
CONFIG_IPDDP_ENCAP
  If you say Y here, the AppleTalk-IP code will be able to encapsulate
  IP packets inside AppleTalk frames; this is useful if your Linux box
  is stuck on an AppleTalk network (which hopefully contains a
  decapsulator somewhere). Please see
  Documentation/networking/ipddp.txt for more information. If you said
  Y to "AppleTalk-IP driver support" above and you say Y here, then
  you cannot say Y to "AppleTalk-IP to IP Decapsulation support",
  below.

AppleTalk-IP to IP Decapsulation support
CONFIG_IPDDP_DECAP
  If you say Y here, the AppleTalk-IP code will be able to decapsulate
  AppleTalk-IP frames to IP packets; this is useful if you want your
  Linux box to act as an Internet gateway for an AppleTalk network.
  Please see Documentation/networking/ipddp.txt for more information.
  If you said Y to "AppleTalk-IP driver support" above and you say Y
  here, then you cannot say Y to "IP to AppleTalk-IP Encapsulation
  support", above.

Apple/Farallon LocalTalk PC card support
CONFIG_LTPC
  This allows you to use the AppleTalk PC card to connect to LocalTalk
  networks. The card is also known as the Farallon PhoneNet PC card.
  If you are in doubt, this card is the one with the 65C02 chip on it.
  You also need version 1.3.3 or later of the netatalk package.
  This driver is experimental, which means that it may not work.
  See the file Documentation/networking/ltpc.txt.

COPS LocalTalk PC card support
CONFIG_COPS
  This allows you to use COPS AppleTalk cards to connect to LocalTalk
  networks. You also need version 1.3.3 or later of the netatalk
  package. This driver is experimental, which means that it may not
  work. This driver will only work if you choose "AppleTalk DDP"
  networking support, above.
  Please read the file Documentation/networking/cops.txt. 

Dayna firmware support
CONFIG_COPS_DAYNA
  Support COPS compatible cards with Dayna style firmware (Dayna
  DL2000/ Daynatalk/PC (half length), COPS LT-95, Farallon PhoneNET PC
  III, Farallon PhoneNET PC II).

Tangent firmware support
CONFIG_COPS_TANGENT
  Support COPS compatible cards with Tangent style firmware (Tangent
  ATB_II, Novell NL-1000, Daystar Digital LT-200.

Amateur Radio support
CONFIG_HAMRADIO
  If you want to connect your Linux box to an amateur radio, answer Y
  here. You want to read http://www.tapr.org/tapr/html/pkthome.html
  and the HAM-HOWTO and the AX25-HOWTO, both available from
  http://www.linuxdoc.org/docs.html#howto .

  Note that the answer to this question won't directly affect the
  kernel: saying N will just cause this configure script to skip all
  the questions about amateur radio.

Amateur Radio AX.25 Level 2
CONFIG_AX25
  This is the protocol used for computer communication over amateur
  radio. It is either used by itself for point-to-point links, or to
  carry other protocols such as tcp/ip. To use it, you need a device
  that connects your Linux box to your amateur radio. You can either
  use a low speed TNC (a Terminal Node Controller acts as a kind of
  modem connecting your computer's serial port to your radio's
  microphone input and speaker output) supporting the KISS protocol or
  one of the various SCC cards that are supported by the generic Z8530
  or the DMA SCC driver. Another option are the Baycom modem serial
  and parallel port hacks or the sound card modem (supported by their
  own drivers). If you say Y here, you also have to say Y to one of
  those drivers.

  Information about where to get supporting software for Linux amateur
  radio as well as information about how to configure an AX.25 port is
  contained in the AX25-HOWTO, available from
  http://www.linuxdoc.org/docs.html#howto . You might also want to
  check out the file Documentation/networking/ax25.txt in the kernel
  source. More information about digital amateur radio in general is
  on the WWW at http://www.tapr.org/tapr/html/pkthome.html .

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called ax25.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt.

AX.25 DAMA Slave support
CONFIG_AX25_DAMA_SLAVE
  DAMA is a mechanism to prevent collisions when doing AX.25
  networking. A DAMA server (called "master") accepts incoming traffic
  from clients (called "slaves") and redistributes it to other slaves.
  If you say Y here, your Linux box will act as a DAMA slave; this is
  transparent in that you don't have to do any special DAMA
  configuration. (Linux cannot yet act as a DAMA server.) If unsure,
  say N.

AX.25 DAMA Master support
CONFIG_AX25_DAMA_MASTER
  DAMA is a mechanism to prevent collisions when doing AX.25
  networking. A DAMA server (called "master") accepts incoming traffic
  from clients (called "slaves") and redistributes it to other
  slaves. If you say Y here, your Linux box will act as a DAMA server.
  If unsure, say N.

Amateur Radio NET/ROM
CONFIG_NETROM
  NET/ROM is a network layer protocol on top of AX.25 useful for
  routing.

  A comprehensive listing of all the software for Linux amateur radio
  users as well as information about how to configure an AX.25 port is
  contained in the AX25-HOWTO, available from
  http://www.linuxdoc.org/docs.html#howto . You also might want to
  check out the file Documentation/networking/ax25.txt. More
  information about digital amateur radio in general is on the WWW at
  http://www.tapr.org/tapr/html/pkthome.html .

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called netrom.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt.

Amateur Radio X.25 PLP (Rose)
CONFIG_ROSE
  The Packet Layer Protocol (PLP) is a way to route packets over X.25
  connections in general and amateur radio AX.25 connections in
  particular, essentially an alternative to NET/ROM.

  A comprehensive listing of all the software for Linux amateur radio
  users as well as information about how to configure an AX.25 port is
  contained in the AX25-HOWTO, available from
  http://www.linuxdoc.org/docs.html#howto . You also might want to
  check out the file Documentation/networking/ax25.txt. More
  information about digital amateur radio in general is on the WWW at
  http://www.tapr.org/tapr/html/pkthome.html .

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called rose.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt.

Serial port KISS driver for AX.25
CONFIG_MKISS
  KISS is a protocol used for the exchange of data between a computer
  and a Terminal Node Controller (a small embedded system commonly
  used for networking over AX.25 amateur radio connections; it
  connects the computer's serial port with the radio's microphone
  input and speaker output).

  Although KISS is less advanced than the 6pack protocol, it has
  the advantage that it is already supported by most modern TNCs
  without the need for a firmware upgrade.

  If you want to compile this driver as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt. The module will be
  called mkiss.o.

Serial port 6PACK driver for AX.25
CONFIG_6PACK
  6pack is a transmission protocol for the data exchange between your
  PC and your TNC (the Terminal Node Controller acts as a kind of
  modem connecting your computer's serial port to your radio's
  microphone input and speaker output). This protocol can be used as
  an alternative to KISS for networking over AX.25 amateur radio
  connections, but it has some extended functionality.

  Note that this driver is still experimental and might cause
  problems. For details about the features and the usage of the
  driver, read Documentation/networking/6pack.txt.

  If you want to compile this driver as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt. The module will be
  called 6pack.o.

BPQ Ethernet driver
CONFIG_BPQETHER
  AX.25 is the protocol used for computer communication over amateur
  radio. If you say Y here, you will be able to send and receive AX.25
  traffic over Ethernet (also called "BPQ AX.25"), which could be
  useful if some other computer on your local network has a direct
  amateur radio connection.

High-speed (DMA) SCC driver for AX.25
CONFIG_DMASCC
  This is a driver for high-speed SCC boards, i.e. those supporting
  DMA on one port. You usually use those boards to connect your
  computer to an amateur radio modem (such as the WA4DSY 56kbps
  modem), in order to send and receive AX.25 packet radio network
  traffic.

  Currently, this driver supports Ottawa PI/PI2, Paccomm/Gracilis
  PackeTwin, and S5SCC/DMA boards. They are detected automatically.
  If you have one of these cards, say Y here and read the AX25-HOWTO,
  available from http://www.linuxdoc.org/docs.html#howto .

  This driver can operate multiple boards simultaneously. If you
  compile it as a module (by saying M instead of Y), it will be called
  dmascc.o. If you don't pass any parameter to the driver, all
  possible I/O addresses are probed. This could irritate other devices
  that are currently not in use. You may specify the list of addresses
  to be probed by "dmascc=addr1,addr2,..." (when compiled into the
  kernel image) or "io=addr1,addr2,..." (when loaded as a module). The
  network interfaces will be called dmascc0 and dmascc1 for the board
  detected first, dmascc2 and dmascc3 for the second one, and so on.

  Before you configure each interface with ifconfig, you MUST set
  certain parameters, such as channel access timing, clock mode, and
  DMA channel. This is accomplished with a small utility program,
  dmascc_cfg, available at
  http://www.nt.tuwien.ac.at/~kkudielk/Linux/ . Please be sure to get
  at least version 1.27 of dmascc_cfg, as older versions will not
  work with the current driver.

Z8530 SCC driver for AX.25
CONFIG_SCC
  These cards are used to connect your Linux box to an amateur radio
  in order to communicate with other computers. If you want to use
  this, read Documentation/networking/z8530drv.txt and the AX25-HOWTO,
  available from http://www.linuxdoc.org/docs.html#howto . Also
  make sure to say Y to "Amateur Radio AX.25 Level 2" support.

  If you want to compile this as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt. The module will be
  called scc.o.

additional delay for PA0HZP OptoSCC compatible boards
CONFIG_SCC_DELAY
  Say Y here if you experience problems with the SCC driver not
  working properly; please read Documentation/networking/z8530drv.txt
  for details. If unsure, say N.

#support for TRX that feedback the tx signal to rx
#CONFIG_SCC_TRXECHO
###
### Don't know what's going on here.
###
#

YAM driver for AX.25
CONFIG_YAM
  The YAM is a modem for packet radio which connects to the serial
  port and includes some of the functions of a Terminal Node
  Controller. If you have one of those, say Y here.

  If you want to compile this as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt.

BAYCOM picpar and par96 driver for AX.25
CONFIG_BAYCOM_PAR
  This is a driver for Baycom style simple amateur radio modems that
  connect to a parallel interface. The driver supports the picpar and
  par96 designs. To configure the driver, use the sethdlc utility
  available in the standard ax25 utilities package. For information on
  the modems, see http://www.baycom.de and the file
  Documentation/networking/baycom.txt.

  If you want to compile this driver as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt. This is recommended.
  The module will be called baycom_par.o.

BAYCOM EPP driver for AX.25
CONFIG_BAYCOM_EPP
  This is a driver for Baycom style simple amateur radio modems that
  connect to a parallel interface. The driver supports the EPP
  designs. To configure the driver, use the sethdlc utility available
  in the standard ax25 utilities package. For information on the
  modems, see http://www.baycom.de and the file
  Documentation/networking/baycom.txt.

  If you want to compile this driver as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt. This is recommended.
  The module will be called baycom_par.o.

BAYCOM ser12 full duplex driver for AX.25
CONFIG_BAYCOM_SER_FDX
  This is one of two drivers for Baycom style simple amateur radio
  modems that connect to a serial interface. The driver supports the
  ser12 design in full duplex mode. In addition, it allows the
  baudrate to be set between 300 and 4800 baud (however not all modems
  support all baudrates). This is the preferred driver. The next
  driver, "BAYCOM ser12 half duplex driver for AX.25" is the old
  driver and still provided in case this driver does not work with
  your serial interface chip. To configure the driver, use the sethdlc
  utility available in the standard ax25 utilities package. For
  information on the modems, see http://www.baycom.de and
  Documentation/networking/baycom.txt.

  If you want to compile this driver as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt. This is recommended.
  The module will be called baycom_ser_fdx.o.

BAYCOM ser12 half duplex driver for AX.25
CONFIG_BAYCOM_SER_HDX
  This is one of two drivers for Baycom style simple amateur radio
  modems that connect to a serial interface. The driver supports the
  ser12 design in full duplex mode. This is the old driver. It is
  still provided in case your serial interface chip does not work with
  the full duplex driver. This driver is depreciated. To configure the
  driver, use the sethdlc utility available in the standard ax25
  utilities package. For information on the modems, see
  http://www.baycom.de and Documentation/networking/baycom.txt.

  If you want to compile this driver as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt. This is recommended.
  The module will be called baycom_ser_hdx.o.

Sound card modem driver for AX.25
CONFIG_SOUNDMODEM
  This experimental driver allows a standard Sound Blaster or
  WindowsSoundSystem compatible sound card to be used as a packet
  radio modem (NOT as a telephone modem!), to send digital traffic
  over amateur radio.

  To configure the driver, use the sethdlc, smdiag and smmixer
  utilities available in the standard ax25 utilities package. For
  information on how to key the transmitter, see
  http://www.ife.ee.ethz.ch/~sailer/pcf/ptt_circ/ptt.html and
  Documentation/networking/soundmodem.txt.

  If you want to compile this driver as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt. This is recommended.
  The module will be called soundmodem.o.

Sound card modem support for Sound Blaster and compatible cards
CONFIG_SOUNDMODEM_SBC
  This option enables the soundmodem driver to use Sound Blaster and
  compatible cards. If you have a dual mode card (i.e. a WSS cards
  with a Sound Blaster emulation) you should say N here and Y to
  "Sound card modem support for WSS and Crystal cards", below, because
  this usually results in better performance. This option also
  supports SB16/32/64 in full duplex mode.

Sound card modem support for WSS and Crystal cards
CONFIG_SOUNDMODEM_WSS
  This option enables the soundmodem driver to use WindowsSoundSystem
  compatible cards. These cards feature a codec chip from either
  Analog Devices (such as AD1848, AD1845, AD1812) or Crystal
  Semiconductors (such as CS4248, CS423x). This option also supports
  the WSS full duplex operation which currently works with Crystal
  CS423x chips. If you don't need full duplex operation, do not enable
  it to save performance.

Sound card modem support for 1200 baud AFSK modulation
CONFIG_SOUNDMODEM_AFSK1200
  This option enables the soundmodem driver 1200 baud AFSK modem,
  compatible to popular modems using TCM3105 or AM7911. The
  demodulator requires about 12% of the CPU power of a Pentium 75 CPU
  per channel.

Sound card modem support for 2400 baud AFSK modulation (7.3728MHz crystal)
CONFIG_SOUNDMODEM_AFSK2400_7
  This option enables the soundmodem driver 2400 baud AFSK modem,
  compatible to TCM3105 modems (over-)clocked with a 7.3728MHz
  crystal. Note that the availability of this driver does _not_ imply
  that I recommend building such links. It is only here since users
  especially in eastern Europe have asked me to do so. In fact this
  modulation scheme has many disadvantages, mainly its incompatibility
  with many transceiver designs and the fact that the TCM3105 (if
  used) is operated widely outside its specifications.

Sound card modem support for 2400 baud AFSK modulation (8MHz crystal)
CONFIG_SOUNDMODEM_AFSK2400_8
  This option enables the soundmodem driver 2400 baud AFSK modem,
  compatible to TCM3105 modems (over-)clocked with an 8MHz crystal.
  Note that the availability of this driver does _not_ imply that I
  recommend building such links. It is only here since users
  especially in eastern Europe have asked me to do so. In fact this
  modulation scheme has many disadvantages, mainly its incompatibility
  with many transceiver designs and the fact that the TCM3105 (if
  used) is operated widely outside its specifications.

Sound card modem support for 2666 baud AFSK modulation
CONFIG_SOUNDMODEM_AFSK2666
  This option enables the soundmodem driver 2666 baud AFSK modem.
  This modem is experimental, and not compatible to anything
  else I know of.

Sound card modem support for 4800 baud 8PSK modulation
CONFIG_SOUNDMODEM_PSK4800
  This option enables the soundmodem driver 4800 baud 8PSK modem.
  This modem is experimental, and not compatible to anything
  else I know of.

Sound card modem support for 4800 baud HAPN-1 modulation
CONFIG_SOUNDMODEM_HAPN4800
  This option enables the soundmodem driver 4800 baud HAPN-1
  compatible modem. This modulation seems to be widely used 'down
  under' and in the Netherlands. Here, nobody uses it, so I could not
  test if it works. It is compatible to itself, however :-)

Sound card modem support for 9600 baud FSK G3RUH modulation
CONFIG_SOUNDMODEM_FSK9600
  This option enables the soundmodem driver 9600 baud FSK modem,
  compatible to the G3RUH standard. The demodulator requires about 4%
  of the CPU power of a Pentium 75 CPU per channel. You can say Y to
  both 1200 baud AFSK and 9600 baud FSK if you want (but obviously you
  can only use one protocol at a time, depending on what the other end
  can understand).

CCITT X.25 Packet Layer (EXPERIMENTAL)
CONFIG_X25
  X.25 is a set of standardized network protocols, similar in scope to
  frame relay; the one physical line from your box to the X.25 network
  entry point can carry several logical point-to-point connections
  (called "virtual circuits") to other computers connected to the X.25
  network. Governments, banks, and other organizations tend to use it
  to connect to each other or to form Wide Area Networks (WANs). Many
  countries have public X.25 networks. X.25 consists of two
  protocols: the higher level Packet Layer Protocol (PLP) (say Y here
  if you want that) and the lower level data link layer protocol LAPB
  (say Y to "LAPB Data Link Driver" below if you want that). 

  You can read more about X.25 at http://www.sangoma.com/x25.htm and
  http://www.cisco.com/univercd/data/doc/software/11_0/rpcg/cx25.htm .
  Information about X.25 for Linux is contained in the files
  Documentation/networking/x25.txt and
  Documentation/networking/x25-iface.txt.

  One connects to an X.25 network either with a dedicated network card
  using the X.21 protocol (not yet supported by Linux) or one can do
  X.25 over a standard telephone line using an ordinary modem (say Y
  to "X.25 async driver" below) or over Ethernet using an ordinary
  Ethernet card and either the 802.2 LLC protocol (say Y to "802.2
  LLC" below) or LAPB over Ethernet (say Y to "LAPB Data Link Driver"
  and "LAPB over Ethernet driver" below). 

  If you want to compile this driver as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt. The module will be
  called x25.o. If unsure, say N.

LAPB Data Link Driver (EXPERIMENTAL) 
CONFIG_LAPB
  Link Access Procedure, Balanced (LAPB) is the data link layer (i.e.
  the lower) part of the X.25 protocol. It offers a reliable
  connection service to exchange data frames with one other host, and
  it is used to transport higher level protocols (mostly X.25 Packet
  Layer, the higher part of X.25, but others are possible as well).
  Usually, LAPB is used with specialized X.21 network cards, but Linux
  currently supports LAPB only over Ethernet connections. If you want
  to use LAPB connections over Ethernet, say Y here and to "LAPB over
  Ethernet driver" below. Read
  Documentation/networking/lapb-module.txt for technical details.

  If you want to compile this driver as a module though ( = code which
  can be inserted in and removed from the running kernel whenever you
  want), say M here and read Documentation/modules.txt. The module
  will be called lapb.o. If unsure, say N.

802.2 LLC (EXPERIMENTAL)
CONFIG_LLC
  This is a Logical Link Layer protocol used for X.25 connections over
  Ethernet, using ordinary Ethernet cards. 


Frame Diverter (EXPERIMENTAL)
CONFIG_NET_DIVERT
  The Frame Diverter allows you to divert packets from the
  network, that are not aimed at the interface receiving it (in 
  promisc. mode). Typically, a Linux box setup as an ethernet bridge
  with the Frames Diverter on, can do some *really* transparent www 
  caching using a Squid proxy for example.

  This is very usefull when you don't want to change your router's
  config (or if you simply don't have access to it).

  The other possible usages of diverting Ethernet Frames are numberous:
   - reroute smtp traffic to another interface
   - traffic-shape certain network streams
   - transparently proxy smtp connections
   - etc...

  For more informations, please refer to:
    http://www.freshmeat.net/projects/etherdivert
    http://perso.wanadoo.fr/magpie/EtherDivert.html

  If unsure, say N

802.1d Ethernet Bridging
CONFIG_BRIDGE
  If you say Y here, then your Linux box will be able to act as an
  Ethernet bridge, which means that the different Ethernet segments it
  is connected to will appear as one Ethernet to the participants.
  Several such bridges can work together to create even larger
  networks of Ethernets using the IEEE 802.1 spanning tree algorithm.
  As this is a standard, Linux bridges will cooperate properly with
  other third party bridge products. 

  In order to use the ethernet bridge, you'll need the bridge
  configuration tools; see Documentation/networking/bridge.txt for
  location. Please read the Bridge mini-HOWTO for more information.
  
  Note that if your box acts as a bridge, it probably contains several
  Ethernet devices, but the kernel is not able to recognize more than
  one at boot time without help; for details read the Ethernet-HOWTO,
  available from in http://www.linuxdoc.org/docs.html#howto .

  If you want to compile this code as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt. The module will be
  called bridge.o.

  If unsure, say N.

Packet socket
CONFIG_PACKET
  The Packet protocol is used by applications which communicate
  directly with network devices without an intermediate network
  protocol implemented in the kernel, e.g. tcpdump. If you want them
  to work, choose Y. 

  This driver is also available as a module called af_packet.o ( =
  code which can be inserted in and removed from the running kernel
  whenever you want). If you want to compile it as a module, say M
  here and read Documentation/modules.txt; if you use modprobe or
  kmod, you may also want to add "alias net-pf-17 af_packet" to 
  /etc/modules.conf. 

  If unsure, say Y.

Packet socket: mmapped IO
CONFIG_PACKET_MMAP
  If you say Y here, the Packet protocol driver will use an IO
  mechanism that results in faster communication.

  If unsure, say N.

Kernel/User network link driver
CONFIG_NETLINK
  This driver allows for two-way communication between the kernel and
  user processes. It does so by creating a new socket family, PF_NETLINK.
  Over this socket, the kernel can send and receive datagrams carrying
  information. It is documented on many systems in netlink(7), a HOWTO is
  provided as well, for example on
  http://snafu.freedom.org/linux2.2/docs/netlink-HOWTO.html

  So far, the kernel uses this feature to publish some network related
  information if you say Y to "Routing messages", below. You also need
  to say Y here if you want to use arpd, a daemon that helps keep the
  internal ARP cache (a mapping between IP addresses and hardware
  addresses on the local network) small. The ethertap device, which
  lets user space programs read and write raw Ethernet frames, also
  needs the network link driver.

  If unsure, say Y.

Routing messages
CONFIG_RTNETLINK
  If you say Y here, userspace programs can receive some network
  related routing information over the netlink. 'rtmon', supplied
  with the iproute2 package (ftp://ftp.inr.ac.ru), can read and
  interpret this data.  Information sent to the kernel over this link
  is ignored.

Netlink device emulation
CONFIG_NETLINK_DEV
  This option will be removed soon. Any programs that want to use
  character special nodes like /dev/tap0 or /dev/route (all with major
  number 36) need this option, and need to be rewritten soon to use
  the real netlink socket.
  This is a backward compatibility option, choose Y for now.

Asynchronous Transfer Mode (ATM)
CONFIG_ATM
  ATM is a high-speed networking technology for Local Area Networks
  and Wide Area Networks. It uses a fixed packet size and is
  connection oriented, allowing for the negotiation of minimum
  bandwidth requirements.
  
  In order to participate in an ATM network, your Linux box needs an
  ATM networking card. If you have that, say Y here and to the driver
  of your ATM card below.

  Note that you need a set of user-space programs to actually make use
  of ATM. See the file Documentation/networking/atm.txt for further
  details.

Classical IP over ATM
CONFIG_ATM_CLIP
  Classical IP over ATM for PVCs and SVCs, supporting InARP and
  ATMARP. If you want to communication with other IP hosts on your ATM
  network, you will typically either say Y here or to "LAN Emulation
  (LANE)" below.

Do NOT send ICMP if no neighbour
CONFIG_ATM_CLIP_NO_ICMP
  Normally, an "ICMP host unreachable" message is sent if a neighbour
  cannot be reached because there is no VC to it in the kernel's
  ATMARP table. This may cause problems when ATMARP table entries are
  briefly removed during revalidation. If you say Y here, packets to
  such neighbours are silently discarded instead.

LAN Emulation (LANE) support
CONFIG_ATM_LANE
  LAN Emulation emulates services of existing LANs across an ATM
  network. Besides operating as a normal ATM end station client, Linux
  LANE client can also act as an proxy client bridging packets between
  ELAN and Ethernet segments. You need LANE if you want to try MPOA.

Multi-Protocol Over ATM (MPOA) support
CONFIG_ATM_MPOA
  Multi-Protocol Over ATM allows ATM edge devices such as routers,
  bridges and ATM attached hosts establish direct ATM VCs across
  subnetwork boundaries. These shortcut connections bypass routers
  enhancing overall network performance.

ATM over TCP
CONFIG_ATM_TCP
  ATM over TCP driver. Useful mainly for development and for
  experiments. If unsure, say N.

Efficient Networks ENI155P
CONFIG_ATM_ENI
  Driver for the Efficient Networks ENI155p series and SMC ATM
  Power155 155 Mbps ATM adapters. Both, the versions with 512KB and
  2MB on-board RAM (Efficient calls them "C" and "S", respectively),
  and the FPGA and the ASIC Tonga versions of the board are supported.
  The driver works with MMF (-MF or ...F) and UTP-5 (-U5 or ...D)
  adapters.

  This driver is also available as a module. If you want to compile
  it as a module, say M here and read Documentation/modules.txt. The
  module will be called eni.o.

Enable extended debugging
CONFIG_ATM_ENI_DEBUG
  Extended debugging records various events and displays that list
  when an inconsistency is detected. This mechanism is faster than
  generally using printks, but still has some impact on performance.
  Note that extended debugging may create certain race conditions
  itself. Enable this ONLY if you suspect problems with the driver.

Fine-tune burst settings
CONFIG_ATM_ENI_TUNE_BURST
  In order to obtain good throughput, the ENI NIC can transfer
  multiple words of data per PCI bus access cycle. Such a multi-word
  transfer is called a burst.

  The default settings for the burst sizes are suitable for most PCI
  chipsets. However, in some cases, large bursts may overrun buffers
  in the PCI chipset and cause data corruption. In such cases, large
  bursts must be disabled and only (slower) small bursts can be used.
  The burst sizes can be set independently in the send (TX) and
  receive (RX) direction.

  Note that enabling many different burst sizes in the same direction
  may increase the cost of setting up a transfer such that the
  resulting throughput is lower than when using only the largest
  available burst size.

  Also, sometimes larger bursts lead to lower throughput, e.g. on an
  Intel 440FX board, a drop from 135 Mbps to 103 Mbps was observed
  when going from 8W to 16W bursts.

Enable 16W TX bursts (discouraged)
CONFIG_ATM_ENI_BURST_TX_16W
  Burst sixteen words at once in the send direction. This may work
  with recent PCI chipsets, but is known to fail with older chipsets.

Enable 8W TX bursts (recommended)
CONFIG_ATM_ENI_BURST_TX_8W
  Burst eight words at once in the send direction. This is the default
  setting.

Enable 4W TX bursts (optional)
CONFIG_ATM_ENI_BURST_TX_4W
  Burst four words at once in the send direction. You may want to try
  this if you have disabled 8W bursts. Enabling 4W if 8W is also set
  may or may not improve throughput.
  
Enable 2W TX bursts (optional)
CONFIG_ATM_ENI_BURST_TX_2W
  Burst two words at once in the send direction. You may want to try
  this if you have disabled 4W and 8W bursts. Enabling 2W if 4W or 8W
  are also set may or may not improve throughput.

Enable 16W RX bursts (discouraged)
CONFIG_ATM_ENI_BURST_RX_16W
  Burst sixteen words at once in the receive direction. This may work
  with recent PCI chipsets, but is known to fail with older chipsets.

Enable 8W RX bursts (discouraged)
CONFIG_ATM_ENI_BURST_RX_8W
  Burst eight words at once in the receive direction. This may work
  with recent PCI chipsets, but is known to fail with older chipsets,
  such as the Intel Neptune series.

Enable 4W RX bursts (recommended)
CONFIG_ATM_ENI_BURST_RX_4W
  Burst four words at once in the receive direction. This is the
  default setting. Enabling 4W if 8W is also set may or may not
  improve throughput.

Enable 2W RX bursts (optional)
CONFIG_ATM_ENI_BURST_RX_2W
  Burst two words at once in the receive direction. You may want to
  try this if you have disabled 4W and 8W bursts. Enabling 2W if 4W or
  8W are also set may or may not improve throughput.

ZeitNet ZN1221/ZN1225
CONFIG_ATM_ZATM
  Driver for the ZeitNet ZN1221 (MMF) and ZN1225 (UTP-5) 155 Mbps ATM
  adapters.

  This driver is also available as a module. If you want to compile
  it as a module, say M here and read Documentation/modules.txt. The
  module will be called zatm.o.

Enable extended debugging
CONFIG_ATM_ZATM_DEBUG
  Extended debugging records various events and displays that list
  when an inconsistency is detected. This mechanism is faster than
  generally using printks, but still has some impact on performance.
  Note that extended debugging may create certain race conditions
  itself. Enable this ONLY if you suspect problems with the driver.

Enable usec resolution timestamps
CONFIG_ATM_ZATM_EXACT_TS
  The uPD98401 SAR chip supports a high-resolution timer (approx. 30
  MHz) that is used for very accurate reception timestamps. Because
  that timer overflows after 140 seconds, and also to avoid timer
  drift, time measurements need to be periodically synchronized with
  the normal system time. Enabling this feature will add some general
  overhead for timer synchronization and also per-packet overhead for
  time conversion.

IDT 77201/11 (NICStAR) (ForeRunnerLE)
CONFIG_ATM_NICSTAR
  The NICStAR chipset family is used in a large number of ATM NICs for
  25 and for 155 Mbps, including IDT cards and the Fore ForeRunnerLE
  series. Say Y if you have one of those.

  This driver is also available as a module. If you want to compile
  it as a module, say M here and read Documentation/modules.txt. The
  module will be called nicstar.o.

ForeRunner LE155 PHYsical layer
CONFIG_ATM_NICSTAR_USE_SUNI
  Support for the S-UNI and compatible PHYsical layer chips. These are
  found in most 155Mbps NICStAR based ATM cards, namely in the
  ForeRunner LE155 cards. This driver provides detection of cable
  removal and reinsertion and provides some statistics. This driver
  doesn't have removal capability when compiled as a module, so if you
  need that capability don't include S-UNI support (it's not needed to
  make the card work).

ForeRunner LE25 PHYsical layer
CONFIG_ATM_NICSTAR_USE_IDT77105
  Support for the PHYsical layer chip in ForeRunner LE25 cards. In
  addition to cable removal/reinsertion detection, this driver allows
  you to control the loopback mode of the chip via a dedicated IOCTL.
  This driver is required for proper handling of temporary carrier
  loss, so if you have a 25Mbps NICStAR based ATM card you must say Y.

Madge Ambassador (Collage PCI 155 Server)
CONFIG_ATM_AMBASSADOR
  This is a driver for ATMizer based ATM card produced by Madge
  Networks Ltd. Say Y (or M to compile as a module named ambassador.o)
  here if you have one of these cards.

Enable debugging messages
CONFIG_ATM_AMBASSADOR_DEBUG
  Somewhat useful debugging messages are available. The choice of
  messages is controlled by a bitmap. This may be specified as a
  module argument (kernel command line argument as well?), changed
  dynamically using an ioctl (not yet) or changed by sending the
  string "Dxxxx" to VCI 1023 (where x is a hex digit). See the file
  drivers/atm/ambassador.h for the meanings of the bits in the mask.

  When active, these messages can have a significant impact on the
  speed of the driver, and the size of your syslog files! When
  inactive, they will have only a modest impact on performance.

Madge Horizon [Ultra] (Collage PCI 25 and Collage PCI 155 Client)
CONFIG_ATM_HORIZON
  This is a driver for the Horizon chipset ATM adapter cards once
  produced by Madge Networks Ltd. Say Y (or M to compile as a module
  named horizon.o) here if you have one of these cards.

Enable debugging messages
CONFIG_ATM_HORIZON_DEBUG
  Somewhat useful debugging messages are available. The choice of
  messages is controlled by a bitmap. This may be specified as a
  module argument (kernel command line argument as well?), changed
  dynamically using an ioctl (not yet) or changed by sending the
  string "Dxxxx" to VCI 1023 (where x is a hex digit). See the file
  drivers/atm/horizon.h for the meanings of the bits in the mask.

  When active, these messages can have a significant impact on the
  speed of the driver, and the size of your syslog files! When
  inactive, they will have only a modest impact on performance.

Interphase ATM PCI x575/x525/x531 
CONFIG_ATM_IA
  This is a driver for the Interphase (i)ChipSAR adapter cards
  which include a variety of variants in term of the size of the 
  control memory (128K-1KVC, 512K-4KVC), the size of the packet 
  memory (128K, 512K, 1M), and the PHY type (Single/Multi mode OC3, 
  UTP155, UTP25, DS3 and E3). Go to:
  	www.iphase.com/products/ClassSheet.cfm?ClassID=ATM
  for more info about the cards. Say Y (or M to compile as a module 
  named iphase.o) here if you have one of these cards.

  See the file Documentation/networking/iphase.txt for further
  details.

Enable debugging messages
CONFIG_ATM_IA_DEBUG
  Somewhat useful debugging messages are available. The choice of
  messages is controlled by a bitmap. This may be specified as a
  module argument (kernel command line argument as well?), changed
  dynamically using an ioctl (Get the debug utility, iadbg, from 
  ftp.iphase.com/pub/atm/pci). See the file drivers/atm/iphase.h 
  for the meanings of the bits in the mask.

  When active, these messages can have a significant impact on the
  speed of the driver, and the size of your syslog files! When
  inactive, they will have only a modest impact on performance.

Linux telephony support
CONFIG_PHONE
  Say Y here if you have a telephony card, which for example allows
  you to use a regular phone for voice-over-IP applications. 

  Note: this has nothing to do with modems. You do not need to say Y
  here in order to be able to use a modem under Linux.

  This support is also available as a module. If you want to compile
  it as a module, say M here and read Documentation/modules.txt. The
  module will be called phonedev.o.

Compaq Smart Array support
CONFIG_BLK_CPQ_CISS_DA
   This is the driver for Compaq Smart Array controllers.
   Everyone using these boards should say Y here.
   See Documentation/cciss.txt for the current list of
   boards supported by this driver, and for further information
   on the use of this driver.

QuickNet Internet LineJack/PhoneJack support
CONFIG_PHONE_IXJ
  Say M if you have a telephony card manufactured by Quicknet
  Technologies, Inc.  These include the Internet PhoneJACK and
  Internet LineJACK Telephony Cards. You will get a module called
  ixj.o. 

  For the ISA versions of these products, you can configure the
  cards using the isapnp tools (pnpdump/isapnp) or you can use the
  isapnp support.  Please read Documentation/telephony/ixj.txt.

  For more information on these cards, see Quicknet's web site at:
  http://www.quicknet.net/ .

  If you do not have any Quicknet telephony cards, you can safely
  say N here.

FORE Systems 200E-series
CONFIG_ATM_FORE200E_MAYBE
  This is a driver for the FORE Systems 200E-series ATM adapter
  cards. It simultaneously supports PCA-200E and SBA-200E models
  on PCI and SBUS hosts. Say Y (or M to compile as a module
  named fore_200e.o) here if you have one of these ATM adapters.
 
  Note that the driver will actually be compiled only if you
  additionally enable the support for PCA-200E and/or SBA-200E
  cards.

  See the file Documentation/networking/fore200e.txt for further
  details.
 
Enable PCA-200E card support on PCI-based hosts
CONFIG_ATM_FORE200E_PCA
  Say Y here if you want your PCA-200E cards to be probed.
 
Use default PCA-200E firmware
CONFIG_ATM_FORE200E_PCA_DEFAULT_FW
  Use the default PCA-200E firmware data shipped with the driver.
 
  Normal users do not have to deal with the firmware stuff, so
  they should say Y here.
 
Pathname of user-supplied binary firmware
CONFIG_ATM_FORE200E_PCA_FW
  This defines the pathname of an alternative PCA-200E binary
  firmware image supplied by the user. This pathname may be
  absolute or relative to the drivers/atm directory.
 
  The driver comes with an adequate firmware image, so normal users do
  not have to supply an alternative one. They just say Y to "Use
  default PCA-200E firmware" instead.
 
Enable SBA-200E card support on SBUS-based hosts
CONFIG_ATM_FORE200E_SBA
  Say Y here if you want your SBA-200E cards to be probed.
 
Use default SBA-200E firmware
CONFIG_ATM_FORE200E_SBA_DEFAULT_FW
  Use the default SBA-200E firmware data shipped with the driver.
 
  Normal users do not have to deal with the firmware stuff, so
  they should say Y here.
 
Pathname of user-supplied binary firmware
CONFIG_ATM_FORE200E_SBA_FW
  This defines the pathname of an alternative SBA-200E binary
  firmware image supplied by the user. This pathname may be
  absolute or relative to the drivers/atm directory.
 
  The driver comes with an adequate firmware image, so normal users do
  not have to supply an alternative one. They just say Y to "Use
  default SBA-200E firmware", above.
 
Maximum number of tx retries
CONFIG_ATM_FORE200E_TX_RETRY
  Specifies the number of times the driver attempts to transmit
  a message before giving up, if the transmit queue of the ATM card
  is transiently saturated.
 
  Saturation of the transmit queue may occur only under extreme
  conditions, e.g. when a fast host continuously submits very small
  frames (<64 bytes) or raw AAL0 cells (48 bytes) to the ATM adapter.
 
  Note that under common conditions, it is unlikely that you encounter
  a saturation of the transmit queue, so the retry mechanism never
  comes into play.

Debugging level (0-3)
CONFIG_ATM_FORE200E_DEBUG
  Specifies the level of debugging messages issued by the driver.
  The verbosity of the driver increases with the value of this
  parameter.
 
  When active, these messages can have a significant impact on
  the performances of the driver, and the size of your syslog files!
  Keep the debugging level to 0 during normal operations.

SCSI support?
CONFIG_SCSI
  If you want to use a SCSI hard disk, SCSI tape drive, SCSI CDROM or
  any other SCSI device under Linux, say Y and make sure that you know
  the name of your SCSI host adapter (the card inside your computer
  that "speaks" the SCSI protocol, also called SCSI controller),
  because you will be asked for it. 

  You also need to say Y here if you want support for the parallel
  port version of the 100 MB IOMEGA ZIP drive.

  Please read the SCSI-HOWTO, available from
  http://www.linuxdoc.org/docs.html#howto . The
  SCSI-Programming-HOWTO contains information about how to add or
  remove an SCSI device from a running Linux machine without
  rebooting.

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called scsi_mod.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt and
  Documentation/scsi.txt. However, do not compile this as a module if
  your root file system (the one containing the directory /) is
  located on a SCSI device.

SCSI disk support
CONFIG_BLK_DEV_SD
  If you want to use a SCSI hard disk or the SCSI or parallel port
  version of the IOMEGA ZIP drive under Linux, say Y and read the
  SCSI-HOWTO, the Disk-HOWTO and the Multi-Disk-HOWTO, available from
  http://www.linuxdoc.org/docs.html#howto . This is NOT for SCSI
  CDROMs.

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called sd_mod.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt and
  Documentation/scsi.txt. Do not compile this driver as a module if
  your root file system (the one containing the directory /) is
  located on a SCSI disk. In this case, do not compile the driver for
  your SCSI host adapter (below) as a module either.

Extra SCSI Disks
CONFIG_SD_EXTRA_DEVS
  This controls the amount of additional space allocated in tables for
  drivers that are loaded as modules after the kernel is booted.  In
  the event that the SCSI core itself was loaded as a module, this
  value is the number of additional disks that can be loaded after the
  first host driver is loaded.

  Admittedly this isn't pretty, but there are tons of race conditions
  involved with resizing the internal arrays on the fly.  Someday this
  flag will go away, and everything will work automatically.

  If you don't understand what's going on, go with the default.

SCSI tape support
CONFIG_CHR_DEV_ST
  If you want to use a SCSI tape drive under Linux, say Y and read the
  SCSI-HOWTO, available from
  http://www.linuxdoc.org/docs.html#howto , and
  drivers/scsi/README.st in the kernel source. This is NOT for SCSI
  CDROMs.

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called st.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt and
  Documentation/scsi.txt .

OnStream SC-x0 SCSI tape support
CONFIG_CHR_DEV_OSST
  The OnStream SC-x0 SCSI tape drives can not be driven by the 
  standard st driver, but instead need this special osst driver and 
  use the  /dev/osstX char device nodes (major 206).
  Via usb-storage and ide-scsi, you may be able to drive the USB-x0 
  and DI-x0 drives as well. Note that there is also a second generation
  of OnStream tape drives (ADR-x0) that supports the standard SCSI-2
  commands for tapes (QIC-157) and can be driven by the standard
  driver st.
  For more information, you may have a look at the SCSI-HOWTO
  ftp://metalab.unc.edu/pub/Linux/docs/HOWTO  and
  drivers/scsi/README.osst  in the kernel source. 
  More info on the OnStream driver may be found on 
  http://linux1.onstream.nl/test/
  Please also have a look at the standard st docu, as most of it
  applies to osst as well.

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called osst.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt and
  Documentation/scsi.txt .

SCSI CDROM support
CONFIG_BLK_DEV_SR
  If you want to use a SCSI CDROM under Linux, say Y and read the
  SCSI-HOWTO and the CDROM-HOWTO at
  http://www.linuxdoc.org/docs.html#howto . Also make sure to say Y
  or M to "ISO 9660 CDROM file system support" later.

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called sr_mod.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt and
  Documentation/scsi.txt .

Extra SCSI CDROMs
CONFIG_SR_EXTRA_DEVS
  This controls the amount of additional space allocated in tables for
  drivers that are loaded as modules after the kernel is booted. In
  the event that the SCSI core itself was loaded as a module, this
  value is the number of additional CDROMs that can be loaded after
  the first host driver is loaded.

  Admittedly this isn't pretty, but there are tons of race conditions
  involved with resizing the internal arrays on the fly.  Someday this
  flag will go away, and everything will work automatically.

  If you don't understand what's going on, go with the default.

Enable vendor-specific extensions (for SCSI CDROM)
CONFIG_BLK_DEV_SR_VENDOR
  This enables the usage of vendor specific SCSI commands. This is
  required to support multisession CDs with old NEC/TOSHIBA cdrom
  drives (and HP Writers). If you have such a drive and get the first
  session only, try saying Y here; everybody else says N.

SCSI generic support
CONFIG_CHR_DEV_SG
  If you want to use SCSI scanners, synthesizers or CD-writers or just
  about anything having "SCSI" in its name other than hard disks,
  CDROMs or tapes, say Y here. These won't be supported by the kernel
  directly, so you need some additional software which knows how to
  talk to these devices using the SCSI protocol:

  For scanners, look at SANE (http://www.mostang.com/sane). For CD
  writer software look at cdrecord
  (http://www.fokus.gmd.de/research/cc/glone/employees/joerg.schilling/private/cdrecord.html)
  and for burning a "disk at once": cdrdao
  (http://www.ping.de/sites/daneb/cdrdao.html). Cdparanoia is a high
  quality digital reader of audio CDs (http://www.xiph.org/paranoia).
  For other devices, it's possible that you'll have to write the
  driver software yourself. Please read the file
  Documentation/scsi-generic.txt for more information.

  If you want to compile this as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt and
  Documentation/scsi.txt. The module will be called sg.o. If unsure,
  say N.

Debug new queueing code for SCSI
CONFIG_SCSI_DEBUG_QUEUES
  This option turns on a lot of additional consistency checking for
  the new queueing code. This will adversely affect performance, but
  it is likely that bugs will be caught sooner if this is turned on.
  This will typically cause the kernel to panic if an error is
  detected, but it would have probably crashed if the panic weren't
  there. Comments/questions/problems to linux-scsi mailing list
  please. See http://www.andante.org/scsi_queue.html for more
  up-to-date information.

Probe all LUNs on each SCSI device
CONFIG_SCSI_MULTI_LUN
  If you have a SCSI device that supports more than one LUN (Logical
  Unit Number), e.g. a CD jukebox, and only one LUN is detected, you
  can say Y here to force the SCSI driver to probe for multiple LUNs. 
  A SCSI device with multiple LUNs acts logically like multiple SCSI
  devices. The vast majority of SCSI devices have only one LUN, and
  so most people can say N here and should in fact do so, because it
  is safer.

Verbose SCSI error reporting (kernel size +=12K)
CONFIG_SCSI_CONSTANTS
  The error messages regarding your SCSI hardware will be easier to
  understand if you say Y here; it will enlarge your kernel by about
  12 KB. If in doubt, say Y.

SCSI logging facility
CONFIG_SCSI_LOGGING
  This turns on a logging facility that can be used to debug a number
  of SCSI related problems. 

  If you say Y here, no logging output will appear by default, but you
  can enable logging by saying Y to "/proc file system support" and
  "Sysctl support" below and executing the command

     echo "scsi log token [level]" > /proc/scsi/scsi

  at boot time after the /proc file system has been mounted.

  There are a number of things that can be used for 'token' (you can
  find them in the source: drivers/scsi/scsi.c), and this allows you
  to select the types of information you want, and the level allows
  you to select the level of verbosity. 

  If you say N here, it may be harder to track down some types of SCSI
  problems. If you say Y here your kernel will be somewhat larger, but
  there should be no noticeable performance impact as long as you have
  logging turned off.

AdvanSys SCSI support
CONFIG_SCSI_ADVANSYS
  This is a driver for all SCSI host adapters manufactured by
  AdvanSys. It is documented in the kernel source in
  drivers/scsi/advansys.c. 

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  If you want to compile it as a module, say M here and read
  Documentation/modules.txt. The module will be called advansys.o.

Adaptec AHA152X/2825 support
CONFIG_SCSI_AHA152X
  This is a driver for the AHA-1510, AHA-1520, AHA-1522, and AHA-2825
  SCSI host adapters. It also works for the AVA-1505, but the IRQ etc.
  must be manually specified in this case.

  It is explained in section 3.3 of the SCSI-HOWTO, available from
  http://www.linuxdoc.org/docs.html#howto . You might also want to
  read the file drivers/scsi/README.aha152x.

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called aha152x.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt.

Adaptec AHA1542 support
CONFIG_SCSI_AHA1542
  This is support for a SCSI host adapter. It is explained in section
  3.4 of the SCSI-HOWTO, available from
  http://www.linuxdoc.org/docs.html#howto . Note that Trantor was
  purchased by Adaptec, and some former Trantor products are being
  sold under the Adaptec name. If it doesn't work out of the box, you
  may have to change some settings in drivers/scsi/aha1542.h.
  
  If you want to compile this as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt. The module will be
  called aha1542.o.

Adaptec AHA1740 support
CONFIG_SCSI_AHA1740
  This is support for a SCSI host adapter. It is explained in section
  3.5 of the SCSI-HOWTO, available from
  http://www.linuxdoc.org/docs.html#howto . If it doesn't work out
  of the box, you may have to change some settings in
  drivers/scsi/aha1740.h.

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called aha1740.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt.

Adaptec AIC7xxx chipset SCSI controller support
CONFIG_SCSI_AIC7XXX
  This is support for the various aic7xxx based Adaptec SCSI
  controllers. These include the 274x EISA cards; 284x VLB cards;
  2902, 2910, 293x, 294x, 394x, 3985 and several other PCI and
  motherboard based SCSI controllers from Adaptec. It does not support
  the AAA-13x RAID controllers from Adaptec, nor will it likely ever
  support them. It does not support the 2920 cards from Adaptec that
  use the Future Domain SCSI controller chip. For those cards, you
  need the "Future Domain 16xx SCSI support" driver.

  In general, if the controller is based on an Adaptec SCSI controller
  chip from the aic777x series or the aic78xx series, this driver
  should work. The only exception is the 7810 which is specifically
  not supported (that's the RAID controller chip on the AAA-13x
  cards).

  Note that the AHA2920 SCSI host adapter is *not* supported by this
  driver; choose "Future Domain 16xx SCSI support" instead if you have
  one of those.

  Information on the configuration options for this controller can be
  found by checking the help file for each of the available
  configuration options. You should read drivers/scsi/README.aic7xxx
  at a minimum before contacting the maintainer with any questions.
  The SCSI-HOWTO, available from
  http://www.linuxdoc.org/docs.html#howto , can also be of great
  help.

  If you want to compile this driver as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt. The module will be
  called aic7xxx.o.

Enable or Disable Tagged Command Queueing by default
CONFIG_AIC7XXX_TCQ_ON_BY_DEFAULT
  This option causes the aic7xxx driver to attempt to use Tagged
  Command Queueing (TCQ) on all devices that claim to support it. 

  TCQ is a feature of SCSI-2 which improves performance: the host
  adapter can send several SCSI commands to a device's queue even if
  previous commands haven't finished yet. Because the device is
  intelligent, it can optimize its operations (like head positioning)
  based on its own request queue. Not all devices implement this
  correctly. 

  If you say Y here, you can still turn off TCQ on troublesome devices
  with the use of the tag_info boot parameter. See the file
  drivers/scsi/README.aic7xxx for more information on that and other
  aic7xxx setup commands. If this option is turned off, you may still
  enable TCQ on known good devices by use of the tag_info boot
  parameter.

  If you are unsure about your devices then it is safest to say N
  here.
  
  However, TCQ can increase performance on some hard drives by as much
  as 50% or more, so it is recommended that if you say N here, you
  should at least read the README.aic7xxx file so you will know how to
  enable this option manually should your drives prove to be safe in
  regards to TCQ.

  Conversely, certain drives are known to lock up or cause bus resets
  when TCQ is enabled on them. If you have a Western Digital
  Enterprise SCSI drive for instance, then don't even bother to enable
  TCQ on it as the drive will become unreliable, and it will actually
  reduce performance.

Default number of TCQ commands per device
CONFIG_AIC7XXX_CMDS_PER_DEVICE
  Specify the number of commands you would like to allocate per SCSI
  device when Tagged Command Queueing (TCQ) is enabled on that device.

  Reasonable figures are in the range of 8 to 24 commands per device,
  but depending on hardware could be increased or decreased from that
  figure. If the number is too high for any particular device, the
  driver will automatically compensate usually after only 10 minutes
  of uptime. It will not hinder performance if some of your devices
  eventually have their command depth reduced, but is a waste of
  memory if all of your devices end up reducing this number down to a
  more reasonable figure.
  
  NOTE: Certain very broken drives are known to lock up when given
  more commands than they like to deal with. Quantum Fireball drives
  are the most common in this category. For the Quantum Fireball
  drives it is suggested to use no more than 8 commands per device.

  Default: 8

Collect statistics to report in /proc
CONFIG_AIC7XXX_PROC_STATS
  This option tells the driver to keep track of how many commands have
  been sent to each particular device and report that information to
  the user via the /proc/scsi/aic7xxx/n file, where n is the number of
  the aic7xxx controller you want the information on. This adds a
  small amount of overhead to each and every SCSI command the aic7xxx
  driver handles, so if you aren't really interested in this
  information, it is best to leave it disabled. This will only work if
  you also say Y to "/proc file system support", below. 

  If unsure, say N.

Delay in seconds after SCSI bus reset
CONFIG_AIC7XXX_RESET_DELAY
  This sets how long the driver will wait after resetting the SCSI bus
  before attempting to communicate with the devices on the SCSI bus
  again. This delay will be used during the reset phase at bootup time
  as well as after any reset that might occur during normal operation.
  Reasonable numbers range anywhere from 5 to 15 seconds depending on
  your devices. DAT tape drives are notorious for needing more time
  after a bus reset to be ready for the next command, but most hard
  drives and CD-ROM devices are ready in only a few seconds. This
  option has a maximum upper limit of 20 seconds to avoid bad
  interactions between the aic7xxx driver and the rest of the Linux
  kernel. The default value has been reduced to 5 seconds. If this
  doesn't work with your hardware, try increasing this value.

IBM ServeRAID Support
CONFIG_SCSI_IPS
  This is support for the IBM ServeRAID hardware RAID controllers.
  See http://www.developer.ibm.com/welcome/netfinity/serveraid.html
  for more information.  If this driver does not work correctly
  without modification please contact the author by email at
  ipslinux@us.ibm.com.

  You can build this driver as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  but only a single instance may be loaded. If you want to compile it
  as a module, say M here and read Documentation/modules.txt. The
  module will be called ips.o.

BusLogic SCSI support
CONFIG_SCSI_BUSLOGIC
  This is support for BusLogic MultiMaster and FlashPoint SCSI Host
  Adapters. Consult the SCSI-HOWTO, available from
  http://www.linuxdoc.org/docs.html#howto , and the files
  README.BusLogic and README.FlashPoint in drivers/scsi for more
  information. If this driver does not work correctly without
  modification, please contact the author, Leonard N. Zubkoff, by
  email to lnz@dandelion.com.

  You can also build this driver as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  but only a single instance may be loaded. If you want to compile it
  as a module, say M here and read Documentation/modules.txt. The
  module will be called BusLogic.o.

Omit BusLogic SCSI FlashPoint support
CONFIG_SCSI_OMIT_FLASHPOINT
  This option allows you to omit the FlashPoint support from the
  BusLogic SCSI driver. The FlashPoint SCCB Manager code is
  substantial, so users of MultiMaster Host Adapters may wish to omit
  it.

DMX3191D SCSI support
CONFIG_SCSI_DMX3191D
  This is support for Domex DMX3191D SCSI Host Adapters.

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called dmx3191d.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt.

DTC3180/3280 SCSI support
CONFIG_SCSI_DTC3280
  This is support for DTC 3180/3280 SCSI Host Adapters. Please read
  the SCSI-HOWTO, available from
  http://www.linuxdoc.org/docs.html#howto , and the file
  drivers/scsi/README.dtc3x80.

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called dtc.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt.

EATA-DMA [Obsolete] (DPT, NEC, AT&T, SNI, AST, Olivetti, Alphatronix) support
CONFIG_SCSI_EATA_DMA
  This is support for the EATA-DMA protocol compliant SCSI Host
  Adapters like the SmartCache III/IV, SmartRAID controller families
  and the DPT PM2011B and PM2012B controllers. 

  Note that this driver is obsolete; if you have one of the above SCSI
  Host Adapters, you should normally say N here and Y to "EATA
  ISA/EISA/PCI support", below. Please read the SCSI-HOWTO, available
  from http://www.linuxdoc.org/docs.html#howto .

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called eata_dma.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt.

EATA-PIO (old DPT PM2001, PM2012A) support
CONFIG_SCSI_EATA_PIO
  This driver supports all EATA-PIO protocol compliant SCSI Host
  Adapters like the DPT PM2001 and the PM2012A. EATA-DMA compliant
  host adapters could also use this driver but are discouraged from
  doing so, since this driver only supports hard disks and lacks
  numerous features. You might want to have a look at the SCSI-HOWTO,
  available from http://www.linuxdoc.org/docs.html#howto . 

  If you want to compile this as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt. The module will be
  called eata_pio.o.

UltraStor 14F/34F support
CONFIG_SCSI_U14_34F
  This is support for the UltraStor 14F and 34F SCSI-2 host adapters.
  The source at drivers/scsi/u14-34f.c contains some information about
  this hardware. If the driver doesn't work out of the box, you may
  have to change some settings in drivers/scsi/u14-34f.c. Read the
  SCSI-HOWTO, available from
  http://www.linuxdoc.org/docs.html#howto . Note that there is also
  another driver for the same hardware: "UltraStor SCSI support",
  below. You should say Y to both only if you want 24F support as
  well.

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called u14-34f.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt.

enable elevator sorting
CONFIG_SCSI_U14_34F_LINKED_COMMANDS
  This option enables elevator sorting for all probed SCSI disks and 
  CDROMs. It definitely reduces the average seek distance when doing
  random seeks, but this does not necessarily result in a noticeable
  performance improvement: your mileage may vary...
  
  The safe answer is N.

maximum number of queued commands
CONFIG_SCSI_U14_34F_MAX_TAGS
  This specifies how many SCSI commands can be maximally queued for
  each probed SCSI device. You should reduce the default value of 8
  only if you have disks with buggy or limited tagged command support.
  Minimum is 2 and maximum is 14. This value is also the window size
  used by the elevator sorting option above. The effective value used
  by the driver for each probed SCSI device is reported at boot time.

Future Domain 16xx SCSI/AHA-2920A support
CONFIG_SCSI_FUTURE_DOMAIN
  This is support for Future Domain's 16-bit SCSI host adapters
  (TMC-1660/1680, TMC-1650/1670, TMC-3260, TMC-1610M/MER/MEX) and
  other adapters based on the Future Domain chipsets (Quantum
  ISA-200S, ISA-250MG; Adaptec AHA-2920A; and at least one IBM board).
  It is explained in section 3.7 of the SCSI-HOWTO, available from
  http://www.linuxdoc.org/docs.html#howto .

  NOTE: Newer Adaptec AHA-2920C boards use the Adaptec AIC-7850 chip
  and should use the aic7xxx driver ("Adaptec AIC7xxx chipset SCSI
  controller support"). This Future Domain driver works with the older
  Adaptec AHA-2920A boards with a Future Domain chip on them.

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called fdomain.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt.

Future Domain MCS-600/700 SCSI support
CONFIG_SCSI_FD_MCS
  This is support for Future Domain MCS 600/700 MCA SCSI adapters.
  Some PS/2 computers are equipped with IBM Fast SCSI Adapter/A which
  is identical to the MCS 700 and hence also supported by this driver.
  This driver also supports the Reply SB16/SCSI card (the SCSI part).
  It supports multiple adapters in the same system.

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called fd_mcs.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt.

Generic NCR5380/53c400 SCSI support
CONFIG_SCSI_GENERIC_NCR5380
  This is the generic NCR family of SCSI controllers, not to be
  confused with the NCR 53c7 or 8xx controllers. It is explained in
  section 3.8 of the SCSI-HOWTO, available from
  http://www.linuxdoc.org/docs.html#howto . If it doesn't work out
  of the box, you may have to change some settings in
  drivers/scsi/g_NCR5380.h.

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called g_NCR5380.o. If you want to compile it as
  a module, say M here and read Documentation/modules.txt.

Enable NCR53c400 extensions
CONFIG_SCSI_GENERIC_NCR53C400
  This enables certain optimizations for the NCR53c400 SCSI cards. You
  might as well try it out. Note that this driver will only probe for
  the Trantor T130B in its default configuration; you might have to
  pass a command line option to the kernel at boot time if it doesn't
  detect your card. See the file drivers/scsi/README.g_NCR5380 for
  details.

NCR5380/53c400 mapping method (use Port for T130B)
CONFIG_SCSI_G_NCR5380_PORT
  The NCR5380 and NCR53c400 SCSI controllers come in two varieties:
  port or memory mapped. You should know what you have. The most
  common card, Trantor T130B, uses port mapped mode.

NCR53c7,8xx SCSI support
CONFIG_SCSI_NCR53C7xx
  This is a driver for the 53c7 and 8xx NCR family of SCSI
  controllers, not to be confused with the NCR 5380 controllers. It is
  explained in section 3.8 of the SCSI-HOWTO, available from
  http://www.linuxdoc.org/docs.html#howto . If it doesn't work out
  of the box, you may have to change some settings in
  drivers/scsi/53c7,8xx.h. Please read drivers/scsi/README.ncr53c7xx
  for the available boot time command line options.

  Note: there is another driver for the 53c8xx family of controllers
  ("NCR53C8XX SCSI support" below). If you want to use them both, you
  need to say M to both and build them as modules, but only one may be
  active at a time. If you have a 53c8xx board, it's better to use the
  other driver.

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called 53c7,8xx.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt.

always negotiate synchronous transfers
CONFIG_SCSI_NCR53C7xx_sync
  In general, this is good; however, it is a bit dangerous since there
  are some broken SCSI devices out there. Take your chances. Safe bet
  is N.

allow FAST-SCSI [10MHz]
CONFIG_SCSI_NCR53C7xx_FAST
  This will enable 10MHz FAST-SCSI transfers with your host
  adapter. Some systems have problems with that speed, so it's safest
  to say N here.

allow DISCONNECT
CONFIG_SCSI_NCR53C7xx_DISCONNECT
  This enables the disconnect/reconnect feature of the NCR SCSI
  controller. When you say Y here, a slow SCSI device will not lock
  the SCSI bus while processing a request, allowing simultaneous use
  of e.g. a SCSI hard disk and SCSI tape or CD-ROM drive, and
  providing much better performance when using slow and fast SCSI
  devices at the same time. Some devices, however, do not operate
  properly with this option enabled, and will cause your SCSI system
  to hang, which might cause a system crash. The safe answer
  therefore is to say N.

NCR53C8XX SCSI support
CONFIG_SCSI_NCR53C8XX
  This is the BSD ncr driver adapted to Linux for the NCR53C8XX family
  of PCI-SCSI controllers. This driver supports parity checking,
  tagged command queuing and fast synchronous data transfers up to 80
  MB/s with wide FAST-40 LVD devices and controllers.

  Recent versions of the 53C8XX chips are better supported by the
  option "SYM53C8XX SCSI support", below.

  Note: there is yet another driver for the 53c8xx family of
  controllers ("NCR53c7,8xx SCSI support" above). If you want to use
  them both, you need to say M to both and build them as modules, but
  only one may be active at a time. If you have a 53c8xx board, you
  probably do not want to use the "NCR53c7,8xx SCSI support".

  Please read drivers/scsi/README.ncr53c8xx for more information.

SYM53C8XX SCSI support
CONFIG_SCSI_SYM53C8XX
  This driver supports all the features of recent 53C8XX chips (used
  in PCI SCSI controllers), notably the hardware phase mismatch
  feature of the SYM53C896.

  Older versions of the 53C8XX chips are not supported by this
  driver. If your system uses either a 810 rev. < 16, a 815, or a 825
  rev. < 16 PCI SCSI processor, you must use the generic NCR53C8XX
  driver ("NCR53C8XX SCSI support" above) or configure both the
  NCR53C8XX and this SYM53C8XX drivers either as module or linked to
  the kernel image.

  When both drivers are linked into the kernel, the SYM53C8XX driver
  is called first at initialization and you can use the 'excl=ioaddr'
  driver boot option to exclude attachment of adapters by the
  SYM53C8XX driver. For example, entering
  'sym53c8xx=excl:0xb400,excl=0xc000' at the lilo prompt prevents
  adapters at io address 0xb400 and 0xc000 from being attached by the
  SYM53C8XX driver, thus allowing the NCR53C8XX driver to attach them.
  The 'excl' option is also supported by the NCR53C8XX driver.
  
  Please read drivers/scsi/README.ncr53c8xx for more information.

synchronous data transfers frequency
CONFIG_SCSI_NCR53C8XX_SYNC
  The SCSI Parallel Interface-2 Standard defines 5 classes of transfer
  rates: FAST-5, FAST-10, FAST-20, FAST-40 and FAST-80. The numbers are
  respectively the maximum data transfer rates in mega-transfers per
  second for each class. For example, a FAST-20 Wide 16 device is able
  to transfer data at 20 million 16 bit packets per second for a total
  rate of 40 MB/s.

  You may specify 0 if you want to only use asynchronous data
  transfers. This is the safest and slowest option. Otherwise, specify
  a value between 5 and 80, depending on the capability of your SCSI
  controller. The higher the number, the faster the data transfer.
  Note that 80 should normally be ok since the driver decreases the
  value automatically according to the controller's capabilities.

  Your answer to this question is ignored for controllers with NVRAM,
  since the driver will get this information from the user set-up. It
  also can be overridden using a boot setup option, as follows
  (example): 'ncr53c8xx=sync:12' will allow the driver to negotiate
  for FAST-20 synchronous data transfer (20 mega-transfers per
  second).

  The normal answer therefore is not to go with the default but to
  select the maximum value 80 allowing the driver to use the maximum
  value supported by each controller. If this causes problems with
  your SCSI devices, you should come back and decrease the value.

  There is no safe option other than using good cabling, right
  terminations and SCSI conformant devices.

use normal IO
CONFIG_SCSI_NCR53C8XX_IOMAPPED
  If you say Y here, the driver will use normal IO, as opposed to
  memory mapped IO. Memory mapped IO has less latency than normal IO
  and works for most Intel-based hardware. Under Linux/Alpha only
  normal IO is currently supported by the driver and so, this option
  has no effect on those systems. 

  The normal answer therefore is N; try Y only if you encounter SCSI
  related problems.

not allow targets to disconnect
CONFIG_SCSI_NCR53C8XX_NO_DISCONNECT
  This option is only provided for safety if you suspect some SCSI
  device of yours to not support properly the target-disconnect
  feature. In that case, you would say Y here. In general however, to
  not allow targets to disconnect is not reasonable if there is more
  than 1 device on a SCSI bus. The normal answer therefore is N.

default tagged command queue depth
CONFIG_SCSI_NCR53C8XX_DEFAULT_TAGS
  "Tagged command queuing" is a feature of SCSI-2 which improves
  performance: the host adapter can send several SCSI commands to a
  device's queue even if previous commands haven't finished yet.
  Because the device is intelligent, it can optimize its operations
  (like head positioning) based on its own request queue. Some SCSI
  devices don't implement this properly; if you want to disable this
  feature, enter 0 or 1 here (it doesn't matter which).

  The default value is 8 and should be supported by most hard disks.
  This value can be overridden from the boot command line using the 
  'tags' option as follows (example):
  'ncr53c8xx=tags:4/t2t3q16/t0u2q10' will set default queue depth to
  4, set queue depth to 16 for target 2 and target 3 on controller 0
  and set queue depth to 10 for target 0 / lun 2 on controller 1.

  The normal answer therefore is to go with the default 8 and to use 
  a boot command line option for devices that need to use a different 
  command queue depth.

  There is no safe option other than using good SCSI devices.

maximum number of queued commands
CONFIG_SCSI_NCR53C8XX_MAX_TAGS
  This option allows you to specify the maximum number of commands
  that can be queued to any device, when tagged command queuing is
  possible. The default value is 32. Minimum is 2, maximum is 64.
  Modern hard disks are able to support 64 tags and even more, but 
  do not seem to be faster when more than 32 tags are being used.
  
  So, the normal answer here is to go with the default value 32 unless
  you are using very large hard disks with large cache (>= 1 MB) that
  are able to take advantage of more than 32 tagged commands.

  There is no safe option and the default answer is recommended.

assume boards are SYMBIOS compatible (EXPERIMENTAL)
CONFIG_SCSI_NCR53C8XX_SYMBIOS_COMPAT
  This option allows you to enable some features depending on GPIO
  wiring. These General Purpose Input/Output pins can be used for
  vendor specific features or implementation of the standard SYMBIOS
  features. Genuine SYMBIOS controllers use GPIO0 in output for
  controller LED and GPIO3 bit as a flag indicating
  singled-ended/differential interface. The Tekram DC-390U/F boards
  uses a different GPIO wiring.
  
  Your answer to this question is ignored if all your controllers have
  NVRAM, since the driver is able to detect the board type from the
  NVRAM format.

  If all the controllers in your system are genuine SYMBIOS boards or
  use BIOS and drivers from SYMBIOS, you would want to say Y here,
  otherwise N. N is the safe answer.

enable profiling statistics gathering
CONFIG_SCSI_NCR53C8XX_PROFILE
  This option allows you to enable profiling information gathering.
  These statistics are not very accurate due to the low frequency 
  of the kernel clock (100 Hz on i386) and have performance impact 
  on systems that use very fast devices.

  The normal answer therefore is N.

include support for the NCR PQS/PDS SCSI card
CONFIG_SCSI_NCR53C8XX_PQS_PDS
  Say Y here if you have a special SCSI adapter produced by NCR
  corporation called a PCI Quad SCSI or PCI Dual SCSI. You do not need
  this if you do not have one of these adapters. However, since this
  device is detected as a specific PCI device, this option is quite
  safe.

  The common answer here is N, but answering Y is safe.

IBMMCA SCSI support
CONFIG_SCSI_IBMMCA
  This is support for the IBM SCSI adapter found in many of the PS/2
  series computers. These machines have an MCA bus, so you need to
  answer Y to "MCA support" as well and read Documentation/mca.txt.

  If the adapter isn't found during boot (a common problem for models
  56, 57, 76, and 77) you'll need to use the 'ibmmcascsi=<pun>' kernel
  option, where <pun> is the id of the SCSI subsystem (usually 7, but
  if that doesn't work check your reference diskette). Owners of model
  95 with a LED-matrix-display can in addition activate some activity
  info like under OS/2, but more informative, by setting
  'ibmmcascsi=display' as an additional kernel parameter. Try "man
  bootparam" or see the documentation of your boot loader about how to
  pass options to the kernel.

  If you want to compile this driver as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt. The module will be
  called ibmmca.o.

Standard SCSI-order
CONFIG_IBMMCA_SCSI_ORDER_STANDARD
  In the PC-world and in most modern SCSI-BIOS-setups, SCSI-hard disks
  are assigned to the drive letters, starting with the lowest SCSI-id
  (physical number -- pun) to be drive C:, as seen from DOS and
  similar operating systems. When looking into papers describing the
  ANSI-SCSI-standard, this assignment of drives appears to be wrong.
  The SCSI-standard follows a hardware-hierarchy which says that id 7
  has the highest priority and id 0 the lowest. Therefore, the host
  adapters are still today everywhere placed as SCSI-id 7 by default.
  In the SCSI-standard, the drive letters express the priority of the
  disk. C: should be the hard disk, or a partition on it, with the
  highest priority. This must therefore be the disk with the highest
  SCSI-id (e.g. 6) and not the one with the lowest! IBM-BIOS kept the
  original definition of the SCSI-standard as also industrial- and
  process-control-machines, like VME-CPUs running under realtime-OSs
  (e.g. LynxOS, OS9) do.

  If you like to run Linux on your MCA-machine with the same
  assignment of hard disks as seen from e.g. DOS or OS/2 on your
  machine, which is in addition conformant to the SCSI-standard, you
  must say Y here. This is also necessary for MCA-Linux users who want
  to keep downward compatibility to older releases of the
  IBM-MCA-SCSI-driver (older than driver-release 2.00 and older than
  June 1997).

  If you like to have the lowest SCSI-id assigned as drive C:, as
  modern SCSI-BIOSes do, which does not conform to the standard, but
  is widespread and common in the PC-world of today, you must say N
  here. If unsure, say Y.

Reset SCSI-devices at boot time
CONFIG_IBMMCA_SCSI_DEV_RESET
  By default, SCSI-devices are reset when the machine is powered on.
  However, some devices exist, like special-control-devices,
  SCSI-CNC-machines, SCSI-printer or scanners of older type, that do
  not reset when switched on. If you say Y here, each device connected
  to your SCSI-bus will be issued a reset-command after it has been
  probed, while the kernel is booting. This may cause problems with
  more modern devices, like hard disks, which do not appreciate these
  reset commands, and can cause your system to hang. So say Y only if
  you know that one of your older devices needs it; N is the safe
  answer.

NCR 53C9x MCA support
CONFIG_SCSI_MCA_53C9X
  Some Microchannel machines, notably the NCR 35xx line, use a SCSI
  controller based on the NCR 53C94.  This driver will allow use of
  the controller on the 3550, and very possibly others.   

  If you want to compile this as a module (= code which can be
  inserted and removed from the running kernel whenever you want), say
  M here and read Documentation/modules.txt. The module will be called
  mca_53c9x.o.
 
Always IN2000 SCSI support
CONFIG_SCSI_IN2000
  This is support for an ISA bus SCSI host adapter. You'll find more
  information in drivers/scsi/in2000.readme. If it doesn't work out of
  the box, you may have to change the jumpers for IRQ or address
  selection. 

  If you want to compile this as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt. The module will be
  called in2000.o.

Initio 91XXU(W) SCSI support
CONFIG_SCSI_INITIO
  This is support for the Initio 91XXU(W) SCSI host adapter. Please
  read the SCSI-HOWTO, available from
  http://www.linuxdoc.org/docs.html#howto .

  If you want to compile this as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt. The module will be
  called initio.o

PAS16 SCSI support
CONFIG_SCSI_PAS16
  This is support for a SCSI host adapter. It is explained in section
  3.10 of the SCSI-HOWTO, available from
  http://www.linuxdoc.org/docs.html#howto . If it doesn't work out
  of the box, you may have to change some settings in
  drivers/scsi/pas16.h.
  
  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called pas16.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt.

Initio INI-A100U2W SCSI support
CONFIG_SCSI_INIA100
  This is support for the Initio INI-A100U2W SCSI host adapter. Please
  read the SCSI-HOWTO, available from
  http://www.linuxdoc.org/docs.html#howto .

  If you want to compile this as a module ( = code which can be 
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt. The module will be
  called a100u2w.o

PCI2000 support
CONFIG_SCSI_PCI2000
  This is support for the PCI2000I EIDE interface card which acts as a
  SCSI host adapter. Please read the SCSI-HOWTO, available from
  http://www.linuxdoc.org/docs.html#howto .

  This driver is also available as a module called pci2000.o ( = code
  which can be inserted in and removed from the running kernel
  whenever you want). If you want to compile it as a module, say M
  here and read Documentation/modules.txt.

PCI2220i support
CONFIG_SCSI_PCI2220I
  This is support for the PCI2220i EIDE interface card which acts as a
  SCSI host adapter. Please read the SCSI-HOWTO, available from
  http://www.linuxdoc.org/docs.html#howto .

  This driver is also available as a module called pci2220i.o ( = code
  which can be inserted in and removed from the running kernel
  whenever you want). If you want to compile it as a module, say M
  here and read Documentation/modules.txt.

PSI240i support
CONFIG_SCSI_PSI240I
  This is support for the PSI240i EIDE interface card which acts as a
  SCSI host adapter. Please read the SCSI-HOWTO, available from
  http://www.linuxdoc.org/docs.html#howto .

  This driver is also available as a module called psi240i.o ( = code
  which can be inserted in and removed from the running kernel
  whenever you want). If you want to compile it as a module, say M
  here and read Documentation/modules.txt.

Qlogic FAS SCSI support
CONFIG_SCSI_QLOGIC_FAS
  This is a driver for the ISA, VLB, and PCMCIA versions of the Qlogic
  FastSCSI! cards as well as any other card based on the FASXX chip
  (including the Control Concepts SCSI/IDE/SIO/PIO/FDC cards).

  This driver does NOT support the PCI versions of these cards. The
  PCI versions are supported by the Qlogic ISP driver ("Qlogic ISP
  SCSI support"), below.

  Information about this driver is contained in
  drivers/scsi/README.qlogicfas. You should also read the SCSI-HOWTO,
  available from http://www.linuxdoc.org/docs.html#howto .

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called qlogicfas.o. If you want to compile it as
  a module, say M here and read Documentation/modules.txt.

Qlogic ISP SCSI support (EXPERIMENTAL)
CONFIG_SCSI_QLOGIC_ISP
  This driver works for all QLogic PCI SCSI host adapters (IQ-PCI,
  IQ-PCI-10, IQ_PCI-D) except for the PCI-basic card. (This latter
  card is supported by the "AM53/79C974 PCI SCSI" driver). 

  If you say Y here, make sure to choose "BIOS" at the question "PCI
  access mode".

  Please read the file drivers/scsi/README.qlogicisp. You should also
  read the SCSI-HOWTO, available from
  http://www.linuxdoc.org/docs.html#howto .

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called qlogicisp.o. If you want to compile it as
  a module, say M here and read Documentation/modules.txt.

Qlogic ISP FC SCSI support
CONFIG_SCSI_QLOGIC_FC
  This is a driver for the QLogic ISP2100 SCSI-FCP host adapter.

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called qlogicfc.o. If you want to compile it as
  a module, say M here and read Documentation/modules.txt.

Qlogic QLA 1280 SCSI support
CONFIG_SCSI_QLOGIC_1280
  Say Y if you have a QLogic ISP1x80/1x160 SCSI host adapter.

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called qla1280.o. If you want to compile it as
  a module, say M here and read Documentation/modules.txt.

Seagate ST-02 and Future Domain TMC-8xx SCSI support
CONFIG_SCSI_SEAGATE
  These are 8-bit SCSI controllers; the ST-01 is also supported by
  this driver. It is explained in section 3.9 of the SCSI-HOWTO,
  available from http://www.linuxdoc.org/docs.html#howto . If it
  doesn't work out of the box, you may have to change some settings in
  drivers/scsi/seagate.h.

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called seagate.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt.

Trantor T128/T128F/T228 SCSI support
CONFIG_SCSI_T128
  This is support for a SCSI host adapter. It is explained in section
  3.11 of the SCSI-HOWTO, available from
  http://www.linuxdoc.org/docs.html#howto . If it doesn't work out
  of the box, you may have to change some settings in
  drivers/scsi/t128.h. Note that Trantor was purchased by Adaptec, and
  some former Trantor products are being sold under the Adaptec name.

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called t128.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt.

UltraStor SCSI support
CONFIG_SCSI_ULTRASTOR
  This is support for the UltraStor 14F, 24F and 34F SCSI-2 host
  adapter family. This driver is explained in section 3.12 of the
  SCSI-HOWTO, available from
  http://www.linuxdoc.org/docs.html#howto . If it doesn't work out
  of the box, you may have to change some settings in
  drivers/scsi/ultrastor.h.
  
  Note that there is also another driver for the same hardware:
  "UltraStor 14F/34F support", above.

  If you want to compile this as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt. The module will be
  called ultrastor.o. 

7000FASST SCSI support
CONFIG_SCSI_7000FASST
  This driver supports the Western Digital 7000 SCSI host adapter
  family. Some information is in the source: drivers/scsi/wd7000.c.

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you
  want). The module will be called wd7000.o. If you want to compile it
  as a module, say M here and read Documentation/modules.txt.

ACARD SCSI support
CONFIG_SCSI_ACARD
  This driver supports the ACARD 870U/W SCSI host adapter.

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called atp870u.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt.

EATA ISA/EISA/PCI (DPT and generic EATA/DMA-compliant boards) support
CONFIG_SCSI_EATA
  This driver supports all EATA/DMA-compliant SCSI host adapters. DPT
  ISA and all EISA i/o addresses are probed looking for the "EATA"
  signature. If you chose "BIOS" at the question "PCI access mode",
  the addresses of all the PCI SCSI controllers reported by the PCI
  subsystem are probed as well.

  You want to read the start of drivers/scsi/eata.c and the
  SCSI-HOWTO, available from
  http://www.linuxdoc.org/docs.html#howto .

  Note that there is also another driver for the same hardware
  available: "EATA-DMA support". You should say Y to only one of them.

  If you want to compile this as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt. The module will be
  called eata.o.

enable tagged command queuing
CONFIG_SCSI_EATA_TAGGED_QUEUE
  This is a feature of SCSI-2 which improves performance: the host
  adapter can send several SCSI commands to a device's queue even if
  previous commands haven't finished yet. Most EATA adapters negotiate
  this feature automatically with the device, even if your answer is
  N. The safe answer is N.
        
enable elevator sorting
CONFIG_SCSI_EATA_LINKED_COMMANDS
  This option enables elevator sorting for all probed SCSI disks and 
  CDROMs. It definitely reduces the average seek distance when doing
  random seeks, but this does not necessarily result in a noticeable
  performance improvement: your mileage may vary...
  The safe answer is N.

maximum number of queued commands
CONFIG_SCSI_EATA_MAX_TAGS
  This specifies how many SCSI commands can be maximally queued for
  each probed SCSI device. You should reduce the default value of 16
  only if you have disks with buggy or limited tagged command support.
  Minimum is 2 and maximum is 62. This value is also the window size
  used by the elevator sorting option above. The effective value used
  by the driver for each probed SCSI device is reported at boot time.

NCR53c406a SCSI support
CONFIG_SCSI_NCR53C406A
  This is support for the NCR53c406a SCSI host adapter. For user
  configurable parameters, check out drivers/scsi/NCR53c406.c in the
  kernel source. Also read the SCSI-HOWTO, available from
  http://www.linuxdoc.org/docs.html#howto .

  If you want to compile this driver as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt. The module will be
  called NCR53c406.o.

Symbios Logic sym53c416 support
CONFIG_SCSI_SYM53C416
  This is support for the sym53c416 SCSI host adapter, the SCSI
  adapter that comes with some HP scanners. This driver requires that
  the sym53c416 is configured first using some sort of pnp
  configuration program (e.g. isapnp) or by a PnP aware BIOS. If you
  are using isapnp then you need to compile this driver as a module
  and then load it using insmod after isapnp has run. The parameters
  of the configured card(s) should be passed to the driver. The format
  is:

    insmod sym53c416 sym53c416=<base>,<irq> [sym53c416_1=<base>,<irq>]

  There is support for up to four adapters. If you want to compile
  this driver as a module ( = code which can be inserted in and
  removed from the running kernel whenever you want), say M here and
  read Documentation/modules.txt. The module will be called
  sym53c416.o. 

Simple 53c710 SCSI support (Compaq, NCR machines)
CONFIG_SCSI_SIM710
  This is a simple driver for NCR53c710 based SCSI host adapters.

  More complex drivers for this chip are available ("NCR53c7,8xx SCSI
  support", above), but they require that the scsi chip be able to do
  DMA block moves between memory and on-chip registers, which can
  cause problems under certain conditions. This driver is designed to
  avoid these problems and is intended to work with any Intel machines
  using 53c710 chips, including various Compaq and NCR machines.

  Please read the comments at the top of the file
  drivers/scsi/sim710.c for more information.

  If you want to compile this driver as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt. The module will be
  called sim710.o.

Tekram DC390(T) and Am53/79C974 (PCscsi) SCSI support
CONFIG_SCSI_DC390T
  This driver supports PCI SCSI host adapters based on the Am53C974A
  chip, e.g. Tekram DC390(T), DawiControl 2974 and some onboard
  PCscsi/PCnet (Am53/79C974) solutions.

  Documentation can be found in drivers/scsi/README.tmscsim.
  
  Note that this driver does NOT support Tekram DC390W/U/F, which are
  based on NCR/Symbios chips. Use "NCR53C8XX SCSI support" for those.
  Also note that there is another generic Am53C974 driver,
  "AM53/79C974 PCI SCSI support" below. You can pick either one.

  If you want to compile this driver as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt. The module will be
  called tmscsim.o.

Omit support for other Am53/79C974 based SCSI adapters
CONFIG_SCSI_DC390T_NOGENSUPP
  If you say N here, the DC390(T) SCSI driver relies on the DC390
  EEPROM to get initial values for its settings, such as speed,
  termination, etc. If it can't find this EEPROM, it will use defaults
  or the user supplied boot/module parameters. For details on driver
  configuration see drivers/scsi/README.tmscsim.

  If you say Y here and if no EEPROM is found, the driver gives up and
  thus only supports Tekram DC390(T) adapters. This can be useful if
  you have a DC390(T) and another Am53C974 based adapter, which, for
  some reason, you want to drive with the other AM53C974 driver.

  If unsure, say N.

AM53/79C974 PCI SCSI support
CONFIG_SCSI_AM53C974
  This is support for the AM53/79C974 SCSI host adapters. Please read
  drivers/scsi/README.AM53C974 for details. Also, the SCSI-HOWTO,
  available from http://www.linuxdoc.org/docs.html#howto , is for
  you.

  Note that there is another driver for AM53C974 based adapters:
  "Tekram DC390(T) and Am53/79C974 (PCscsi) SCSI support", above. You
  can pick either one.

  If you want to compile this driver as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt. The module will be
  called AM53C974.o.

AMI MegaRAID support
CONFIG_SCSI_MEGARAID
  This driver supports the AMI MegaRAID 418, 428, 438, 466, 762, 490
  and 467 SCSI host adapters. 

  If you want to compile this driver as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt. The module will be
  called megaraid.o.

GDT SCSI Disk Array Controller support
CONFIG_SCSI_GDTH
  This is a driver for all SCSI Disk Array Controllers (EISA/ISA/PCI) 
  manufactured by ICP vortex. It is documented in the kernel source in
  drivers/scsi/gdth.c and drivers/scsi/gdth.h. 

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  If you want to compile it as a module, say M here and read
  Documentation/modules.txt.

IOMEGA parallel port (ppa - older drives)
CONFIG_SCSI_PPA
  This driver supports older versions of IOMEGA's parallel port ZIP
  drive (a 100 MB removable media device).

  Note that you can say N here if you have the SCSI version of the ZIP
  drive: it will be supported automatically if you said Y to the
  generic "SCSI disk support", above.

  If you have the ZIP Plus drive or a more recent parallel port ZIP
  drive (if the supplied cable with the drive is labeled "AutoDetect")
  then you should say N here and Y to "IOMEGA parallel port (imm -
  newer drives)", below.

  For more information about this driver and how to use it you should
  read the file drivers/scsi/README.ppa. You should also read the
  SCSI-HOWTO, which is available from
  http://www.linuxdoc.org/docs.html#howto . If you use this driver,
  you will still be able to use the parallel port for other tasks,
  such as a printer; it is safe to compile both drivers into the
  kernel.

  This driver is also available as a module which can be inserted in
  and removed from the running kernel whenever you want. To compile
  this driver as a module, say M here and read
  Documentation/modules.txt. The module will be called ppa.o. 

IOMEGA parallel port (imm - newer drives)
CONFIG_SCSI_IMM
  This driver supports newer versions of IOMEGA's parallel port ZIP
  drive (a 100 MB removable media device).

  Note that you can say N here if you have the SCSI version of the ZIP
  drive: it will be supported automatically if you said Y to the
  generic "SCSI disk support", above.

  If you have the ZIP Plus drive or a more recent parallel port ZIP
  drive (if the supplied cable with the drive is labeled "AutoDetect")
  then you should say Y here; if you have an older ZIP drive, say N
  here and Y to "IOMEGA Parallel Port (ppa - older drives)", above.

  For more information about this driver and how to use it you should
  read the file drivers/scsi/README.ppa. You should also read the
  SCSI-HOWTO, which is available from
  http://www.linuxdoc.org/docs.html#howto . If you use this driver,
  you will still be able to use the parallel port for other tasks,
  such as a printer; it is safe to compile both drivers into the
  kernel.

  This driver is also available as a module which can be inserted in
  and removed from the running kernel whenever you want. To compile
  this driver as a module, say M here and read
  Documentation/modules.txt. The module will be called imm.o. 

Force the Iomega ZIP drivers to use EPP-16
CONFIG_SCSI_IZIP_EPP16
  EPP (Enhanced Parallel Port) is a standard for parallel ports which
  allows them to act as expansion buses that can handle up to 64
  peripheral devices.

  Some parallel port chipsets are slower than their motherboard, and
  so we have to control the state of the chipset's FIFO queue every
  now and then to avoid data loss. This will be done if you say Y
  here.
  
  Generally, saying Y is the safe option and slows things down a bit.

Assume slow parallel port control register
CONFIG_SCSI_IZIP_SLOW_CTR
  Some parallel ports are known to have excessive delays between
  changing the parallel port control register and good data being
  available on the parallel port data/status register. This option
  forces a small delay (1.0 usec to be exact) after changing the
  control register to let things settle out. Enabling this option may
  result in a big drop in performance but some very old parallel ports
  (found in 386 vintage machines) will not work properly.

  Generally, saying N is fine.

Parallel port SCSI device support
CONFIG_PPSCSI
  There are many external CD-ROM and disk devices that connect through
  your computer's parallel port. Lots of them are actually SCSI
  devices using a parallel port SCSI adapter. This option enables the
  ppSCSI subsystem which contains drivers for many of these external
  drives. You may also want to look at CONFIG_PARIDE (Parallel port
  IDE device support).

  If you built ppSCSI support into your kernel, you may still build
  the individual protocol modules and high-level drivers as loadable
  modules. If you build this support as a module, it will be called
  ppscsi.o.

  To use the ppSCSI support, you must say Y or M here and also to at
  least one protocol driver (e.g. "Shuttle EPST adapter", "Iomega VPI0
  adapter", "Shining ScarSCI adapter" etc.).

Adaptec APA-348 adapter
CONFIG_PPSCSI_T348
  This option enables support for the APA-348 adapter from Adaptec
  (also known as Trantor T348).  If you build this as a module it will
  be called t348.o.

Adaptec APA-358 adapter
CONFIG_PPSCSI_T358
  This option enables support for the APA-358 adapter from Adaptec
  (also known as Trantor T358).  If you build this as a module it will
  be called t358.o.

Iomega VPI0 adapter
CONFIG_PPSCSI_VPI0
  This option enables support for the Iomega VPI0 adapter found in the
  original ZIP-100 drives and the Jaz Traveller.  If you build this as
  a module it will be called vpi0.o.

OnSpec 90c26 adapter
CONFIG_PPSCSI_ONSCSI
  This option enables support for the OnSpec 90c26 in its SCSI adapter
  mode.  If you build this as a module it will be called onscsi.o.

Shining SparSCI adapter
CONFIG_PPSCSI_SPARCSI
  This option enables support for the WBS-11A parallel port SCSI
  adapter.  This adapter has been marketed by LinkSys as the
  "ParaSCSI+" and by Shining Technologies as the "SparCSI".  If you
  build this as a module it will be called sparcsi.o.

Shuttle EPSA-2 adapter
CONFIG_PPSCSI_EPSA2
  This option enables support for the Shuttle Technologies EPSA2
  parallel port SCSI adapter.  EPAS2 is a predecessor to the EPST.  If
  you build this as a module it will be called epsa2.o.

Shuttle EPST adapter
CONFIG_PPSCSI_EPST
  This option enables support for the Shuttle Technologies EPST
  parallel port SCSI adapter.  If you build this as a module is will
  be called epst.o.

SCSI Debug host simulator. (EXPERIMENTAL)
CONFIG_SCSI_DEBUG
  This is a host adapter simulator that can be programmed to simulate
  a large number of conditions that could occur on a real bus. The
  advantage is that many hard to reproduce problems can be tested in a
  controlled environment where there is reduced risk of losing
  important data. This is primarily of use to people trying to debug
  the middle and upper layers of the SCSI subsystem. If unsure, say N.

Fibre Channel support and FC4 SCSI support
CONFIG_FC4
  Fibre Channel is a high speed serial protocol mainly used to
  connect large storage devices to the computer; it is compatible with
  and intended to replace SCSI.

  This is an experimental support for storage arrays connected to your
  computer using optical fibre cables and the "X3.269-199X Fibre
  Channel Protocol for SCSI" specification. If you want to use this,
  you need to say Y here and to "SCSI support" as well as to the
  drivers for the storage array itself and for the interface adapter
  such as SOC or SOC+. This subsystem could even serve for IP
  networking, with some code extensions.

  If unsure, say N.

Sun SOC
CONFIG_FC4_SOC
  Serial Optical Channel is an interface card with one or two Fibre
  Optic ports, each of which can be connected to a disk array. Note
  that if you have older firmware in the card, you'll need the
  microcode from the Solaris driver to make it work.

  This support is also available as a module called soc.o ( = code
  which can be inserted in and removed from the running kernel
  whenever you want). If you want to compile it as a module, say M
  here and read Documentation/modules.txt.

Sun SOC+ (aka SOCAL)
CONFIG_FC4_SOCAL
  Serial Optical Channel Plus is an interface card with up to two
  Fibre Optic ports. This card supports FC Arbitrated Loop (usually
  A5000 or internal FC disks in E[3-6]000 machines through the
  Interface Board). You'll probably need the microcode from the
  Solaris driver to make it work.

  This support is also available as a module called socal.o ( = code
  which can be inserted in and removed from the running kernel
  whenever you want). If you want to compile it as a module, say M
  here and read Documentation/modules.txt.

SparcSTORAGE Array 100 and 200 series
CONFIG_SCSI_PLUTO
  If you never bought a disk array made by Sun, go with N. 

  This support is also available as a module called pluto.o ( = code
  which can be inserted in and removed from the running kernel
  whenever you want). If you want to compile it as a module, say M
  here and read Documentation/modules.txt.

Sun Enterprise Network Array (A5000 and EX500)
CONFIG_SCSI_FCAL
  This driver drives FC-AL disks connected through a Fibre Channel
  card using the drivers/fc4 layer (currently only SOCAL). The most
  common is either A5000 array or internal disks in E[3-6]000
  machines.

  This support is also available as a module called fcal.o ( = code
  which can be inserted in and removed from the running kernel
  whenever you want). If you want to compile it as a module, say M
  here and read Documentation/modules.txt. If unsure, say N.

AcornSCSI support
CONFIG_SCSI_ACORNSCSI_3
  This enables support for the Acorn SCSI card (aka30). If you have an
  Acorn system with one of these, say Y. If unsure, say N.

Acorn SCSI tagged queue support
CONFIG_SCSI_ACORNSCSI_TAGGED_QUEUE
  Say Y here to enable tagged queuing support on the Acorn SCSI card.

  This is a feature of SCSI-2 which improves performance: the host
  adapter can send several SCSI commands to a device's queue even if
  previous commands haven't finished yet. Some SCSI devices don't
  implement this properly, so the safe answer is N.

Acorn SCSI Synchronous transfers support
CONFIG_SCSI_ACORNSCSI_SYNC
  Say Y here to enable synchronous transfer negotiation with all
  targets on the Acorn SCSI card.

  In general, this improves performance; however some SCSI devices
  don't implement it properly, so the safe answer is N.

Oak SCSI support
CONFIG_SCSI_OAK1
  This enables support for the Oak SCSI card. If you have an Acorn
  system with one of these, say Y. If unsure, say N.

Cumana SCSI I support
CONFIG_SCSI_CUMANA_1
  This enables support for the Cumana SCSI I card. If you have an
  Acorn system with one of these, say Y. If unsure, say N.

Cumana SCSI II support (EXPERIMENTAL)
CONFIG_SCSI_CUMANA_2
  This enables support for the Cumana SCSI II card. If you have an
  Acorn system with one of these, say Y. If unsure, say N.

EcoSCSI support
CONFIG_SCSI_ECOSCSI
  This enables support for the EcoSCSI card -- a small card that sits
  in the Econet socket. If you have an Acorn system with one of these,
  say Y. If unsure, say N.

EESOX SCSI support (EXPERIMENTAL)
CONFIG_SCSI_EESOXSCSI
  This enables support for the EESOX SCSI card. If you have an Acorn
  system with one of these, say Y, otherwise say N.

Powertec SCSI support (EXPERIMENTAL)
CONFIG_SCSI_POWERTECSCSI
  This enables support for the Powertec SCSI card on Acorn systems. If
  you have one of these, say Y. If unsure, say N.

IEEE 1394 (aka FireWire) support
CONFIG_IEEE1394
  IEEE 1394 describes a high performance serial bus, which is also
  known as FireWire(tm) or i.Link(tm) and is used for connecting all
  sorts of devices (most notably digital video cameras) to your
  computer.

  If you have FireWire hardware and want to use it, say Y here.  This
  is the core support only, you will also need to select a driver for
  your IEEE 1394 adapter.

  If you want to compile this as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt. The module will be
  called ieee1394.o.

TI PCILynx IEEE 1394 support
CONFIG_IEEE1394_PCILYNX
  Say Y here if you have a IEEE-1394 controller with the Texas
  Instruments PCILynx chip.  Note: this driver is written for revision
  2 of this chip and may not work with revision 0.

  If you want to compile this as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt. The module will be
  called pcilynx.o.

Use local RAM on PCILynx board
CONFIG_IEEE1394_PCILYNX_LOCALRAM
  This option makes the PCILynx driver use local RAM available on some
  PCILynx setups for Packet Control Lists. Local RAM is random access
  memory which resides on the PCILynx board as opposed to on your
  computer's motherboard. Local RAM may speed up command processing
  because no PCI transfers are necessary during use of the Packet
  Control Lists.
  
  Note that there are no known PCILynx systems providing local RAM
  except for the evaluation boards by Texas Instruments and that the
  PCILynx does not reliably report missing RAM. This means that it is
  dangerous to say Y here if you are not absolutely sure that your
  board provides 64KB of local RAM.

  If unsure, say N.

Support for non-IEEE1394 local ports
CONFIG_IEEE1394_PCILYNX_PORTS
  This option enables driver code to access the RAM, ROM and AUX ports
  of the PCILynx through character devices in /dev.  If you don't know
  what this is about then you won't need it.
  
  If unsure, say N.

Adaptec AIC-5800 IEEE 1394 support
CONFIG_IEEE1394_AIC5800
  Say Y here if you have a IEEE 1394 controller using the Adaptec
  AIC-5800 chip. All Adaptec host adapters (89xx series) use this
  chip, as well as miro's DV boards.

  If you want to compile this as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt. The module will be
  called aic5800.o.

OHCI (Open Host Controller Interface) support
CONFIG_IEEE1394_OHCI1394
  Say Y here if you have a IEEE 1394 controller based on OHCI.
  The current driver was only tested with OHCI chipsets made
  by Texas Instruments. However, most third-party vendors use
  TI chips.

  If you want to compile this as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt. The module will be
  called ohci1394.o.

Raw IEEE 1394 I/O support
CONFIG_IEEE1394_RAWIO
  Say Y here if you want support for the raw device. This is generally
  a good idea, so you should say Y here. The raw device enables
  direct communication of user programs with the IEEE 1394 bus and
  thus with the attached peripherals.

  If you want to compile this as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt. The module will be
  called raw1394.o.

Excessive debugging output
CONFIG_IEEE1394_VERBOSEDEBUG
  If you say Y here, you will get very verbose debugging logs from the
  subsystem which includes a dump of the header of every sent and
  received packet.  This can amount to a high amount of data collected
  in a very short time which is usually also saved to disk by the
  system logging daemons.

  Say Y if you really want or need the debugging output, everyone else
  says N.

Network device support?
CONFIG_NETDEVICES
  You can say N here if you don't intend to connect your Linux box to
  any other computer at all or if all your connections will be over a
  telephone line with a modem either via UUCP (UUCP is a protocol to
  forward mail and news between unix hosts over telephone lines; read
  the UUCP-HOWTO, available from
  http://www.linuxdoc.org/docs.html#howto ) or dialing up a shell
  account or a BBS, even using term (term is a program which gives you
  almost full Internet connectivity if you have a regular dial up
  shell account on some Internet connected Unix computer. Read
  http://www.bart.nl/~patrickr/term-howto/Term-HOWTO.html ).

  You'll have to say Y if your computer contains a network card that
  you want to use under Linux (make sure you know its name because you
  will be asked for it and read the Ethernet-HOWTO (especially if you
  plan to use more than one network card under Linux)) or if you want
  to use SLIP (Serial Line Internet Protocol is the protocol used to
  send Internet traffic over telephone lines or null modem cables) or
  CSLIP (compressed SLIP) or PPP (Point to Point Protocol, a better
  and newer replacement for SLIP) or PLIP (Parallel Line Internet
  Protocol is mainly used to create a mini network by connecting the
  parallel ports of two local machines) or AX.25/KISS (protocol for
  sending Internet traffic over amateur radio links).

  Make sure to read the NET-3-HOWTO. Eventually, you will have to read
  Olaf Kirch's excellent and free book "Network Administrator's
  Guide", to be found in http://www.linuxdoc.org/docs.html#guide . If
  unsure, say Y.

Dummy net driver support
CONFIG_DUMMY
  This is essentially a bit-bucket device (i.e. traffic you send to
  this device is consigned into oblivion) with a configurable IP
  address. It is most commonly used in order to make your currently
  inactive SLIP address seem like a real address for local programs.
  If you use SLIP or PPP, you might want to say Y here. Since this
  thing often comes in handy, the default is Y. It won't enlarge your
  kernel either. What a deal. Read about it in the Network
  Administrator's Guide, available from
  http://www.linuxdoc.org/docs.html#guide .

  If you want to compile this as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt. The module will be
  called dummy.o. If you want to use more than one dummy device at a
  time, you need to compile this driver as a module. Instead of
  'dummy', the devices will then be called 'dummy0', 'dummy1' etc.

Bonding driver support
CONFIG_BONDING
  Say 'Y' or 'M' if you wish to be able to 'bond' multiple Ethernet
  Channels together. This is called 'Etherchannel' by Cisco,
  'Trunking' by Sun, and 'Bonding' in Linux.

  If you have two ethernet connections to some other computer, you can
  make them behave like one double speed connection using this driver.
  Naturally, this has to be supported at the other end as well, either
  with a similar Bonding Linux driver, a Cisco 5500 switch or a
  SunTrunking SunSoft driver.

  This is similar to the EQL driver, but it merges Ethernet segments
  instead of serial lines.

  If you want to compile this as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt. The module will be
  called bonding.o.

SLIP (serial line) support
CONFIG_SLIP
  Say Y if you intend to use SLIP or CSLIP (compressed SLIP) to
  connect to your Internet service provider or to connect to some
  other local Unix box or if you want to configure your Linux box as a
  Slip/CSlip server for other people to dial in. SLIP (Serial Line
  Internet Protocol) is a protocol used to send Internet traffic over
  serial connections such as telephone lines or null modem cables;
  nowadays, the protocol PPP is more commonly used for this same
  purpose.

  Normally, your access provider has to support SLIP in order for you
  to be able to use it, but there is now a SLIP emulator called SLiRP
  around (available via FTP (user: anonymous) from
  ftp://metalab.unc.edu/pub/Linux/system/network/serial/ ) which
  allows you to use SLIP over a regular dial up shell connection. If
  you plan to use SLiRP, make sure to say Y to CSLIP, below. The
  NET-3-HOWTO, available from
  http://www.linuxdoc.org/docs.html#howto , explains how to
  configure SLIP. Note that you don't need this option if you just
  want to run term (term is a program which gives you almost full
  Internet connectivity if you have a regular dial up shell account on
  some Internet connected Unix computer. Read
  http://www.bart.nl/~patrickr/term-howto/Term-HOWTO.html ). SLIP
  support will enlarge your kernel by about 4 KB. If unsure, say N.

  If you want to compile this as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt as well as
  Documentation/networking/net-modules.txt. The module will be called
  slip.o.

CSLIP compressed headers
CONFIG_SLIP_COMPRESSED
  This protocol is faster than SLIP because it uses compression on the
  TCP/IP headers (not on the data itself), but it has to be supported
  on both ends. Ask your access provider if you are not sure and
  answer Y, just in case. You will still be able to use plain SLIP. If
  you plan to use SLiRP, the SLIP emulator (available from
  ftp://metalab.unc.edu/pub/Linux/system/network/serial/ ) which
  allows you to use SLIP over a regular dial up shell connection, you
  definitely want to say Y here. The NET-3-HOWTO, available from
  http://www.linuxdoc.org/docs.html#howto , explains how to configure
  CSLIP. This won't enlarge your kernel.

Keepalive and linefill
CONFIG_SLIP_SMART
  Adds additional capabilities to the SLIP driver to support the
  RELCOM line fill and keepalive monitoring. Ideal on poor quality
  analogue lines.

Six bit SLIP encapsulation
CONFIG_SLIP_MODE_SLIP6
  Just occasionally you may need to run IP over hostile serial
  networks that don't pass all control characters or are only seven
  bit. Saying Y here adds an extra mode you can use with SLIP:
  "slip6". In this mode, SLIP will only send normal ASCII symbols over
  the serial device. Naturally, this has to be supported at the other
  end of the link as well. It's good enough, for example, to run IP
  over the async ports of a Camtec JNT Pad. If unsure, say N.

PPP (point-to-point protocol) support
CONFIG_PPP
  PPP (Point to Point Protocol) is a newer and better SLIP. It serves
  the same purpose: sending Internet traffic over telephone (and other
  serial) lines. Ask your access provider if they support it, because
  otherwise you can't use it; most internet access providers these
  days support PPP rather than SLIP.

  To use PPP, you need an additional program called pppd as described
  in Documentation/networking/ppp.txt and in the PPP-HOWTO, available
  at http://www.linuxdoc.org/docs.html#howto . If you upgrade
  from an older kernel, you might need to upgrade pppd as well. The
  PPP option enlarges your kernel by about 16 KB.

  There are actually two versions of PPP: the traditional PPP for
  asynchronous lines, such as regular analog phone lines, and
  synchronous PPP which can be used over digital ISDN lines for
  example. If you want to use PPP over phone lines or other
  asynchronous serial lines, you need to say Y (or M) here and also to
  the next option, "PPP support for async serial ports". For PPP over
  synchronous lines, you should say Y (or M) here and to "Support
  synchronous PPP", below.

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  If you said Y to "Version information on all symbols" above, then
  you cannot compile the PPP driver into the kernel; you can then only
  compile it as a module. The module will be called ppp_generic.o. If
  you want to compile it as a module, say M here and read
  Documentation/modules.txt as well as
  Documentation/networking/net-modules.txt.

PPP multilink support (EXPERIMENTAL)
CONFIG_PPP_MULTILINK
  PPP multilink is a protocol (defined in RFC 1990) which allows you
  to combine several (logical or physical) lines into one logical PPP
  connection, so that you can utilize your full bandwidth.

  This has to be supported at the other end as well and you need a
  version of the pppd daemon which understands the multilink protocol.

  If unsure, say N.

PPP support for async serial ports
CONFIG_PPP_ASYNC
  Say Y (or M) here if you want to be able to use PPP over standard
  asynchronous serial ports, such as COM1 or COM2 on a PC.  If you use
  a modem (not a synchronous or ISDN modem) to contact your ISP, you
  need this option.

  This code is also available as a module (code which can be inserted
  into and removed from the running kernel).  If you want to compile
  it as a module, say M here and read Documentation/modules.txt.

  If unsure, say Y.

PPP support for sync tty ports
CONFIG_PPP_SYNC_TTY
  Say Y (or M) here if you want to be able to use PPP over synchronous
  (HDLC) tty devices, such as the SyncLink adapter. These devices
  are often used for high-speed leased lines like T1/E1.

  This code is also available as a module (code which can be inserted
  into and removed from the running kernel).  If you want to compile
  it as a module, say M here and read Documentation/modules.txt.

PPP Deflate compression
CONFIG_PPP_DEFLATE
  Support for the Deflate compression method for PPP, which uses the
  Deflate algorithm (the same algorithm that gzip uses) to compress
  each PPP packet before it is sent over the wire. The machine at the
  other end of the PPP link (usually your ISP) has to support the
  Deflate compression method as well for this to be useful. Even if
  they don't support it, it is safe to say Y here.

  This code is also available as a module (code which can be inserted
  into and removed from the running kernel).  If you want to compile
  it as a module, say M here and read Documentation/modules.txt.

PPP BSD-Compress compression
CONFIG_PPP_BSDCOMP
  Support for the BSD-Compress compression method for PPP, which uses
  the LZW compression method to compress each PPP packet before it is
  sent over the wire. The machine at the other end of the PPP link
  (usually your ISP) has to support the BSD-Compress compression
  method as well for this to be useful. Even if they don't support it,
  it is safe to say Y here.

  The PPP Deflate compression method ("PPP Deflate compression",
  above) is preferable to BSD-Compress, because it compresses better
  and is patent-free.

  Note that the BSD compression code will always be compiled as a
  module; it is called bsd_comp.o and will show up in the directory
  modules once you have said "make modules". If unsure, say N.

PPP over Ethernet (EXPERIMENTAL)
CONFIG_PPPOE
  Support for PPP over Ethernet.

  This driver requires a specially patched pppd daemon.  The patch to
  pppd, along with binaries of a patched pppd package can be found at:
  http://www.math.uwaterloo.ca/~mostrows
 
Wireless LAN (non-hamradio)
CONFIG_NET_RADIO
  Support for wireless LANs and everything having to do with radio,
  but not with amateur radio or FM broadcasting.

  Saying Y here also enables the Wireless Extensions (creates
  /proc/net/wireless and enables ifconfig access). The Wireless
  Extension is a generic API allowing a driver to expose to the user
  space configuration and statistics specific to common Wireless LANs.
  The beauty of it is that a single set of tool can support all the
  variations of Wireless LANs, regardless of their type (as long as
  the driver supports Wireless Extension). Another advantage is that
  these parameters may be changed on the fly without restarting the
  driver (or Linux). If you wish to use Wireless Extensions with
  wireless PCMCIA (PC-) cards, you need to say Y here; you can fetch
  the tools from
  http://www.hpl.hp.com/personal/Jean_Tourrilhes/Linux/Tools.html .

  Some user-level drivers for scarab devices which don't require
  special kernel support are available from
  ftp://shadow.cabi.net/pub/Linux .

STRIP (Metricom Starmode radio IP)
CONFIG_STRIP
  Say Y if you have a Metricom radio and intend to use Starmode Radio
  IP. STRIP is a radio protocol developed for the MosquitoNet project
  (on the WWW at http://mosquitonet.stanford.edu/ ) to send Internet
  traffic using Metricom radios. Metricom radios are small, battery
  powered, 100kbit/sec packet radio transceivers, about the size and
  weight of a cellular telephone. (You may also have heard them called
  "Metricom modems" but we avoid the term "modem" because it misleads
  many people into thinking that you can plug a Metricom modem into a
  phone line and use it as a modem.)

  You can use STRIP on any Linux machine with a serial port, although
  it is obviously most useful for people with laptop computers. If you
  think you might get a Metricom radio in the future, there is no harm
  in saying Y to STRIP now, except that it makes the kernel a bit
  bigger. 

  You can also compile this as a module ( = code which can be inserted
  in and removed from the running kernel whenever you want), say M
  here and read Documentation/modules.txt. The module will be called
  strip.o.

AT&T WaveLAN & DEC RoamAbout DS support
CONFIG_WAVELAN
  The Lucent WaveLAN (formerly NCR and AT&T; or DEC RoamAbout DS) is
  a Radio LAN (wireless Ethernet-like Local Area Network) using the
  radio frequencies 900 MHz and 2.4 GHz.
  
  This driver support the ISA version of the WaveLAN card. A separate
  driver for the PCMCIA (PC-card) hardware is available in David
  Hinds' pcmcia-cs package (see the file Documentation/Changes for
  location).

  If you want to use an ISA WaveLAN card under Linux, say Y and read
  the Ethernet-HOWTO, available from
  http://www.linuxdoc.org/docs.html#howto . Some more specific
  information is contained in Documentation/networking/wavelan.txt and
  in the source code drivers/net/wavelan.p.h.

  You will also need the wireless tools package available from
  http://www.hpl.hp.com/personal/Jean_Tourrilhes/Linux/Tools.html .
  Please read the man pages contained therein.

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called wavelan.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt as well as
  Documentation/networking/net-modules.txt.

Aironet Arlan 655 & IC2200 DS support
CONFIG_ARLAN
  Aironet makes Arlan, a class of wireless LAN adapters. These use the
  www.Telxon.com chip, which is also used on several similar cards.
  This driver is tested on the 655 and IC2200 series cards. Look at
  http://www.ylenurme.ee/~elmer/655/ for the latest information.
  
  The driver is built as two modules, arlan and arlan-proc. The latter
  is the /proc interface and is not needed most of time.
  
  On some computers the card ends up in non-valid state after some
  time. Use a ping-reset script to clear it.

Aironet 4500/4800 series adapters
CONFIG_AIRONET4500
  www.aironet.com (recently bought by Cisco) makes these 802.11 DS
  adapters.  Driver by Elmer Joandi (elmer@ylenurme.ee).

  Say Y here if you have such an adapter, and then say Y below to 
  the option that applies to your particular type of card (PCI, ISA, 
  or PCMCIA).

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called aironet4500_core.o. If you want to 
  compile it as a module, say M here and read 
  Documentation/modules.txt as well as
  Documentation/networking/net-modules.txt.

  quick config parameters: 
	SSID=tsunami - "The Password"
	adhoc=1  	there are no Access Points around
	master=1 	Adhoc master (the one who creates network 
                        sync)
	slave=1		Adhoc slave (btw, it is still forming own net 
			sometimes, and has problems with firmware...
			change IbssJoinNetTimeout from /proc...)
	channel=1..? 	meaningful in adhoc mode
  
  If you have problems with screwing up card, both_bap_lock=1 is a
  conservative value (performance hit 15%).

  All other parameters can be set via the proc interface.

Aironet 4500/4800 ISA/PCI/PNP/365 support
CONFIG_AIRONET4500_NONCS
  If you have an ISA, PCI or PCMCIA Aironet 4500/4800 wireless LAN 
  card, say Y here, and then also to the options below that apply 
  to you.

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called aironet4500_card.o. If you want to 
  compile it as a module, say M here and read 
  Documentation/modules.txt

Aironet 4500/4800 PNP support
CONFIG_AIRONET4500_PNP
  If you have an ISA Aironet 4500/4800 card which you want to use in 
  PNP (Plug and Play) mode, say Y here. This is the recommended mode
  for ISA cards. Remember however to enable the PNP jumper on the
  board if you say Y here.

Aironet 4500/4800 PCI support
CONFIG_AIRONET4500_PCI
  If you have an PCI Aironet 4500/4800 card, say Y here.

Aironet 4500/4800 ISA broken support (EXPERIMENTAL)
CONFIG_AIRONET4500_ISA
  If you have an ISA Aironet 4500/4800 card which you want to run in
  non-PNP mode, say Y here. This is not recommended and does not work
  correctly at this point. Say N.

Aironet 4500/4800 I365 broken support (EXPERIMENTAL)
CONFIG_AIRONET4500_I365
  If you have a PCMCIA Aironet 4500/4800 card which you want to use 
  without the standard PCMCIA cardservices provided by the pcmcia-cs 
  package, say Y here. This is not recommended, so say N.

Aironet 4500/4800 PCMCIA support
CONFIG_AIRONET4500_CS
  Say Y here if you have a PCMCIA Aironet 4500/4800 card which you 
  want to use with the standard PCMCIA cardservices provided by the
  pcmcia-cs package.

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called aironet4500_cs.o. If you want to 
  compile it as a module, say M here and read 
  Documentation/modules.txt.
	
Aironet 4500/4800 PROC interface
CONFIG_AIRONET4500_PROC
  If you say Y here (and to the "/proc file system" below), you will 
  be able to configure your Aironet card via the 
  /proc/sys/aironet4500 interface.

  Additional info: look in drivers/net/aironet4500_rids.c.

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called aironet4500_proc.o. If you want to 
  compile it as a module, say M here and read 
  Documentation/modules.txt.

  NOTE: the proc interface uses a lot of memory, so it is recommended
        to compile it as a module and remove the module after 
        configuration.

LAPB over Ethernet driver
CONFIG_LAPBETHER
  This is a driver for a pseudo device (typically called /dev/lapb0)
  which allows you to open an LAPB point-to-point connection to some
  other computer on your Ethernet network. In order to do this, you
  need to say Y or M to the driver for your Ethernet card as well as
  to "LAPB Data Link Driver". 

  If you want to compile this driver as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt. The module will be
  called lapbether.o. If unsure, say N.

X.25 async driver
CONFIG_X25_ASY
  This is a driver for sending and receiving X.25 frames over regular
  asynchronous serial lines such as telephone lines equipped with
  ordinary modems. Experts should note that this driver doesn't
  currently comply with the asynchronous HDLS framing protocols in
  CCITT recommendation X.25. 

  If you want to compile this driver as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt. The module will be
  called x25_asy.o. If unsure, say N.

PCMCIA network device support
CONFIG_NET_PCMCIA
  Say Y if you would like to include support for any PCMCIA or CardBus
  network adapters, then say Y to the driver for your particular card
  below. PCMCIA- or PC-cards are credit-card size devices often used
  with laptops computers; CardBus is the newer and faster version of
  PCMCIA. 

  To use your PC-cards, you will need supporting software from David
  Hinds' pcmcia-cs package (see the file Documentation/Changes for
  location). You also want to check out the PCMCIA-HOWTO, available
  from http://www.linuxdoc.org/docs.html#howto .

  If unsure, say N.

3Com 3c589 PCMCIA support
CONFIG_PCMCIA_3C589
  Say Y here if you intend to attach a 3Com 3c589 or compatible PCMCIA
  (PC-card) Ethernet card to your computer.

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called 3c589_cs.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt. If unsure,
  say N.

3Com 3c574 PCMCIA support
CONFIG_PCMCIA_3C574
  Say Y here if you intend to attach a 3Com 3c574 or compatible PCMCIA
  (PC-card) Fast Ethernet card to your computer.

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called 3c574_cs.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt. If unsure,
  say N.

Fujitsu FMV-J18x PCMCIA support
CONFIG_PCMCIA_FMVJ18X
  Say Y here if you intend to attach a Fujitsu FMV-J18x or compatible
  PCMCIA (PC-card) Ethernet card to your computer.

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called fmvj18x_cs.o. If you want to compile it as
  a module, say M here and read Documentation/modules.txt. If unsure,
  say N.

NE2000 compatible PCMCIA support
CONFIG_PCMCIA_PCNET
  Say Y here if you intend to attach an NE2000 compatible PCMCIA
  (PC-card) Ethernet or Fast Ethernet card to your computer.

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called pcnet_cs.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt. If unsure,
  say N.

New Media PCMCIA support
CONFIG_PCMCIA_NMCLAN
  Say Y here if you intend to attach a New Media Ethernet or LiveWire
  PCMCIA (PC-card) Ethernet card to your computer.

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called nmclan_cs.o. If you want to compile it as
  a module, say M here and read Documentation/modules.txt. If unsure,
  say N.

SMC 91Cxx PCMCIA support
CONFIG_PCMCIA_SMC91C92
  Say Y here if you intend to attach an SMC 91Cxx compatible PCMCIA
  (PC-card) Ethernet or Fast Ethernet card to your computer.

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called smc91c92_cs.o. If you want to compile it
  as a module, say M here and read Documentation/modules.txt. If
  unsure, say N.

Xircom 16-bit PCMCIA support
CONFIG_PCMCIA_XIRC2PS
  Say Y here if you intend to attach a Xircom 16-bit PCMCIA
  (PC-card) Ethernet or Fast Ethernet card to your computer.

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called xirc2ps_cs.o. If you want to compile it as
  a module, say M here and read Documentation/modules.txt. If unsure,
  say N.

COM20020 ARCnet PCMCIA support
CONFIG_ARCNET_COM20020_CS
  Say Y here if you intend to attach this type of ARCnet PCMCIA card
  to your computer.

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called com20020_cs.o. If you want to compile it
  as a module, say M here and read Documentation/modules.txt. If
  unsure, say N.

IBM PCMCIA Token Ring adapter support
CONFIG_PCMCIA_IBMTR
  Say Y here if you intend to attach this type of Token Ring PCMCIA
  card to your computer. You then also need to say Y to "Token Ring
  driver support". 

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called ibmtr_cs.o. If you want to compile it
  as a module, say M here and read Documentation/modules.txt.

Xircom Tulip-like CardBus support
CONFIG_PCMCIA_XIRTULIP
  This driver is for the Digital "Tulip" Ethernet CardBus adapters.
  It should work with most DEC 21*4*-based chips/ethercards, as well
  as with work-alike chips from Lite-On (PNIC) and Macronix (MXIC) and
  ASIX.

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called xircom_tulip_cb.o. If you want to compile
  it as a module, say M here and read Documentation/modules.txt. If
  unsure, say N.

Pcmcia Wireless LAN
CONFIG_NET_PCMCIA_RADIO
  Say Y here if you would like to use a PCMCIA (PC-card) device to
  connect to a wireless local area network. Then say Y to the driver
  for your particular card below.

  To use your PC-cards, you will need supporting software from David
  Hinds' pcmcia-cs package (see the file Documentation/Changes for
  location). You also want to check out the PCMCIA-HOWTO, available
  from http://www.linuxdoc.org/docs.html#howto .

Aviator/Raytheon 2.4MHz wireless support
CONFIG_PCMCIA_RAYCS
  Say Y here if you intend to attach an Aviator/Raytheon PCMCIA
  (PC-card) wireless Ethernet networking card to your computer.
  Please read the file Documentation/networking/ray_cs.txt for
  details.

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called ray_cs.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt. If unsure,
  say N.

Xircom Netwave AirSurfer wireless support
CONFIG_PCMCIA_NETWAVE
  Say Y here if you intend to attach this type of PCMCIA (PC-card)
  wireless Ethernet networking card to your computer.

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called netwave_cs.o. If you want to compile it as
  a module, say M here and read Documentation/modules.txt. If unsure,
  say N.

AT&T/Lucent Wavelan wireless support
CONFIG_PCMCIA_WAVELAN
  Say Y here if you intend to attach an AT&T/Lucent Wavelan PCMCIA
  (PC-card) wireless Ethernet networking card to your computer.  This
  driver is for the non-IEEE-802.11 Wavelan cards.

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called wavelan_cs.o. If you want to compile it as
  a module, say M here and read Documentation/modules.txt. If unsure,
  say N.

PLIP (parallel port) support
CONFIG_PLIP
  PLIP (Parallel Line Internet Protocol) is used to create a
  reasonably fast mini network consisting of two (or, rarely, more)
  local machines. A PLIP link from a Linux box is a popular means to
  install a Linux distribution on a machine which doesn't have a CDROM
  drive (a minimal system has to be transferred with floppies first).
  The kernels on both machines need to have this PLIP option enabled
  for this to work.

  The PLIP driver has two modes, mode 0 and mode 1. The parallel ports
  (the connectors at the computers with 25 holes) are connected with
  "null printer" or "Turbo Laplink" cables which can transmit 4 bits
  at a time (mode 0) or with special PLIP cables, to be used on
  bidirectional parallel ports only, which can transmit 8 bits at a
  time (mode 1); you can find the wiring of these cables in
  Documentation/networking/PLIP.txt. The cables can be up to 15m long.
  Mode 0 works also if one of the machines runs DOS/Windows and has
  some PLIP software installed, e.g. the Crynwr PLIP packet driver
  (http://oak.oakland.edu/simtel.net/msdos/pktdrvr-pre.html ) and
  winsock or NCSA's telnet.

  If you want to use PLIP, say Y and read the PLIP mini-HOWTO as well
  as the NET-3-HOWTO, both available from
  http://www.linuxdoc.org/docs.html#howto . Note that the PLIP
  protocol has been changed and this PLIP driver won't work together
  with the PLIP support in Linux versions 1.0.x. This option enlarges
  your kernel by about 8 KB.

  If you want to compile this as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt as well as
  Documentation/networking/net-modules.txt. The module will be called
  plip.o. If unsure, say Y or M, in case you buy a laptop later.

EQL (serial line load balancing) support
CONFIG_EQUALIZER
  If you have two serial connections to some other computer (this
  usually requires two modems and two telephone lines) and you use
  SLIP (the protocol for sending Internet traffic over telephone
  lines) or PPP (a better SLIP) on them, you can make them behave like
  one double speed connection using this driver. Naturally, this has
  to be supported at the other end as well, either with a similar EQL
  Linux driver or with a Livingston Portmaster 2e. 

  Say Y if you want this and read Documentation/networking/eql.txt.
  You may also want to read section 6.2 of the NET-3-HOWTO, available
  from http://www.linuxdoc.org/docs.html#howto .

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called eql.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt. If unsure,
  say N.

Universal TUN/TAP device driver.
CONFIG_TUN
  TUN/TAP provides packet reception and transmission for user space programs.
  It can be viewed as a simple Point-to-Point or Ethernet device, which
  instead of receiving packets from a physical media, receives them from
  user space program and instead of sending packets via physical media
  writes them to the user space program.

  When a program opens /dev/net/tun, driver creates and registers 
  corresponding net device tunX or tapX. After a program closed above 
  devices, driver will automatically delete tunXX or tapXX device and all 
  routes corresponding to it.

  Please read Documentation/networking/tuntap.txt for more information.

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called tun.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt.

  If you don't know what to use this for, you don't need it.

Ethertap network tap (OBSOLETE)
CONFIG_ETHERTAP
  If you say Y here (and have said Y to "Kernel/User network link
  driver", above) and create a character special file /dev/tap0 with
  major number 36 and minor number 16 using mknod ("man mknod"), you
  will be able to have a user space program read and write raw
  Ethernet frames from/to that special file. tap0 can be configured
  with ifconfig and route like any other Ethernet device but it is not
  connected to any physical LAN; everything written by the user to
  /dev/tap0 is treated by the kernel as if it had come in from a LAN
  to the device tap0; everything the kernel wants to send out over the
  device tap0 can instead be read by the user from /dev/tap0: the user
  mode program replaces the LAN that would be attached to an ordinary
  Ethernet device. Please read the file
  Documentation/networking/ethertap.txt for more information. 

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called ethertap.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt. 

  If you don't know what to use this for, you don't need it.

Sealevel Systems 4021 support
CONFIG_SEALEVEL_4021
  This is a driver for the Sealevel Systems ACB 56 serial I/O adapter.
  
  This driver can only be compiled as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  If you want to do that, say M here. The module will be called
  sealevel.o.

SyncLink HDLC/SYNCPPP support
CONFIG_SYNCLINK_SYNCPPP
  Enables HDLC/SYNCPPP support for the SyncLink WAN driver.
  Normally the SyncLink WAN driver works with the main PPP
  driver (ppp.c) and pppd program. HDLC/SYNCPPP support allows use
  of the Cisco HDLC/PPP driver (syncppp.c).
  The SyncLink WAN driver (in character devices) must also be enabled.

Frame Relay (DLCI) support
CONFIG_DLCI
  This is support for the frame relay protocol; frame relay is a fast
  low-cost way to connect to a remote Internet access provider or to
  form a private wide area network. The one physical line from your
  box to the local "switch" (i.e. the entry point to the frame relay
  network, usually at the phone company) can carry several logical
  point-to-point connections to other computers connected to the frame
  relay network. For a general explanation of the protocol, check out
  http://www.frforum.com/ on the WWW. To use frame relay, you need
  supporting hardware (called FRAD) and certain programs from the
  net-tools package as explained in
  Documentation/networking/framerelay.txt.

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called dlci.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt.

Max open DLCI
CONFIG_DLCI_COUNT
  This is the maximal number of logical point-to-point frame relay
  connections (the identifiers of which are called DCLIs) that
  the driver can handle. The default is probably fine.

Max DLCI per device
CONFIG_DLCI_MAX
  You can specify here how many logical point-to-point frame relay
  connections (the identifiers of which are called DCLIs) should be
  handled by each of your hardware frame relay access devices. Go with
  the default.

Sangoma S502A FRAD support
CONFIG_SDLA
  Say Y here if you need a driver for the Sangoma S502A, S502E, and
  S508 Frame Relay Access Devices. These are multi-protocol cards, but
  only frame relay is supported by the driver at this time. Please
  read Documentation/framerelay.txt. 

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called sdla.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt.

Acorn Econet/AUN protocols (EXPERIMENTAL)
CONFIG_ECONET
  Econet is a fairly old and slow networking protocol mainly used by
  Acorn computers to access file and print servers. It uses native
  Econet network cards. AUN is an implementation of the higher level
  parts of Econet that runs over ordinary Ethernet connections, on
  top of the UDP packet protocol, which in turn runs on top of the
  Internet protocol IP.

  If you say Y here, you can choose with the next two options whether
  to send Econet/AUN traffic over a UDP Ethernet connection or over
  a native Econet network card.

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called econet.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt.

AUN over UDP
CONFIG_ECONET_AUNUDP
  Say Y here if you want to send Econet/AUN traffic over a UDP
  connection (UDP is a packet based protocol that runs on top of the
  Internet protocol IP) using an ordinary Ethernet network card.

Native Econet
CONFIG_ECONET_NATIVE
  Say Y here if you have a native Econet network card installed in
  your computer.

WAN Router
CONFIG_WAN_ROUTER
  Wide Area Networks (WANs), such as X.25, frame relay and leased
  lines, are used to interconnect Local Area Networks (LANs) over vast
  distances with data transfer rates significantly higher than those
  achievable with commonly used asynchronous modem connections.
  Usually, a quite expensive external device called a `WAN router' is
  needed to connect to a WAN.

  As an alternative, WAN routing can be built into the Linux kernel.
  With relatively inexpensive WAN interface cards available on the
  market, a perfectly usable router can be built for less than half
  the price of an external router. If you have one of those cards and
  wish to use your Linux box as a WAN router, say Y here and also to
  the WAN driver for your card, below. You will then need the
  wan-tools package which is available from ftp://ftp.sangoma.com .
  Read Documentation/networking/wan-router.txt for more information.

  The WAN routing support is also available as a module called
  wanrouter.o ( = code which can be inserted in and removed from the
  running kernel whenever you want). If you want to compile it as a
  module, say M here and read Documentation/modules.txt.

  If unsure, say N.

Fast switching (read help!)
CONFIG_NET_FASTROUTE
  Saying Y here enables direct NIC-to-NIC (NIC = Network Interface
  Card) data transfers on the local network, which is fast.

  IMPORTANT NOTE: This option is NOT COMPATIBLE with "Network packet
  filtering" (CONFIG_NETFILTER). Say N here if you say Y there.

  However, it will work with all options in the "IP: advanced router"
  section (except for "IP: use TOS value as routing key" and
  "IP: use FWMARK value as routing key").

  At the moment, few devices support fast switching (tulip is one of
  them, a modified 8390 driver can be found at
  ftp://ftp.inr.ac.ru/ip-routing/fastroute/fastroute-8390.tar.gz ).

  If unsure, say N.

Forwarding between high speed interfaces
CONFIG_NET_HW_FLOWCONTROL
  This option enables NIC (Network Interface Card) hardware throttling
  during periods of extremal congestion. At the moment only a couple
  of device drivers support it (really only one -- tulip, a modified
  8390 driver can be found at
  ftp://ftp.inr.ac.ru/ip-routing/fastroute/fastroute-8390.tar.gz ). 

  Really, this option is applicable to any machine attached to a fast
  enough network, and even a 10 Mb NIC is able to kill a not very slow
  box, such as a 120MHz Pentium.

  However, do not say Y here if you did not experience any serious
  problems.

QoS and/or fair queueing
CONFIG_NET_SCHED
  When the kernel has several packets to send out over a network
  device, it has to decide which ones to send first, which ones to
  delay, and which ones to drop. This is the job of the packet
  scheduler, and several different algorithms for how to do this
  "fairly" have been proposed.

  If you say N here, you will get the standard packet scheduler, which
  is a FIFO (first come, first served). If you say Y here, you will be
  able to choose from among several alternative algorithms which can
  then be attached to different network devices. This is useful for
  example if some of your network devices are real time devices that
  need a certain minimum data flow rate, or if you need to limit the
  maximum data flow rate for traffic which matches specified criteria.
  This code is considered to be experimental.

  To administer these schedulers, you'll need the user-level utilities
  from the package iproute2+tc at ftp://ftp.inr.ac.ru/ip-routing/ .
  That package also contains some documentation; for more, check out
  http://snafu.freedom.org/linux2.2/iproute-notes.html .

  This Quality of Service (QoS) support will enable you to use
  Differentiated Services (diffserv) and Resource Reservation Protocol
  (RSVP) on your Linux router if you also say Y to "QoS support",
  "Packet classifier API" and to some classifiers below. Documentation
  and software is at http://icawww1.epfl.ch/linux-diffserv/ .

  If you say Y here and to "/proc file system" below, you will be able
  to read status information about packet schedulers from the file
  /proc/net/psched.
  
  The available schedulers are listed in the following questions; you
  can say Y to as many as you like. If unsure, say N now.

CBQ packet scheduler
CONFIG_NET_SCH_CBQ
  Say Y here if you want to use the Class-Based Queueing (CBQ) packet
  scheduling algorithm for some of your network devices. This
  algorithm classifies the waiting packets into a tree-like hierarchy
  of classes; the leaves of this tree are in turn scheduled by
  separate algorithms (called "disciplines" in this context).

  See the top of net/sched/sch_cbq.c for references about the CBQ
  algorithm.
  
  CBQ is a commonly used scheduler, so if you're unsure, you should
  say Y here. Then say Y to all the queueing algorithms below that you
  want to use as CBQ disciplines. Then say Y to "Packet classifier
  API" and say Y to all the classifiers you want to use; a classifier
  is a routine that allows you to sort your outgoing traffic into
  classes based on a certain criterion.

  This code is also available as a module called sch_cbq.o ( = code
  which can be inserted in and removed from the running kernel
  whenever you want). If you want to compile it as a module, say M
  here and read Documentation/modules.txt.

CSZ packet scheduler
CONFIG_NET_SCH_CSZ
  Say Y here if you want to use the Clark-Shenker-Zhang (CSZ) packet
  scheduling algorithm for some of your network devices. At the
  moment, this is the only algorithm that can guarantee service for
  real-time applications (see the top of net/sched/sch_csz.c for
  details and references about the algorithm). 
  
  Note: this scheduler is currently broken.

  This code is also available as a module called sch_csz.o ( = code
  which can be inserted in and removed from the running kernel
  whenever you want). If you want to compile it as a module, say M
  here and read Documentation/modules.txt.

#ATM pseudo-scheduler
#CONFIG_NET_SCH_ATM
#
# ???
#
  
The simplest PRIO pseudo scheduler
CONFIG_NET_SCH_PRIO
  Say Y here if you want to use an n-band priority queue packet
  "scheduler" for some of your network devices or as a leaf discipline
  for the CBQ scheduling algorithm. If unsure, say Y.

  This code is also available as a module called sch_prio.o ( = code
  which can be inserted in and removed from the running kernel
  whenever you want). If you want to compile it as a module, say M
  here and read Documentation/modules.txt.

RED queue
CONFIG_NET_SCH_RED
  Say Y here if you want to use the Random Early Detection (RED)
  packet scheduling algorithm for some of your network devices (see
  the top of net/sched/sch_red.c for details and references about the
  algorithm).

  This code is also available as a module called sch_red.o ( = code
  which can be inserted in and removed from the running kernel
  whenever you want). If you want to compile it as a module, say M
  here and read Documentation/modules.txt.

SFQ queue
CONFIG_NET_SCH_SFQ
  Say Y here if you want to use the Stochastic Fairness Queueing (SFQ)
  packet scheduling algorithm for some of your network devices or as a
  leaf discipline for the CBQ scheduling algorithm (see the top of
  net/sched/sch_sfq.c for details and references about the SFQ
  algorithm). 

  This code is also available as a module called sch_sfq.o ( = code
  which can be inserted in and removed from the running kernel
  whenever you want). If you want to compile it as a module, say M
  here and read Documentation/modules.txt.

TEQL queue
CONFIG_NET_SCH_TEQL
  Say Y here if you want to use the True Link Equalizer (TLE) packet
  scheduling algorithm for some of your network devices or as a leaf
  discipline for the CBQ scheduling algorithm. This queueing
  discipline allows the combination of several physical devices into
  one virtual device. (see the top of net/sched/sch_teql.c for
  details).

  This code is also available as a module called sch_teql.o ( = code
  which can be inserted in and removed from the running kernel
  whenever you want). If you want to compile it as a module, say M
  here and read Documentation/modules.txt.

TBF queue
CONFIG_NET_SCH_TBF
  Say Y here if you want to use the Simple Token Bucket Filter (TBF)
  packet scheduling algorithm for some of your network devices or as a
  leaf discipline for the CBQ scheduling algorithm (see the top of
  net/sched/sch_tbf.c for a description of the TBF algorithm). 

  This code is also available as a module called sch_tbf.o ( = code
  which can be inserted in and removed from the running kernel
  whenever you want). If you want to compile it as a module, say M
  here and read Documentation/modules.txt.

### Add these
#+tristate '  GRED queue' CONFIG_NET_SCH_GRED
#+tristate '  Diffserv field marker' CONFIG_NET_SCH_DSMARK
#+tristate '  Ingress Qdisc' CONFIG_NET_SCH_INGRESS

QoS support
CONFIG_NET_QOS
  Say Y here if you want to include Quality Of Service scheduling
  features, which means that you will be able to request certain
  rate-of-flow limits for your network devices.

  This Quality of Service (QoS) support will enable you to use
  Differentiated Services (diffserv) and Resource Reservation Protocol
  (RSVP) on your Linux router if you also say Y to "Packet classifier
  API" and to some classifiers below. Documentation and software is at
  http://icawww1.epfl.ch/linux-diffserv/ .

  Note that the answer to this question won't directly affect the
  kernel: saying N will just cause this configure script to skip all
  the questions about QoS support.

Rate estimator
CONFIG_NET_ESTIMATOR
  In order for Quality of Service scheduling to work, the current
  rate-of-flow for a network device has to be estimated; if you say Y
  here, the kernel will do just that.

Packet classifier API
CONFIG_NET_CLS
  The CBQ scheduling algorithm requires that network packets which are
  scheduled to be sent out over a network device be classified
  according to some criterion. If you say Y here, you will get a
  choice of several different packet classifiers with the following
  questions.

  This will enable you to use Differentiated Services (diffserv) and
  Resource Reservation Protocol (RSVP) on your Linux router.
  Documentation and software is at
  http://icawww1.epfl.ch/linux-diffserv/ .

### Add
#tristate '    TC index classifier' CONFIG_NET_CLS_TCINDEX

Routing tables based classifier
CONFIG_NET_CLS_ROUTE4
  If you say Y here, you will be able to classify outgoing packets
  according to the route table entry they matched. If unsure, say Y.

  This code is also available as a module called cls_route.o ( = code
  which can be inserted in and removed from the running kernel
  whenever you want). If you want to compile it as a module, say M
  here and read Documentation/modules.txt.

Firewall based classifier
CONFIG_NET_CLS_FW
  If you say Y here, you will be able to classify outgoing packets
  according to firewall criteria you specified.

  This code is also available as a module called cls_fw.o ( = code
  which can be inserted in and removed from the running kernel
  whenever you want). If you want to compile it as a module, say M
  here and read Documentation/modules.txt.

U32 classifier
CONFIG_NET_CLS_U32
  If you say Y here, you will be able to classify outgoing packets
  according to their destination address. If unsure, say Y.

  This code is also available as a module called cls_u32.o ( = code
  which can be inserted in and removed from the running kernel
  whenever you want). If you want to compile it as a module, say M
  here and read Documentation/modules.txt

Special RSVP classifier
CONFIG_NET_CLS_RSVP
  The Resource Reservation Protocol (RSVP) permits end systems to
  request a minimum and maximum data flow rate for a connection; this
  is important for real time data such as streaming sound or video.

  Say Y here if you want to be able to classify outgoing packets based
  on their RSVP requests.

  This code is also available as a module called cls_rsvp.o ( = code
  which can be inserted in and removed from the running kernel
  whenever you want). If you want to compile it as a module, say M
  here and read Documentation/modules.txt

Special RSVP classifier for IPv6
CONFIG_NET_CLS_RSVP6
  The Resource Reservation Protocol (RSVP) permits end systems to
  request a minimum and maximum data flow rate for a connection; this
  is important for real time data such as streaming sound or video.

  Say Y here if you want to be able to classify outgoing packets based
  on their RSVP requests and you are using the new Internet Protocol
  IPv6 as opposed to the older and more common IPv4.

  This code is also available as a module called cls_rsvp6.o ( = code
  which can be inserted in and removed from the running kernel
  whenever you want). If you want to compile it as a module, say M
  here and read Documentation/modules.txt

#
# Traffic policing (needed for in/egress)
# CONFIG_NET_CLS_POLICE
###
### Some expert please fill these in
###

Network code profiler
CONFIG_NET_PROFILE
  If you say Y here and to "/proc file system support" below, some
  obscure and undocumented information about the network code's
  performance will be written to /proc/net/profile. If you don't know
  what it is about, you don't need it: say N.

Wan interfaces support
CONFIG_WAN
  Wide Area Networks (WANs), such as X.25, frame relay and leased
  lines, are used to interconnect Local Area Networks (LANs) over vast
  distances with data transfer rates significantly higher than those
  achievable with commonly used asynchronous modem connections.
  Usually, a quite expensive external device called a `WAN router' is
  needed to connect to a WAN.

  As an alternative, a relatively inexpensive WAN interface card can
  allow your Linux box to directly connect to a WAN. If you have one
  of those cards and wish to use it under Linux, say Y here and also
  to the WAN driver for your card, below.

  If unsure, say N.

Comtrol Hostess SV-11 support
CONFIG_HOSTESS_SV11
  This is a network card for low speed synchronous serial links, at
  up to 256Kbps. It supports both PPP and Cisco HDLC.
  
  At this point, the driver can only be compiled as a module.

COSA/SRP sync serial boards support
CONFIG_COSA
  This is a driver for COSA and SRP synchronous serial boards. These
  boards allow to connect synchronous serial devices (for example
  base-band modems, or any other device with the X.21, V.24, V.35 or
  V.36 interface) to your Linux box. The cards can work as the
  character device, synchronous PPP network device, or the Cisco HDLC
  network device.

  To actually use the COSA or SRP board, you will need user-space
  utilities for downloading the firmware to the cards and to set them
  up. Look at the http://www.fi.muni.cz/~kas/cosa/ for more
  information about the cards (including the pointer to the user-space
  utilities). You can also read the comment at the top of the
  drivers/net/cosa.c for details about the cards and the driver
  itself.

  The driver will be compiled as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called cosa.o. For general information about
  modules read Documentation/modules.txt.

Lan Media sync serial boards support
CONFIG_LANMEDIA
  This is a driver for the following Lan Media family of serial boards.
 
  LMC 1000 board allows you to connect synchronous serial devices (for
  example base-band modems, or any other device with the X.21, V.24,
  V.35 or V.36 interface) to your Linux box.
 
  LMC 1200 with on board DSU board allows you to connect your Linux
  box dirrectly to a T1 or E1 circuit.
 
  LMC 5200 board provides a HSSI interface capable of runnig up to
  52 mbits per second.
 
  LMC 5245 board connects directly to a T3 circuit saving the
  additional external hardware.
 
  To change setting such as syncPPP vs cisco HDLC or clock source you
  will need lmcctl.  It it available at ftp.lanmedia.com.
 
  This code is also available as a module called lmc.o ( = code
  which can be inserted in and removed from the running kernel
  whenever you want). If you want to compile it as a module, say M
  here and read Documentation/modules.txt.

Fibre Channel driver support
CONFIG_NET_FC
  Fibre Channel is a high speed serial protocol mainly used to connect
  large storage devices to the computer; it is compatible with and
  intended to replace SCSI. 

  If you intend to use Fibre Channel, you need to have a Fibre channel
  adaptor card in your computer; say Y here and to the driver for your
  adaptor below. You also should have said Y to "SCSI support" and
  "SCSI generic support".

Interphase 5526 Tachyon chipset based adaptor support
CONFIG_IPHASE5526
  Say Y here if you have a Fibre Channel adaptor of this kind.

  The driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called iph5526.o. For general information about
  modules read Documentation/modules.txt.
  
Red Creek Hardware VPN (EXPERIMENTAL)
CONFIG_RCPCI
  This is a driver for hardware which provides a Virtual Private
  Network (VPN). Say Y if you have it.

  This code is also available as a module called rcpci.o ( = code
  which can be inserted in and removed from the running kernel
  whenever you want). If you want to compile it as a module, say M
  here and read Documentation/modules.txt.
  
SBNI12-xx support
CONFIG_SBNI
  This is a driver for ISA SBNI12-xx cards which are low cost
  alternatives to leased line modems. Say Y if you want to insert
  the driver into the kernel or say M to compile it as a module (the
  module will be called sbni.o). 
  
  You can find more information and last versions of drivers and 
  utilities at http://www.granch.ru . If you have any question you
  can send email to sbni@granch.ru.
  
  Say N if unsure.

WAN router drivers
CONFIG_WAN_ROUTER_DRIVERS
  If you have a WAN interface card and you want your Linux box to act
  as a WAN router, thereby connecting you Local Area Network to the
  outside world over the WAN connection, say Y here and then to the
  driver for your card below. In addition, you need to say Y to "Wan
  Router".

  You will need the wan-tools package which is available from
  ftp://ftp.sangoma.com . Read Documentation/networking/wan-router.txt
  for more information.

  Note that the answer to this question won't directly affect the
  kernel: saying N will just cause this configure script to skip all
  the questions about WAN router drivers. If unsure, say N.

Sangoma WANPIPE(tm) multiprotocol cards
CONFIG_VENDOR_SANGOMA
  WANPIPE from Sangoma Technologies Inc. (http://www.sangoma.com ) is
  a family of intelligent multiprotocol WAN adapters with data
  transfer rates up to T1 (1.544 Mbps). They are also known as
  Synchronous Data Link Adapters (SDLA) and designated S502E(A), S503
  or S508. These cards support the X.25, Frame Relay, and PPP
  protocols. If you have one or more of these cards, say Y to this
  option; you may then also want to read the file
  Documentation/networking/wanpipe.txt. The next questions will ask
  you about the protocols you want the driver to support.

  The driver will be compiled as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called wanpipe.o. For general information about
  modules read Documentation/modules.txt.

Maximum number of cards
CONFIG_WANPIPE_CARDS
  Enter number of WANPIPE adapters installed in your machine. The
  driver can support up to 8 cards. You may enter more than you
  actually have if you plan to add more cards in the future without
  re-compiling the driver, but remember that in this case you'll waste
  some kernel memory (about 1K per card).

WANPIPE Cisco HDLC support
CONFIG_WANPIPE_CHDLC
  Say Y to this option if you are planning to connect a WANPIPE card
  to a connection which uses the synchronous Cisco HDLC (High-level
  Data Link Control) protocol. This protocol is often used on
  high-speed leased lines like T1/E1.

WANPIPE X.25 support
CONFIG_WANPIPE_X25
  Say Y to this option if you are planning to connect a WANPIPE card
  to an X.25 network. You should then also have said Y to "CCITT X.25
  Packet Layer" and "LAPB Data Link Driver", above. If you say N, the
  X.25 support will not be included in the driver (saves about 16 KB
  of kernel memory).

WANPIPE Frame Relay support
CONFIG_WANPIPE_FR
  Say Y to this option if you are planning to connect a WANPIPE card
  to a frame relay network. You should then also have said Y to "Frame
  Relay (DLCI) support", above. If you say N, the frame relay
  support will not be included in the driver (saves about 16 KB of
  kernel memory).

WANPIPE PPP support
CONFIG_WANPIPE_PPP
  Say Y to this option if you are planning to connect a WANPIPE card
  to a leased line using Point-to-Point protocol (PPP). You should
  then also have said Y to "PPP (point-to-point) support", above. If
  you say N, the PPP support will not be included in the driver (saves
  about 16 KB of kernel memory).

MultiGate/COMX support
CONFIG_COMX
  Say Y if you want to use any board from the MultiGate (COMX) family.
  These boards are synchronous serial adapters for the PC,
  manufactured by ITConsult-Pro Co, Hungary.

  Read linux/Documentation/networking/comx.txt for help on configuring
  and using COMX interfaces. Further info on these cards can be found
  at http://www.itc.hu or <info@itc.hu>.

  You must say Y to "/proc file system support" (CONFIG_PROC_FS) to
  use this driver.

  If you want to compile this as a module, say M and read
  Documentation/modules.txt. The module will be called comx.o.

COMX/CMX/HiCOMX board support
CONFIG_COMX_HW_COMX
  Hardware driver for the 'CMX', 'COMX' and 'HiCOMX' boards from the
  MultiGate family. Say Y if you have one of these. 

  You will need additional firmware to use these cards, which are
  downloadable from ftp://ftp.itc.hu/.

  If you want to compile this as a module, say M and read
  Documentation/modules.txt. The module will be called comx-hw-comx.o.

LoCOMX board support
CONFIG_COMX_HW_LOCOMX
  Hardware driver for the 'LoCOMX' board from the MultiGate family.
  Say Y if you have a board like this.

  If you want to compile this as a module, say M and read
  Documentation/modules.txt. The module will be called
  comx-hw-locomx.o.

MixCOM board support
CONFIG_COMX_HW_MIXCOM
  Hardware driver for the 'MixCOM' board from the MultiGate family.
  Say Y if you have a board like this.

  If you want to use the watchdog device on this card, you should
  select it in the Watchdog Cards section of the Character Devices
  configuration. The ISDN interface of this card is Teles 16.3
  compatible, you should enable it in the ISDN configuration menu. The
  driver for the flash ROM of this card is available separately on
  ftp://ftp.itc.hu/.

  If you want to compile this as a module, say M and read
  Documentation/modules.txt. The module will be called
  comx-hw-mixcom.o.

i810 TCO support
CONFIG_I810_TCO
  Hardware driver for the TCO timer built into the Intel i810 and i815
  chipset family. The TCO (Total Cost of Ownership) timer is a watchdog
  timer that will reboot the machine after it's second expiration. The
  expiration time can be configured by commandline argument
  "i810_margin=<n>" where <n> is the counter initial value. It is
  decremented every 0.6 secs, the default is 50 which gives a timeout
  of 30 seconds and one minute until reset.

  On some motherboards the driver may fail to reset the chipset's
  NO_REBOOT flag which prevents the watchdog from rebooting the machine.
  If this is the case you will get a kernel message like
  "i810tco init: failed to reset NO_REBOOT flag".

  If you want to compile this as a module, say M and read
  Documentation/modules.txt. The module will be called
  i810-tco.o.
  
MultiGate Cisco-HDLC and synchronous PPP protocol support
CONFIG_COMX_PROTO_PPP
  Cisco-HDLC and synchronous PPP protocol driver for all MultiGate
  boards. Say Y if you want to use either protocol on your MultiGate
  boards.

  If you want to compile this as a module, say M and read
  Documentation/modules.txt. The module will be called 
  comx-proto-ppp.o.

MultiGate LAPB protocol support
CONFIG_COMX_PROTO_LAPB
  LAPB protocol driver for all MultiGate boards. Say Y if you 
  want to use this protocol on your MultiGate boards.

  If you want to compile this as a module, say M and read
  Documentation/modules.txt. The module will be called
  comx-proto-lapb.o.

MultiGate Frame Relay protocol support
CONFIG_COMX_PROTO_FR
  Frame Relay protocol driver for all MultiGate boards. Say Y if you 
  want to use this protocol on your MultiGate boards.

  If you want to compile this as a module, say M and read
  Documentation/modules.txt. The module will be called
  comx-proto-fr.o.

Cyclom 2X(tm) multiprotocol cards (EXPERIMENTAL)
CONFIG_CYCLADES_SYNC
  Cyclom 2X from Cyclades Corporation (http://www.cyclades.com and
  http://www.cyclades.com.br) is an intelligent multiprotocol WAN
  adapter with data transfer rates up to 512 Kbps. These cards support
  the X.25 and SNA related protocols. If you have one or more of these
  cards, say Y to this option. The next questions will ask you about
  the protocols you want the driver to support (for now only X.25 is
  supported).

  While no documentation is available at this time please grab the
  wanconfig tarball in http://www.conectiva.com.br/~acme/cycsyn-devel
  (with minor changes to make it compile with the current wanrouter
  include files; efforts are being made to use the original package
  available at ftp://ftp.sangoma.com ).

  Feel free to contact me or the cycsyn-devel mailing list at
  acme@conectiva.com.br and cycsyn-devel@bazar.conectiva.com.br for
  additional details, I hope to have documentation available as soon
  as possible. (Cyclades Brazil is writing the Documentation).

  The driver will be compiled as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called cyclomx.o. For general information about
  modules read Documentation/modules.txt.

Cyclom 2X X.25 support
CONFIG_CYCLOMX_X25
  Say Y to this option if you are planning to connect a Cyclom 2X card
  to an X.25 network. 

  If you say N, the X.25 support will not be included in the driver
  (saves about 11 KB of kernel memory).

Ethernet (10 or 100Mbit)
CONFIG_NET_ETHERNET
  Ethernet (also called IEEE 802.3 or ISO 8802-2) is the most common
  type of Local Area Network (LAN) in universities and companies.

  Common varieties of Ethernet are: 10BASE-2 or Thinnet (10 Mbps over
  coaxial cable, linking computers in a chain), 10BASE-T or twisted
  pair (10 Mbps over twisted pair cable, linking computers to central
  hubs), 10BASE-F (10 Mbps over optical fiber links, using hubs),
  100BASE-TX (100 Mbps over two twisted pair cables, using hubs),
  100BASE-T4 (100 Mbps over 4 standard voice-grade twisted pair
  cables, using hubs), 100BASE-FX (100 Mbps over optical fiber links)
  [the 100BASE varieties are also known as Fast Ethernet], and Gigabit
  Ethernet (1 Gbps over optical fiber or short copper links).

  If your Linux machine will be connected to an Ethernet and you have
  an Ethernet network interface card (NIC) installed in your computer,
  say Y here and read the Ethernet-HOWTO, available from
  http://www.linuxdoc.org/docs.html#howto . You will then also have
  to say Y to the driver for your particular NIC.

  Note that the answer to this question won't directly affect the
  kernel: saying N will just cause this configure script to skip all
  the questions about Ethernet network cards. If unsure, say N.

Western Digital/SMC cards
CONFIG_NET_VENDOR_SMC
  If you have a network (Ethernet) card belonging to this class, say Y
  and read the Ethernet-HOWTO, available from
  http://www.linuxdoc.org/docs.html#howto .

  Note that the answer to this question doesn't directly affect the
  kernel: saying N will just cause this configure script to skip all
  the questions about Western Digital cards. If you say Y, you will be
  asked for your specific card in the following questions.

WD80*3 support
CONFIG_WD80x3
  If you have a network (Ethernet) card of this type, say Y and read
  the Ethernet-HOWTO, available from
  http://www.linuxdoc.org/docs.html#howto .

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called wd.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt as well as
  Documentation/networking/net-modules.txt.

SMC Ultra MCA support
CONFIG_ULTRAMCA
  If you have a network (Ethernet) card of this type and are running
  an MCA based system (PS/2), say Y and read the Ethernet-HOWTO,
  available from http://www.linuxdoc.org/docs.html#howto .

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called smc-mca.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt as well as
  Documentation/networking/net-modules.txt.

SMC Ultra support
CONFIG_ULTRA
  If you have a network (Ethernet) card of this type, say Y and read
  the Ethernet-HOWTO, available from
  http://www.linuxdoc.org/docs.html#howto .
  
  Important: There have been many reports that, with some motherboards
  mixing an SMC Ultra and an Adaptec AHA154x SCSI card (or compatible,
  such as some BusLogic models) causes corruption problems with many
  operating systems. The Linux smc-ultra driver has a work-around for
  this but keep it in mind if you have such a SCSI card and have
  problems.

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called smc-ultra.o. If you want to compile it as
  a module, say M here and read Documentation/modules.txt as well as
  Documentation/networking/net-modules.txt. 

SMC Ultra32 EISA support
CONFIG_ULTRA32
  If you have a network (Ethernet) card of this type, say Y and read
  the Ethernet-HOWTO, available from
  http://www.linuxdoc.org/docs.html#howto .

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called smc-ultra32.o. If you want to compile it
  as a module, say M here and read Documentation/modules.txt as well
  as Documentation/networking/net-modules.txt.

SMC 9194 Support
CONFIG_SMC9194
  This is support for the SMC9xxx based Ethernet cards. Choose this
  option if you have a DELL laptop with the docking station, or
  another SMC9192/9194 based chipset. Say Y if you want it compiled
  into the kernel, and read the file
  Documentation/networking/smc9.txt and the Ethernet-HOWTO, available
  from http://www.linuxdoc.org/docs.html#howto .

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you
  want). The module will be called smc9194.o. If you want to compile
  it as a module, say M here and read Documentation/modules.txt as
  well as Documentation/networking/net-modules.txt.

PCI NE2000 support
CONFIG_NE2K_PCI
  This driver is for NE2000 compatible PCI cards. It will not work
  with ISA NE2000 cards (they have their own driver, "NE2000/NE1000
  support" below). If you have a PCI NE2000 network (Ethernet) card,
  say Y and read the Ethernet-HOWTO, available from
  http://www.linuxdoc.org/docs.html#howto .

  This driver also works for the following NE2000 clone cards:
    RealTek RTL-8029  Winbond 89C940  Compex RL2000  KTI ET32P2
    NetVin NV5000SC   Via 86C926      SureCom NE34   Winbond
    Holtek HT80232    Holtek HT80229

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called ne2k-pci.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt as well as
  Documentation/networking/net-modules.txt.

Racal-Interlan (Micom) NI cards
CONFIG_NET_VENDOR_RACAL
  If you have a network (Ethernet) card belonging to this class, such
  as the NI5010, NI5210 or NI6210, say Y and read the Ethernet-HOWTO,
  available from http://www.linuxdoc.org/docs.html#howto .

  Note that the answer to this question doesn't directly affect the
  kernel: saying N will just cause this configure script to skip all
  the questions about NI cards. If you say Y, you will be asked for
  your specific card in the following questions.

NI5010 support (EXPERIMENTAL)
CONFIG_NI5010
  If you have a network (Ethernet) card of this type, say Y and read
  the Ethernet-HOWTO, available from
  http://www.linuxdoc.org/docs.html#howto . Note that this is still
  experimental code.

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called ni5010.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt as well as
  Documentation/networking/net-modules.txt.

NI5210 support
CONFIG_NI52
  If you have a network (Ethernet) card of this type, say Y and read
  the Ethernet-HOWTO, available from
  http://www.linuxdoc.org/docs.html#howto .

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called ni52.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt as well as
  Documentation/networking/net-modules.txt.

NI6510 support
CONFIG_NI65
  If you have a network (Ethernet) card of this type, say Y and read
  the Ethernet-HOWTO, available from
  http://www.linuxdoc.org/docs.html#howto .

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called ni65.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt as well as
  Documentation/networking/net-modules.txt.

RealTek 8129 (not 8019/8029/8139!) support (EXPERIMENTAL)
CONFIG_RTL8129
  This is NOT for RTL-8139 cards.  Instead, select the 8139too driver
  (CONFIG_8139TOO).
  This is a driver for the Fast Ethernet PCI network cards based on
  the RTL8129 chip. If you have one of those, say Y and
  read the Ethernet-HOWTO, available from
  http://www.linuxdoc.org/docs.html#howto .

  Note: the 8029 is a NE2000 PCI clone, you can use the NE2K-PCI driver.

  If you want to compile this driver as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt. This is recommended.
  The module will be called rtl8129.o.

RealTek RTL-8139 PCI Fast Ethernet Adapter support
CONFIG_8139TOO
  This is a driver for the Fast Ethernet PCI network cards based on
  the RTL8139 chips. If you have one of those, say Y and read
  Documentation/networking/8139too.txt as well as the Ethernet-HOWTO,
  available from http://www.linuxdoc.org/docs.html#howto .

  If you want to compile this driver as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt. This is recommended.
  The module will be called 8139too.o.

SiS 900 PCI Fast Ethernet Adapter support
CONFIG_SIS900
  This is a driver for the Fast Ethernet PCI network cards based on
  the SiS 900 and SiS 7016 chips. The SiS 900 core is also embedded in
  SiS 630 and SiS 540 chipsets. If you have one of those, say Y and
  read the Ethernet-HOWTO, available at
  http://www.linuxdoc.org/docs.html#howto . Please read
  Documentation/networking/sis900.txt and comments at the beginning of
  drivers/net/sis900.c for more information.

  This driver also supports AMD 79C901 HomePNA so that you can use
  your phone line as a network cable.

  If you want to compile this driver as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt. This is recommended.
  The module will be called sis900.o.

Packet Engines Yellowfin Gigabit-NIC support
CONFIG_YELLOWFIN
  Say Y here if you have a Packet Engines G-NIC PCI Gigabit Ethernet
  adapter. This adapter is used by the Beowulf Linux cluster project.
  See http://cesdis.gsfc.nasa.gov/linux/drivers/yellowfin.html for
  more information about this driver in particular and Beowulf in
  general.

  If you want to compile this driver as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt. This is recommended.
  The module will be called yellowfin.o.

General Instruments Surfboard 1000
CONFIG_NET_SB1000
  This is a driver for the General Instrument (also known as
  NextLevel) SURFboard 1000 internal
  cable modem. This is an ISA card which is used by a number of cable
  TV companies to provide cable modem access. It's a one-way
  downstream-only cable modem, meaning that your upstream net link is
  provided by your regular phone modem.

  At present this driver only compiles as a module, so say M here if
  you have this card. The module will be called sb1000.o. Then read
  Documentation/networking/README.sb1000 for information on how to use
  this module, as it needs special ppp scripts for establishing a
  connection. Further documentation and the necessary scripts can be
  found at:

  http://www.jacksonville.net/~fventuri/
  http://home.adelphia.net/~siglercm/sb1000.html
  http://linuxpower.cx/~cable/

  If you don't have this card, of course say N.

Adaptec Starfire support (EXPERIMENTAL)
CONFIG_ADAPTEC_STARFIRE
  Say Y here if you have an Adaptec Starfire (or DuraLAN) PCI network
  adapter. The DuraLAN chip is used on the 64 bit PCI boards from
  Adaptec e.g. the ANA-6922A. The older 32 bit boards use the tulip
  driver.
  
  If you want to compile this driver as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt. This is recommended.
  The module will be called starfile.o.
  
Alteon AceNIC/3Com 3C985/NetGear GA620 Gigabit support
CONFIG_ACENIC
  Say Y here if you have an Alteon AceNIC, 3Com 3C985(B), NetGear
  GA620, SGI Gigabit or Farallon PN9000-SX PCI Gigabit Ethernet
  adapter. The driver allows for using the Jumbo Frame option (9000
  bytes/frame) however it requires that your switches can handle this
  as well. To enable Jumbo Frames, add `mtu 9000' to your ifconfig
  line.

  If you want to compile this driver as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt. This is recommended.
  The module will be called acenic.o.

Omit support for older Tigon I based AceNICs
CONFIG_ACENIC_OMIT_TIGON_I
  Say Y here if you only have Tigon II based AceNICs and want to leave
  out support for the older Tigon I based cards which are no longer
  being sold (ie. the original Alteon AceNIC and 3Com 3C985 (non B
  version)). This will reduce the size of the driver object by
  app. 100KB. If you are not sure whether your card is a Tigon I or a
  Tigon II, say N here.

  The safe and default value for this is N.

SysKonnect SK-98xx support
CONFIG_SK98LIN
  Say Y here if you have a SysKonnect SK-98xx Gigabit Ethernet Server
  Adapter. The following adapters are supported by this driver:
  - SK-9841 (single link 1000Base-LX)
  - SK-9842 (dual link   1000Base-LX)
  - SK-9843 (single link 1000Base-SX)
  - SK-9844 (dual link   1000Base-SX)
  - SK-9821 (single link 1000Base-T)
  - SK-9822 (dual link   1000Base-T)
  - SK-9861 (single link Volition connector)
  - SK-9862 (dual link   Volition connector)
  The driver also supports the following adapters from Allied Telesyn:
  - AT2970...

  The dual link adapters support a link-failover feature.
  Read Documentation/networking/sk98lin.txt for information about
  optional driver parameters.
  Questions concerning this driver may be addressed to:
    linux@syskonnect.de

  If you want to compile this driver as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt. This is recommended.
  The module will be called sk98lin.o.

MyriCOM Gigabit Ethernet support
CONFIG_MYRI_SBUS
  This driver supports MyriCOM Sbus gigabit ethernet cards.

  If you want to compile this driver as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt. This is recommended.
  The module will be called myri_sbus.o.

AMD LANCE and PCnet (AT1500 and NE2100) support
CONFIG_LANCE
  If you have a network (Ethernet) card of this type, say Y and read
  the Ethernet-HOWTO, available from
  http://www.linuxdoc.org/docs.html#howto . Some LinkSys cards are
  of this type.

  If you want to compile this driver as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt. This is recommended.
  The module will be called lance.o.

SGI IOC3 Ethernet
CONFIG_SGI_IOC3_ETH
  If you have a network (Ethernet) card of this type, say Y and read
  the Ethernet-HOWTO, available from
  http://www.linuxdoc.org/docs.html#howto .

3COM cards
CONFIG_NET_VENDOR_3COM
  If you have a network (Ethernet) card belonging to this class, say Y
  and read the Ethernet-HOWTO, available from
  http://www.linuxdoc.org/docs.html#howto .

  Note that the answer to this question doesn't directly affect the
  kernel: saying N will just cause this configure script to skip all
  the questions about 3COM cards. If you say Y, you will be asked for
  your specific card in the following questions.

3c501 support
CONFIG_EL1
  If you have a network (Ethernet) card of this type, say Y and read
  the Ethernet-HOWTO, available from
  http://www.linuxdoc.org/docs.html#howto . Also, consider buying a
  new card, since the 3c501 is slow, broken, and obsolete: you will
  have problems. Some people suggest to ping ("man ping") a nearby
  machine every minute ("man cron") when using this card.

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called 3c501.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt as well as
  Documentation/networking/net-modules.txt.

3c503 support
CONFIG_EL2
  If you have a network (Ethernet) card of this type, say Y and read
  the Ethernet-HOWTO, available from
  http://www.linuxdoc.org/docs.html#howto .

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called 3c503.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt as well as
  Documentation/networking/net-modules.txt.

3c505 support
CONFIG_ELPLUS
  Information about this network (Ethernet) card can be found in
  Documentation/networking/3c505.txt. If you have a card of this type,
  say Y and read the Ethernet-HOWTO, available from
  http://www.linuxdoc.org/docs.html#howto .

  If you want to compile this as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt as well as
  Documentation/networking/net-modules.txt. The module will be called
  3c505.o.

3c507 support (EXPERIMENTAL)
CONFIG_EL16
  If you have a network (Ethernet) card of this type, say Y and read
  the Ethernet-HOWTO, available from
  http://www.linuxdoc.org/docs.html#howto .

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called 3c507.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt as well as
  Documentation/networking/net-modules.txt.

3c523 support 
CONFIG_ELMC
  If you have a network (Ethernet) card of this type, say Y and read
  the Ethernet-HOWTO, available from
  http://www.linuxdoc.org/docs.html#howto .

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called 3c523.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt as well as
  Documentation/networking/net-modules.txt.

3c527 support
CONFIG_ELMC_II
  If you have a network (Ethernet) card of this type, say Y and read
  the Ethernet-HOWTO, available from
  http://www.linuxdoc.org/docs.html#howto .

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called 3c527.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt as well as
  Documentation/networking/net-modules.txt.

3c509/3c579 support
CONFIG_EL3
  If you have a network (Ethernet) card belonging to the 3Com
  EtherLinkIII series, say Y and read the Ethernet-HOWTO, available
  from http://www.linuxdoc.org/docs.html#howto .

  If your card is not working you may need to use the DOS
  setup disk to disable Plug & Play mode, and to select the default
  media type.

  If you want to compile this as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt as well as
  Documentation/networking/net-modules.txt. The module will be called
  3c509.o. 

3c515 ISA Fast EtherLink
CONFIG_3C515
  If you have a 3Com ISA EtherLink XL "Corkscrew" 3c515 Fast Ethernet
  network card, say Y and read the Ethernet-HOWTO, available from
  http://www.linuxdoc.org/docs.html#howto .

  If you want to compile this as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt as well as
  Documentation/networking/net-modules.txt. The module will be called
  3c515.o.

3c59x/3c90x/3c575_Cardbus series "Vortex/Boomerang/Cyclone" support
CONFIG_VORTEX
  This option enables driver support for a large number of 10mbps and
  10/100mbps EISA, PCI and PCMCIA 3Com network cards:

  "Vortex"    (Fast EtherLink 3c590/3c592/3c595/3c597) EISA and PCI
  "Boomerang" (EtherLink XL 3c900 or 3c905)            PCI
  "Cyclone"   (3c540/3c900/3c905/3c980/3c575/3c656)    PCI and Cardbus
  "Tornado"   (3c905)                                  PCI
  "Hurricane" (3c555/3cSOHO)                           PCI

  If you have such a card, say Y and read the Ethernet-HOWTO, available
  from http://www.linuxdoc.org/docs.html#howto . More specific
  information is in Documentation/networking/vortex.txt and in the
  comments at the beginning of drivers/net/3c59x.c.

  If you want to compile this as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt as well as
  Documentation/networking/net-modules.txt.

Other ISA cards
CONFIG_NET_ISA
  If your network (Ethernet) card hasn't been mentioned yet and its
  bus system (that's the way the cards talks to the other components
  of your computer) is ISA (as opposed to EISA, VLB or PCI), say Y.
  Make sure you know the name of your card. Read the Ethernet-HOWTO,
  available from http://www.linuxdoc.org/docs.html#howto . 

  If unsure, say Y.

  Note that the answer to this question doesn't directly affect the
  kernel: saying N will just cause this configure script to skip all
  the remaining ISA network card questions. If you say Y, you will be
  asked for your specific card in the following questions.

Generic ARCnet support
CONFIG_ARCNET
  If you have a network card of this type, say Y and check out the
  (arguably) beautiful poetry in Documentation/networking/arcnet.txt.

  You need both this driver, and the driver for the particular ARCnet
  chipset of your card. If you don't know, then it's probably a
  COM90xx type card, so say Y (or M) to "ARCnet COM90xx chipset
  support" below.

  You might also want to have a look at the Ethernet-HOWTO, available
  from http://www.linuxdoc.org/docs.html#howto (even though ARCnet
  is not really Ethernet).

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called arcnet.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt as well as
  Documentation/networking/net-modules.txt.

Enable arc0e (ARCnet "ether-encap" packet format)
CONFIG_ARCNET_ETH
  This allows you to use "Ethernet encapsulation" with your ARCnet
  card via the virtual arc0e device. You only need arc0e if you want
  to talk to nonstandard ARCnet software, specifically,
  DOS/Windows-style "NDIS" drivers. You do not need to say Y here to
  communicate with industry-standard RFC1201 implementations, like the
  arcether.com packet driver or most DOS/Windows ODI drivers. RFC1201
  is included automatically as the arc0 device. Please read the
  ARCnet documentation in Documentation/networking/arcnet.txt for more
  information about using arc0e and arc0s.

Enable old ARCNet packet format (RFC 1051)
CONFIG_ARCNET_1051
  This allows you to use RFC1051 with your ARCnet card via the virtual
  arc0s device. You only need arc0s if you want to talk to ARCnet
  software complying with the "old" standard, specifically, the DOS
  arcnet.com packet driver, Amigas running AmiTCP, and some variants
  of NetBSD. You do not need to say Y here to communicate with
  industry-standard RFC1201 implementations, like the arcether.com
  packet driver or most DOS/Windows ODI drivers. RFC1201 is included
  automatically as the arc0 device. Please read the ARCnet
  documentation in Documentation/networking/arcnet.txt for more
  information about using arc0e and arc0s.

ARCnet COM90xx (normal) chipset driver
CONFIG_ARCNET_COM90xx
  This is the chipset driver for the standard COM90xx cards. If you
  have always used the old ARCnet driver without knowing what type of
  card you had, this is probably the one for you. 

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called com90xx.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt as well as
  Documentation/networking/net-modules.txt.

ARCnet COM90xx (IO mapped) chipset driver
CONFIG_ARCNET_COM90xxIO
  This is the chipset driver for the COM90xx cards, using them in
  IO-mapped mode instead of memory-mapped mode. This is slower than
  the normal driver. Only use it if your card doesn't support shared
  memory. 

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called com90io.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt as well as
  Documentation/networking/net-modules.txt.

ARCnet COM90xx (RIM I) chipset driver
CONFIG_ARCNET_RIM_I
  This is yet another chipset driver for the COM90xx cards, but this
  time only using memory-mapped mode, and no IO ports at all. This
  driver is completely untested, so if you have one of these cards,
  please mail dwmw2@infradead.org, especially if it works!

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you
  want). The module will be called arc-rimi.o. If you want to compile
  it as a module, say M here and read Documentation/modules.txt as
  well as Documentation/networking/net-modules.txt.

ARCnet COM20020 chipset driver
CONFIG_ARCNET_COM20020
  This is the driver for the new COM20020 chipset. It supports such
  things as promiscuous mode, so packet sniffing is possible, and
  extra diagnostic information. 

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called com20020.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt as well as
  Documentation/networking/net-modules.txt.

Cabletron E21xx support
CONFIG_E2100
  If you have a network (Ethernet) card of this type, say Y and read
  the Ethernet-HOWTO, available from
  http://www.linuxdoc.org/docs.html#howto .

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called e2100.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt as well as
  Documentation/networking/net-modules.txt.

CS89x0 support
CONFIG_CS89x0
  Support for CS89x0 chipset based Ethernet cards. If you have a
  network (Ethernet) card of this type, say Y and read the
  Ethernet-HOWTO, available from
  http://www.linuxdoc.org/docs.html#howto as well as
  Documentation/networking/cs89x0.txt.

  If you want to compile this as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt as well as
  Documentation/networking/net-modules.txt. The module will be called
  cs89x.o.

DEPCA support
CONFIG_DEPCA
  If you have a network (Ethernet) card of this type, say Y and read
  the Ethernet-HOWTO, available from
  http://www.linuxdoc.org/docs.html#howto as well as
  drivers/net/depca.c.

  If you want to compile this as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt as well as
  Documentation/networking/net-modules.txt. The module will be called
  depca.o.

EtherWorks 3 support
CONFIG_EWRK3
  This driver supports the DE203, DE204 and DE205 network (Ethernet)
  cards. If this is for you, say Y and read
  Documentation/networking/ewrk3.txt in the kernel source as well as
  the Ethernet-HOWTO, available from
  http://www.linuxdoc.org/docs.html#howto .

  If you want to compile this as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt as well as
  Documentation/networking/net-modules.txt. The module will be called
  ewrk3.o.

SEEQ8005 support
CONFIG_SEEQ8005
  This is a driver for the SEEQ 8005 network (Ethernet) card. If this
  is for you, read the Ethernet-HOWTO, available from
  http://www.linuxdoc.org/docs.html#howto .

  If you want to compile this as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt as well as
  Documentation/networking/net-modules.txt. The module will be called
  ewrk3.o.

AT1700/1720 support
CONFIG_AT1700
  If you have a network (Ethernet) card of this type, say Y and read
  the Ethernet-HOWTO, available from
  http://www.linuxdoc.org/docs.html#howto .

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  If you want to compile it as a module, say M here and read
  Documentation/modules.txt as well as
  Documentation/networking/net-modules.txt. The module will be called
  at1700.o.

FMV-181/182/183/184 support
CONFIG_FMV18X
  If you have a Fujitsu FMV-181/182/183/184 network (Ethernet) card,
  say Y and read the Ethernet-HOWTO, available from
  http://www.linuxdoc.org/docs.html#howto .

  If you use an FMV-183 or FMV-184 and it is not working, you may need
  to disable Plug & Play mode of the card.

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called fmv18x.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt as well as
  Documentation/networking/net-modules.txt. 

EtherExpress PRO support
CONFIG_EEXPRESS_PRO
  If you have a network (Ethernet) card of this type, say Y. This
  driver supports intel i82595{FX,TX} based boards. Note however 
  that the EtherExpress PRO/100 Ethernet card has its own separate
  driver. Please read the Ethernet-HOWTO, available from
  http://www.linuxdoc.org/docs.html#howto .

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called eepro.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt as well as
  Documentation/networking/net-modules.txt.

EtherExpress support
CONFIG_EEXPRESS
  If you have an EtherExpress16 network (Ethernet) card, say Y and
  read the Ethernet-HOWTO, available from
  http://www.linuxdoc.org/docs.html#howto . Note that the Intel
  EtherExpress16 card used to be regarded as a very poor choice
  because the driver was very unreliable. We now have a new driver
  that should do better.

  If you want to compile this driver as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt as well as
  Documentation/networking/net-modules.txt. The module will be called
  eexpress.o.

Packet Engines Hamachi GNIC-II support
CONFIG_HAMACHI
  If you have a Gigabit Ethernet card of this type, say Y and read
  the Ethernet-HOWTO, available from
  http://www.linuxdoc.org/docs.html#howto .

  If you want to compile this as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt as well as
  Documentation/networking/net-modules.txt. The module will be called
  hamachi.o.

HP PCLAN+ (27247B and 27252A) support
CONFIG_HPLAN_PLUS
  If you have a network (Ethernet) card of this type, say Y and read
  the Ethernet-HOWTO, available from
  http://www.linuxdoc.org/docs.html#howto .

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called hp-plus.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt as well as
  Documentation/networking/net-modules.txt.

HP PCLAN (27245 and other 27xxx series) support
CONFIG_HPLAN
  If you have a network (Ethernet) card of this type, say Y and read
  the Ethernet-HOWTO, available from
  http://www.linuxdoc.org/docs.html#howto .

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called hp.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt as well as
  Documentation/networking/net-modules.txt.

HP 10/100VG PCLAN (ISA, EISA, PCI) support
CONFIG_HP100
  If you have a network (Ethernet) card of this type, say Y and read
  the Ethernet-HOWTO, available from
  http://www.linuxdoc.org/docs.html#howto .

  If you want to compile this as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt as well as
  Documentation/networking/net-modules.txt. The module will be called
  hp100.o.

NE2000/NE1000 support
CONFIG_NE2000
  If you have a network (Ethernet) card of this type, say Y and read
  the Ethernet-HOWTO, available from
  http://www.linuxdoc.org/docs.html#howto . Many Ethernet cards
  without a specific driver are compatible with NE2000.

  If you have a PCI NE2000 card however, say N here and Y to "PCI
  NE2000 support", above. If you have a NE2000 card and are running on
  an MCA system (a bus system used on some IBM PS/2 computers and
  laptops), say N here and Y to "NE/2 (ne2000 MCA version) support",
  below.

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called ne.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt as well as
  Documentation/networking/net-modules.txt.

National Semiconductor DP83810 series PCI Ethernet support
CONFIG_NATSEMI
  This driver is for the National Semiconductor DP83810 series,
  including the 83815 chip.
  More specific information and updates are available from 
  http://www.scyld.com/network/natsemi.html

SK_G16 support
CONFIG_SK_G16
  If you have a network (Ethernet) card of this type, say Y and read
  the Ethernet-HOWTO, available from
  http://www.linuxdoc.org/docs.html#howto .

NE/2 (ne2000 MCA version) support
CONFIG_NE2_MCA
  If you have a network (Ethernet) card of this type, say Y and read
  the Ethernet-HOWTO, available from
  http://www.linuxdoc.org/docs.html#howto .

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called ne2.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt as well as
  Documentation/networking/net-modules.txt.

SKnet MCA support
CONFIG_SKMC
  These are Micro Channel ethernet adapters. You need to say Y to "MCA
  support" in order to use this driver. Supported cards are the SKnet
  Junior MC2 and the SKnet MC2(+). The driver automatically
  distinguishes between the two cards. Note that using multiple boards
  of different type hasn't been tested with this driver. Say Y if you
  have one of these ethernet adapters.

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module is called sk_mca.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt as well as
  Documentation/networking/net-modules.txt.

IBM LAN Adapter/A support
CONFIG_IBMLANA
  This is a Micro Channel ethernet adapter.  You need to set CONFIG_MCA
  to use this driver.  It is both available as an in-kernel driver and
  as a module ( = code which can be inserted in and removed from the
  running kernel whenever you want). If you want to compile it as a module,
  say M here and read Documentation/modules.txt as well as
  Documentation/networking/net-modules.txt. If you plan to use more than
  one network card under linux, read the Multiple-Ethernet-mini-HOWTO,
  available from sunsite.unc.edu:/pub/Linux/docs/HOWTO/mini.  The only
  currently supported card is the IBM LAN Adapter/A for Ethernet.  It will
  both support 16K and 32K memory windows, however a 32K window gives
  a better security against packet losses.  Usage of multiple boards with
  this driver should be possible, but has not been tested up to now due
  to lack of hardware.

EISA, VLB, PCI and on board controllers
CONFIG_NET_PCI
  This is another class of network cards which attach directly to the
  bus. If you have one of those, say Y and read the Ethernet-HOWTO,
  available from http://www.linuxdoc.org/docs.html#howto .

  Note that the answer to this question doesn't directly affect the
  kernel: saying N will just cause this configure script to skip all
  the questions about this class of network cards. If you say Y, you
  will be asked for your specific card in the following questions. If
  you are unsure, say Y.

AMD PCnet32 (VLB and PCI) support
CONFIG_PCNET32
  If you have a PCnet32 or PCnetPCI based network (Ethernet) card,
  answer Y here and read the Ethernet-HOWTO, available from
  http://www.linuxdoc.org/docs.html#howto .

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called pcnet32.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt as well as
  Documentation/networking/net-modules.txt.

Ansel Communications EISA 3200 support
CONFIG_AC3200
  If you have a network (Ethernet) card of this type, say Y and read
  the Ethernet-HOWTO, available from
  http://www.linuxdoc.org/docs.html#howto .

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called ac3200.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt as well as
  Documentation/networking/net-modules.txt.

Mylex EISA LNE390A/LNE390B support (EXPERIMENTAL)
CONFIG_LNE390
  If you have a network (Ethernet) card of this type, say Y and read
  the Ethernet-HOWTO, available from
  http://www.linuxdoc.org/docs.html#howto .

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called lne390.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt as well as
  Documentation/networking/net-modules.txt.

Novell/Eagle/Microdyne NE3210 EISA support
CONFIG_NE3210
  If you have a network (Ethernet) card of this type, say Y and read
  the Ethernet-HOWTO, available from
  http://www.linuxdoc.org/docs.html#howto . Note that this driver
  will NOT WORK for NE3200 cards as they are completely different.

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called ne3210.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt as well as
  Documentation/networking/net-modules.txt.

Apricot Xen-II on board Ethernet
CONFIG_APRICOT
  If you have a network (Ethernet) controller of this type, say Y and
  read the Ethernet-HOWTO, available from
  http://www.linuxdoc.org/docs.html#howto .

  If you want to compile this as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt as well as
  Documentation/networking/net-modules.txt. The module will be called
  apricot.o.

Generic DECchip & DIGITAL EtherWORKS PCI/EISA
CONFIG_DE4X5
  This is support for the DIGITAL series of PCI/EISA Ethernet cards.
  These include the DE425, DE434, DE435, DE450 and DE500 models. If
  you have a network card of this type, say Y and read the
  Ethernet-HOWTO, available from
  http://www.linuxdoc.org/docs.html#howto . More specific
  information is contained in Documentation/networking/de4x5.txt.

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called de4x5.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt as well as
  Documentation/networking/net-modules.txt.

DECchip Tulip (dc21x4x) PCI support
CONFIG_TULIP
  This driver is developed for the SMC EtherPower series Ethernet
  cards and also works with cards based on the DECchip
  21040/21041/21140 (Tulip series) chips. Some LinkSys PCI cards are
  of this type. (If your card is NOT SMC EtherPower 10/100 PCI
  (smc9332dst), you can also try the driver for "Generic DECchip"
  cards, above. However, most people with a network card of this type
  will say Y here.) Do read the Ethernet-HOWTO, available from
  http://www.linuxdoc.org/docs.html#howto . More specific
  information is contained in Documentation/networking/tulip.txt.

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called tulip.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt as well as
  Documentation/networking/net-modules.txt.

Digi Intl. RightSwitch support
CONFIG_DGRS
  This is support for the Digi International RightSwitch series of
  PCI/EISA Ethernet switch cards. These include the SE-4 and the SE-6
  models. If you have a network card of this type, say Y and read the
  Ethernet-HOWTO, available from
  http://www.linuxdoc.org/docs.html#howto . More specific
  information is contained in Documentation/networking/dgrs.txt.

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called dgrs.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt as well as
  Documentation/networking/net-modules.txt.

EtherExpress PRO/100 support
CONFIG_EEPRO100
  If you have an Intel EtherExpress PRO/100 PCI network (Ethernet)
  card, say Y and read the Ethernet-HOWTO, available from
  http://www.linuxdoc.org/docs.html#howto .

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called eepro100.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt as well as
  Documentation/networking/net-modules.txt.

Enable Power Management (EXPERIMENTAL)
CONFIG_EEPRO100_PM
  Many Intel EtherExpress PRO/100 PCI network cards are capable
  of providing power management capabilities.  To make use of these
  capabilities, say Y.

  WARNING:  This option is intended for kernel developers and testers.
  It is still very experimental, with some people reporting complete
  lockups.

  It is recommended to say N here.

ICL EtherTeam 16i/32 support (EXPERIMENTAL)
CONFIG_ETH16I
  If you have a network (Ethernet) card of this type, say Y and read
  the Ethernet-HOWTO, available from
  http://www.linuxdoc.org/docs.html#howto .

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called eth16i.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt as well as
  Documentation/networking/net-modules.txt.

TI ThunderLAN support (EXPERIMENTAL)
CONFIG_TLAN
  If you have a PCI Ethernet network card based on the ThunderLAN chip
  which is supported by this driver, say Y and read the
  Ethernet-HOWTO, available from
  http://www.linuxdoc.org/docs.html#howto .

  Devices currently supported by this driver are Compaq Netelligent,
  Compaq NetFlex and Olicom cards. Please read the file
  Documentation/networking/tlan.txt for more details.

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called tlan.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt as well as
  Documentation/networking/net-modules.txt.

  Please email feedback to  torben.mathiasen@compaq.com.

VIA Rhine support
CONFIG_VIA_RHINE
  If you have a VIA "rhine" based network card (Rhine-I (3043) or
  Rhine-2 (VT86c100A)), say Y here.

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called via-rhine.o. If you want to compile it as
  a module, say M here and read Documentation/modules.txt as well as
  Documentation/networking/net-modules.txt.

PCI DM9102(A)/DM9132/DM9801 support 
CONFIG_DM9102
  This driver is for DM9102(A)/DM9132/DM9801 compatible PCI cards from
  Davicom ( http://www.davicom.com.tw ). If you have such a network
  (Ethernet) card, say Y. Some information is contained in the file 
  Documentation/networking/dmfe.txt.
 
  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called dmfe.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt as well as
  Documentation/networking/net-modules.txt.

Racal-Interlan EISA ES3210 support (EXPERIMENTAL)
CONFIG_ES3210
  If you have a network (Ethernet) card of this type, say Y and read
  the Ethernet-HOWTO, available from
  http://www.linuxdoc.org/docs.html#howto .

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called es3210.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt as well as
  Documentation/networking/net-modules.txt.

SMC EtherPower II
CONFIG_EPIC100
  This driver is for the SMC EtherPower II 9432 PCI Ethernet NIC,
  which is based on the SMC83c17x (EPIC/100).
  More specific information and updates are available from
  http://www.scyld.com/network/epic100.html

SGI Seeq ethernet controller support
CONFIG_SGISEEQ
  Say Y here if you have an Seeq based Ethernet network card. This is
  used in many Silicon Graphics machines.

Sundance "Alta" PCI Ethernet support
CONFIG_SUNDANCE
  This driver is for the Sundance "Alta" chip.
  More specific information and updates are available from
  http://www.scyld.com/network/sundance.html

Winbond W89c840 PCI Ethernet support
CONFIG_WINBOND_840
  This driver is for the Winbond W89c840 chip.  It also works with
  the TX9882 chip on the Compex RL100-ATX board.
  More specific information and updates are available from
  http://www.scyld.com/network/drivers.html

Zenith Z-Note support (EXPERIMENTAL)
CONFIG_ZNET
  The Zenith Z-Note notebook computer has a built-in network
  (Ethernet) card, and this is the Linux driver for it. Note that the
  IBM Thinkpad 300 is compatible with the Z-Note and is also supported
  by this driver. Read the Ethernet-HOWTO, available from
  http://www.linuxdoc.org/docs.html#howto .

Pocket and portable adapters
CONFIG_NET_POCKET
  Cute little network (Ethernet) devices which attach to the parallel
  port ("pocket adapters"), commonly used with laptops. If you have
  one of those, say Y and read the Ethernet-HOWTO, available from
  http://www.linuxdoc.org/docs.html#howto .

  If you want to plug a network (or some other) card into the PCMCIA
  (or PC-card) slot of your laptop instead (PCMCIA is the standard for
  credit card size extension cards used by all modern laptops), you
  need the pcmcia-cs package (location contained in the file
  Documentation/Changes) and you can say N here.

  Laptop users should read the Linux Laptop home page at
  http://www.cs.utexas.edu/users/kharker/linux-laptop/ .

  Note that the answer to this question doesn't directly affect the
  kernel: saying N will just cause this configure script to skip all
  the questions about this class of network devices. If you say Y, you
  will be asked for your specific device in the following questions.

AT-LAN-TEC/RealTek pocket adapter support
CONFIG_ATP
  This is a network (Ethernet) device which attaches to your parallel
  port. Read drivers/net/atp.c as well as the Ethernet-HOWTO,
  available from http://www.linuxdoc.org/docs.html#howto , if you
  want to use this. If you intend to use this driver, you should have
  said N to the "Parallel printer support", because the two drivers
  don't like each other.

  If you want to compile this driver as a module however ( = code
  which can be inserted in and removed from the running kernel
  whenever you want), say M here and read Documentation/modules.txt.
  The module will be called atp.o.

D-Link DE600 pocket adapter support
CONFIG_DE600
  This is a network (Ethernet) device which attaches to your parallel
  port. Read Documentation/networking/DLINK.txt as well as the
  Ethernet-HOWTO, available from
  http://www.linuxdoc.org/docs.html#howto , if you want to use
  this. It is possible to have several devices share a single parallel
  port and it is safe to compile the corresponding drivers into the
  kernel.

  If you want to compile this driver as a module however ( = code
  which can be inserted in and removed from the running kernel
  whenever you want), say M here and read Documentation/modules.txt.
  The module will be called de600.o.

D-Link DE620 pocket adapter support
CONFIG_DE620
  This is a network (Ethernet) device which attaches to your parallel
  port. Read Documentation/networking/DLINK.txt as well as the
  Ethernet-HOWTO, available from
  http://www.linuxdoc.org/docs.html#howto , if you want to use
  this. It is possible to have several devices share a single parallel
  port and it is safe to compile the corresponding drivers into the
  kernel.

  If you want to compile this driver as a module however ( = code
  which can be inserted in and removed from the running kernel
  whenever you want), say M here and read Documentation/modules.txt.
  The module will be called de620.o.

Token Ring driver support
CONFIG_TR
  Token Ring is IBM's way of communication on a local network; the
  rest of the world uses Ethernet. To participate on a Token Ring
  network, you need a special Token ring network card. If you are
  connected to such a Token Ring network and want to use your Token
  Ring card under Linux, say Y here and to the driver for your
  particular card below and read the Token-Ring mini-HOWTO, available
  from http://www.linuxdoc.org/docs.html#howto . Most people can
  say N here.

IBM Tropic chipset based adapter support
CONFIG_IBMTR
  This is support for all IBM Token Ring cards that don't use DMA. If
  you have such a beast, say Y and read the Token-Ring mini-HOWTO,
  available from http://www.linuxdoc.org/docs.html#howto .

  Warning: this driver will almost definitely fail if more than one
  active Token Ring card is present. 

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called ibmtr.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt.

IBM Olympic chipset PCI adapter support
CONFIG_IBMOL
  This is support for all non-Lanstreamer IBM PCI Token Ring Cards. 
  Specifically this is all IBM PCI, PCI Wake On Lan, PCI II, PCI II
  Wake On Lan, and PCI 100/16/4 adapters.

  If you have such an adapter, say Y and read the Token-Ring
  mini-HOWTO, available from
  http://www.linuxdoc.org/docs.html#howto .

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will will be called olympic.o. If you want to compile it
  as a module, say M here and read Documentation/modules.txt.

  Also read the file Documentation/networking/olympic.txt or check the
  Linux Token Ring Project site for the latest information at
  http://www.linuxtr.net .

IBM Lanstreamer chipset PCI adapter support
CONFIG_IBMLS
  This is support for IBM Lanstreamer PCI Token Ring Cards.

  If you have such an adapter, say Y and read the Token-Ring
  mini-HOWTO available via FTP (user:anonymous) from
  ftp://metalab.unc/edu/pub/Linux/docs/HOWTO.

  This driver is also available as a modules ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The modules will be called lanstreamer.o. If you want to compile it
  as a module, say M here and read Documentation/modules.txt.

Generic TMS380 Token Ring ISA/PCI/MCA/EISA adapter support
CONFIG_TMS380TR
  This driver provides generic support for token ring adapters
  based on the Texas Instruments TMS380 series chipsets.  This
  includes the SysKonnect TR4/16(+) ISA (SK-4190), SysKonnect
  TR4/16(+) PCI (SK-4590), SysKonnect TR4/16 PCI (SK-4591),
  Compaq 4/16 PCI, Thomas-Conrad TC4048 4/16 PCI, and several
  Madge adapters.  If you say Y here, you will be asked to select
  which cards to support below.  If you're using modules, each
  class of card will be supported by a separate module.

  If you have such an adapter and would like to use it, say Y and
  read the Token-Ring mini-HOWTO, available from
  http://www.linuxdoc.org/docs.html#howto .

  Also read the file Documentation/networking/tms380tr.txt or
  check http://www.auk.cx/tms380tr/ .

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will will be called tms380tr.o. If you want to compile it
  as a module, say M here and read Documentation/modules.txt.

Generic TMS380 PCI support
CONFIG_TMSPCI
  This tms380 module supports generic TMS380-based PCI cards.

  These cards are known to work:
     - Compaq 4/16 TR PCI
     - SysKonnect TR4/16 PCI (SK-4590/SK-4591)
     - Thomas-Conrad TC4048 PCI 4/16
     - 3Com Token Link Velocity

  This driver is available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will will be called tmspci.o. If you want to compile it
  as a module, say M here and read Documentation/modules.txt.

Madge Smart 16/4 PCI Mk2 support
CONFIG_ABYSS
  This tms380 module supports the Madge Smart 16/4 PCI Mk2 
  cards (51-02).

  This driver is available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will will be called abyss.o. If you want to compile it
  as a module, say M here and read Documentation/modules.txt.

Madge Smart 16/4 Ringode MicroChannel 
CONFIG_MADGEMC
  This tms380 module supports the Madge Smart 16/4 MC16 and MC32
  MicroChannel adapters.

  This driver is available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will will be called madgemc.o. If you want to compile it
  as a module, say M here and read Documentation/modules.txt.

SMC ISA TokenRing adapter support
CONFIG_SMCTR
  This is support for the ISA and MCA SMC Token Ring cards,
  specifically SMC TokenCard Elite (8115T) and SMC TokenCard Elite/A
  (8115T/A) adapters.

  If you have such an adapter and would like to use it, say Y or M and
  read the Token-Ring mini-HOWTO, available from
  http://www.linuxdoc.org/docs.html#howto and the file
  Documentation/networking/smctr.txt.

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will will be called smctr.o. If you want to compile it
  as a module, say M here and read Documentation/modules.txt.

Sun Happy Meal 10/100baseT support
CONFIG_HAPPYMEAL
  This driver supports the "hme" interface present on most Ultra
  systems and as an option on older Sbus systems. This driver supports
  both PCI and Sbus devices. This driver also supports the "qfe" quad
  100baseT device available in both PCI and Sbus configurations.

  This support is also available as a module called sunhme.o ( = code
  which can be inserted in and removed from the running kernel
  whenever you want). If you want to compile it as a module, say M
  here and read Documentation/modules.txt.

Sun Lance support
CONFIG_SUNLANCE
  This driver supports the "le" interface present on all 32-bit Sparc
  systems, on some older Ultra systems and as an Sbus option.

  This support is also available as a module called sunlance.o ( =
  code which can be inserted in and removed from the running kernel
  whenever you want). If you want to compile it as a module, say M
  here and read Documentation/modules.txt.

Sun BigMAC 10/100baseT support (EXPERIMENTAL)
CONFIG_SUNBMAC
  This driver supports the "be" interface available as an Sbus option.
  This is Sun's older 100baseT ethernet device.

  This support is also available as a module called sunbmac.o ( = code
  which can be inserted in and removed from the running kernel
  whenever you want). If you want to compile it as a module, say M
  here and read Documentation/modules.txt.

Sun QuadEthernet support
CONFIG_SUNQE
  This driver supports the "qe" 10baseT ethernet device, available as
  an Sbus option. Note that this is not the same as Quad FastEthernet
  "qfe" which is supported by the Happy Meal driver instead.

  This support is also available as a module called sunqe.o ( = code
  which can be inserted in and removed from the running kernel
  whenever you want). If you want to compile it as a module, say M
  here and read Documentation/modules.txt.

Traffic Shaper (EXPERIMENTAL)
CONFIG_SHAPER
  The traffic shaper is a virtual network device that allows you to
  limit the rate of outgoing data flow over some other network device.
  The traffic that you want to slow down can then be routed through
  these virtual devices. See Documentation/networking/shaper.txt for
  more information.

  An alternative to this traffic shaper is the experimental
  Class-Based Queueing (CBQ) scheduling support which you get if you
  say Y to "QoS and/or fair queueing" above.

  To set up and configure shaper devices, you need the shapecfg
  program, available from ftp://shadow.cabi.net/pub/Linux in the
  shaper package.

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called shaper.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt. If unsure,
  say N.

FDDI driver support
CONFIG_FDDI
  Fiber Distributed Data Interface is a high speed local area network
  design; essentially a replacement for high speed Ethernet. FDDI can
  run over copper or fiber. If you are connected to such a network and
  want a driver for the FDDI card in your computer, say Y here (and
  then also Y to the driver for your FDDI card, below). Most people
  will say N.

Digital DEFEA and DEFPA adapter support
CONFIG_DEFXX
  This is support for the DIGITAL series of EISA (DEFEA) and PCI
  (DEFPA) controllers which can connect you to a local FDDI network.

SysKonnect FDDI PCI support
CONFIG_SKFP
  Say Y here if you have a SysKonnect FDDI PCI adapter.
  The following adapters are supported by this driver:
  - SK-5521 (SK-NET FDDI-UP)
  - SK-5522 (SK-NET FDDI-UP DAS)
  - SK-5541 (SK-NET FDDI-FP)
  - SK-5543 (SK-NET FDDI-LP)
  - SK-5544 (SK-NET FDDI-LP DAS)
  - SK-5821 (SK-NET FDDI-UP64)
  - SK-5822 (SK-NET FDDI-UP64 DAS)
  - SK-5841 (SK-NET FDDI-FP64)
  - SK-5843 (SK-NET FDDI-LP64)
  - SK-5844 (SK-NET FDDI-LP64 DAS)
  - Netelligent 100 FDDI DAS Fibre SC
  - Netelligent 100 FDDI SAS Fibre SC
  - Netelligent 100 FDDI DAS UTP
  - Netelligent 100 FDDI SAS UTP
  - Netelligent 100 FDDI SAS Fibre MIC
  
  Read Documentation/networking/skfp.txt for information about
  the driver.

  Questions concerning this driver can be addressed to:
    linux@syskonnect.de

  If you want to compile this driver as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt. This is recommended.
  The module will be called skfp.o.

HIgh Performance Parallel Interface support (EXPERIMENTAL)
CONFIG_HIPPI
  HIgh Performance Parallel Interface (HIPPI) is a 800Mbit/sec and
  1600Mbit/sec dual-simplex switched or point-to-point network. HIPPI
  can run over copper (25m) or fiber (300m on multi-mode or 10km on
  single-mode). HIPPI networks are commonly used for clusters and to
  connect to super computers. If you are connected to a HIPPI network
  and have a HIPPI network card in your computer that you want to use
  under Linux, say Y here (you must also remember to enable the driver
  for your HIPPI card below). Most people will say N here.
  
Essential RoadRunner HIPPI PCI adapter support
CONFIG_ROADRUNNER
  Say Y here if this is your PCI HIPPI network card.

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called rrunner.o. If you want to compile it as
  a module, say M here and read Documentation/modules.txt. If unsure,
  say N.

Use large TX/RX rings
CONFIG_ROADRUNNER_LARGE_RINGS
  If you say Y here, the RoadRunner driver will preallocate up to 2 MB
  of additional memory to allow for fastest operation, both for
  transmitting and receiving. This memory cannot be used by any other
  kernel code or by user space programs. Say Y here only if you have
  the memory.

Acorn Ether1 card
CONFIG_ARM_ETHER1
  If you have an Acorn system with one of these (AKA25) network cards,
  you should say Y to this option if you wish to use it with Linux.

Acorn/ANT Ether3 card
CONFIG_ARM_ETHER3
  If you have an Acorn system with one of these network cards, you
  should say Y to this option if you wish to use it with Linux.

I Cubed EtherH card
CONFIG_ARM_ETHERH
  If you have an Acorn system with one of these network cards, you
  should say Y to this option if you wish to use it with Linux.

EBSA-110 Ethernet interface
CONFIG_ARM_AM79C961A
  If you wish to compile a kernel for the EBSA-110, then you should
  always answer Y to this.

Support CDROM drives that are not SCSI or IDE/ATAPI
CONFIG_CD_NO_IDESCSI
  If you have a CDROM drive that is neither SCSI nor IDE/ATAPI, say Y
  here, otherwise N. Read the CDROM-HOWTO, available from
  http://www.linuxdoc.org/docs.html#howto .

  Note that the answer to this question doesn't directly affect the
  kernel: saying N will just cause this configure script to skip all
  the questions about these CDROM drives. If you are unsure what you
  have, say Y and find out whether you have one of the following
  drives. 

  For each of these drivers, a file Documentation/cdrom/<driver_name>
  exists. Especially in cases where you do not know exactly which kind
  of drive you have you should read there. Most of these drivers use a
  file drivers/cdrom/<driver_name>.h where you can define your
  interface parameters and switch some internal goodies. 

  All these CDROM drivers are also usable as a module ( = code which
  can be inserted in and removed from the running kernel whenever you
  want). If you want to compile them as module, say M instead of Y and
  read Documentation/modules.txt. 

  If you want to use any of these CDROM drivers, you also have to
  answer Y or M to "ISO 9660 CDROM file system support" below (this
  answer will get "defaulted" for you if you enable any of the Linux
  CDROM drivers).

Sony CDU31A/CDU33A CDROM support
CONFIG_CDU31A
  These CDROM drives have a spring-pop-out caddyless drawer, and a
  rectangular green LED centered beneath it. NOTE: these CDROM drives
  will not be auto detected by the kernel at boot time; you have to
  provide the interface address as an option to the kernel at boot
  time as described in Documentation/cdrom/cdu31a or fill in your
  parameters into drivers/cdrom/cdu31a.c. Try "man bootparam" or
  see the documentation of your boot loader (lilo or loadlin) about
  how to pass options to the kernel.

  If you say Y here, you should also say Y or M to "ISO 9660 CDROM
  file system support" below, because that's the file system used on
  CDROMs. 

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called cdu31a.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt.

Standard Mitsumi [no XA/Multisession] CDROM support
CONFIG_MCD
  This is the older of the two drivers for the older Mitsumi models
  LU-005, FX-001 and FX-001D. This is not the right driver for the
  FX-001DE and the triple or quad speed models (all these are
  IDE/ATAPI models). Please also the file Documentation/cdrom/mcd.

  With the old LU-005 model, the whole drive chassis slides out for cd
  insertion. The FX-xxx models use a motorized tray type mechanism.
  Note that this driver does not support XA or MultiSession CDs
  (PhotoCDs). There is a new driver (next question) which can do
  this. If you want that one, say N here.

  If you say Y here, you should also say Y or M to "ISO 9660 CDROM
  file system support" below, because that's the file system used on
  CDROMs. 

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called mcd.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt.

IRQ channel for Mitsumi CD-ROM
CONFIG_MCD_IRQ
  This allows you to specify the default value of the IRQ used by the
  driver. This setting can be overridden by passing the "mcd="
  parameter to the kernel at boot time (or at module load time if you
  said M to "Standard Mitsumi CDROM support").

I/O base address for Mitsumi CD-ROM
CONFIG_MCD_BASE
  This allows you to specify the default value of the I/O base address
  used by the driver. This setting can be overridden by passing the
  "mcd=" parameter to the kernel at boot time (or at module load time
  if you said M to "Standard Mitsumi CDROM support").

Mitsumi [XA/MultiSession] support
CONFIG_MCDX
  Use this driver if you want to be able to read XA or MultiSession
  CDs (PhotoCDs) as well as ordinary CDs with your Mitsumi LU-005,
  FX-001 or FX-001D CDROM drive. In addition, this driver uses much
  less kernel memory than the old one, if that is a concern. This
  driver is able to support more than one drive, but each drive needs
  a separate interface card. Please read the file
  Documentation/cdrom/mcdx.

  If you say Y here, you should also say Y or M to "ISO 9660 CDROM
  file system support" below, because that's the file system used on
  CDROMs. 

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called mcdx.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt.

Matsushita/Panasonic/Creative, Longshine, TEAC CDROM support
CONFIG_SBPCD
  This driver supports most of the drives which use the Panasonic or
  Sound Blaster interface. Please read the file
  Documentation/cdrom/sbpcd.

  The Matsushita CR-521, CR-522, CR-523, CR-562, CR-563 drives
  (sometimes labeled "Creative"), the Creative Labs CD200, the
  Longshine LCS-7260, the "IBM External ISA CDROM" (in fact a CR-56x
  model), the TEAC CD-55A fall under this category. Some other
  "electrically compatible" drives (Vertos, Genoa, some Funai models)
  are currently not supported; for the Sanyo H94A drive currently a
  separate driver (asked later) is responsible. Most drives have a
  uniquely shaped faceplate, with a caddyless motorized drawer, but
  without external brand markings. The older CR-52x drives have a
  caddy and manual loading/eject, but still no external markings. The
  driver is able to do an extended auto-probing for interface
  addresses and drive types; this can help to find facts in cases you
  are not sure, but can consume some time during the boot process if
  none of the supported drives gets found. Once your drive got found,
  you should enter the reported parameters into drivers/cdrom/sbpcd.h
  and set "DISTRIBUTION 0" there.

  This driver can support up to four CDROM controller cards, and each
  card can support up to four CDROM drives; if you say Y here, you
  will be asked how many controller cards you have. If compiled as a
  module, only one controller card (but with up to four drives) is
  usable.

  If you say Y here, you should also say Y or M to "ISO 9660 CDROM
  file system support" below, because that's the file system used on
  CDROMs. 

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called sbpcd.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt.

Matsushita/Panasonic, ... second CDROM controller support
CONFIG_SBPCD2
  Say Y here only if you have two CDROM controller cards of this type
  (usually only if you have more than four drives). You should enter
  the parameters for the second, third and fourth interface card into
  include/linux/sbpcd.h before compiling the new kernel. Read
  the file Documentation/cdrom/sbpcd.

Aztech/Orchid/Okano/Wearnes/TXC/CyDROM CDROM support
CONFIG_AZTCD
  This is your driver if you have an Aztech CDA268-01A, Orchid
  CD-3110, Okano or Wearnes CDD110, Conrad TXC, or CyCDROM CR520 or
  CR540 CDROM drive. This driver -- just like all these CDROM drivers
  -- is NOT for CDROM drives with IDE/ATAPI interfaces, such as Aztech
  CDA269-031SE. Please read the file Documentation/cdrom/aztcd. 

  If you say Y here, you should also say Y or M to "ISO 9660 CDROM
  file system support" below, because that's the file system used on
  CDROMs.

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called aztcd.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt.

Sony CDU535 CDROM support
CONFIG_CDU535
  This is the driver for the older Sony CDU-535 and CDU-531 CDROM
  drives. Please read the file Documentation/cdrom/sonycd535.

  If you say Y here, you should also say Y or M to "ISO 9660 CDROM
  file system support" below, because that's the file system used on
  CDROMs.

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called sonycd535.o. If you want to compile it as
  a module, say M here and read Documentation/modules.txt.

Goldstar R420 CDROM support
CONFIG_GSCD
  If this is your CDROM drive, say Y here. As described in the file
  Documentation/cdrom/gscd, you might have to change a setting
  in the file drivers/cdrom/gscd.h before compiling the
  kernel. Please read the file Documentation/cdrom/gscd. 

  If you say Y here, you should also say Y or M to "ISO 9660 CDROM
  file system support" below, because that's the file system used on
  CDROMs. 

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called gscd.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt.

Philips/LMS CM206 CDROM support
CONFIG_CM206
  If you have a Philips/LMS CDROM drive cm206 in combination with a
  cm260 host adapter card, say Y here. Please also read the file
  Documentation/cdrom/cm206. 

  If you say Y here, you should also say Y or M to "ISO 9660 CDROM
  file system support" below, because that's the file system used on
  CDROMs. 

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called cm206.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt.

Optics Storage DOLPHIN 8000AT CDROM support
CONFIG_OPTCD
  This is the driver for the 'DOLPHIN' drive with a 34-pin Sony
  compatible interface. It also works with the Lasermate CR328A. If
  you have one of those, say Y. This driver does not work for the
  Optics Storage 8001 drive; use the IDE-ATAPI CDROM driver for that
  one. Please read the file Documentation/cdrom/optcd. 

  If you say Y here, you should also say Y or M to "ISO 9660 CDROM
  file system support" below, because that's the file system used on
  CDROMs. 

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called optcd.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt.

Sanyo CDR-H94A CDROM support
CONFIG_SJCD
  If this is your CDROM drive, say Y here and read the file
  Documentation/cdrom/sjcd. You should then also say Y or M to
  "ISO 9660 CDROM file system support" below, because that's the
  file system used on CDROMs.

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called sjcd.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt.

ISP16/MAD16/Mozart soft configurable cdrom interface support
CONFIG_ISP16_CDI
  These are sound cards with built-in cdrom interfaces using the OPTi
  82C928 or 82C929 chips. Say Y here to have them detected and
  possibly configured at boot time. In addition, You'll have to say Y
  to a driver for the particular cdrom drive you have attached to the
  card. Read Documentation/cdrom/isp16 for details.

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called isp16.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt.

Quota support
CONFIG_QUOTA
  If you say Y here, you will be able to set per user limits for disk
  usage (also called disk quotas). Currently, it works only for the
  ext2 file system. You need additional software in order to use quota
  support; for details, read the Quota mini-HOWTO, available from
  http://www.linuxdoc.org/docs.html#howto . Probably the quota
  support is only useful for multi user systems. If unsure, say N.

Memory Technology Device (MTD) support
CONFIG_MTD
  Memory Technology Devices are flash, RAM and similar chips, often
  used for solid state filesystems on embedded devices. This option
  will provide the generic support for MTD drivers to register
  themselves with the kernel and for potential users of MTD devices
  to enumerate the devices which are present and obtain a handle on
  them. It will also allow you to select individual drivers for 
  particular hardware and users of MTD device. If unsure, say N.

M-Systems Disk-On-Chip 1000 support
CONFIG_MTD_DOC1000
  This provides an MTD device driver for the M-Systems DiskOnChip
  1000 devices, which are obsolete so you probably want to say 'N'.

M-Systems Disk-On-Chip 2000 support
CONFIG_MTD_DOC2000
  This provides an MTD device driver for the M-Systems DiskOnChip
  2000 devices. If you use this, you probably also want the NFTL
  'NAND Flash Translation Layer' below, which is used to emulate
  a block device by using a kind of filesystem on the flash chips.

M-Systems Disk-On-Chip Millennium support
CONFIG_MTD_DOC2001
  This provides an MTD device driver for the M-Systems DiskOnChip
  Millennium devices. If you use this, you probably also want the
  NFTL 'NAND Flash Translation Layer' below, which is used to emulate
  a block device by using a kind of filesystem on the flash chips.

Use extra onboard system memory as MTD device
CONFIG_MTD_SLRAM
  If your CPU cannot cache all of the physical memory in your machine,
  you can still use it for storage or swap by using this driver to
  present it to the system as a Memory Technology Device.

Ramix PMC551 PCI Mezzanine ram card support
CONFIG_MTD_PMC551
  This provides an MTD device driver for the Ramix PMC551 RAM card.
  If you have one, you probably want to enable this.

PMC551 256M DRAM Bugfix.
CONFIG_MTD_PMC551_BUGFIX
  Some PMC551 boards hacve invalid column and row mux values. This 
  option will fix them, but will break other memory configurations.

Debugging RAM test driver
CONFIG_MTD_MTDRAM
  This enables a test MTD device driver which uses vmalloc() to 
  provide storage. You probably want to say 'N' unless you're 
  testing stuff, or unless you want to use it in place of a ramdisk
  when I've eventually got round to making the CONFIG_BLK_DEV option
  and you've turned it off.

Common Flash Interface (CFI) support
CONFIG_MTD_CFI
  Intel's Common Flash Interface specification provides a universal
  method for probing the capabilities of flash devices. If you wish
  to support any device which uses CFI-compliant devices, you need
  to enable this option.

CFI support for Intel/Sharp Extended Command Set chips
CONFIG_MTD_CFI_INTELEXT
  The Common Flash Interface defines a number of different command
  sets which a CFI-compliant chip may claim to implement. This code
  provides support for one of those command sets, used on Intel
  Strataflash and other parts.

Flash chip mapping in physical memory
CONFIG_MTD_PHYSMAP
  This provides a 'mapping' driver which allows the CFI probe and
  command set driver code to communicate with flash chips which 
  are mapped physically into the CPU's memory. You will need to
  configure the physical address and size of the flash chips on
  your particular board.

Physical start location of flash chip mapping
CONFIG_MTD_PHYSMAP_START
  This is the physical memory location at which the flash chips
  are mapped on your particular target board. Refer to the 
  memory map which should hopefully be in the documentation for
  your board.

Physical length of flash chip mapping
CONFIG_MTD_PHYSMAP_LEN
  This is the total length of the mapping of the flash chips on
  your particular board. If there is space, or aliases, in the 
  physical memory map between the chips, this could be larger
  than the total amount of flash present. Refer to the memory
  map which should hopefully be in the documentation for your
  board. 

Flash chip mapping on Mixcom piggyback card
CONFIG_MTD_MIXMEM
  This supports the paging arrangement for access to flash chips
  on the Mixcom piggyback card, allowing the flash chip drivers 
  to get on with their job of driving the flash chips without 
  having to know about the paging. If you have one of these boards,
  you probably want to enable this mapping driver.

Flash chip mapping on Nora
CONFIG_MTD_NORA
  If you had to ask, you don't have one. Say 'N'.

Flash chip mapping on Octagon 5066 SBC
CONFIG_MTD_OCTAGON
  This provides a 'mapping' driver which supports the way in which
  the flash chips are connected in the Octagon-5066 Single Board
  Computer. You will also need to complete and enable the driver
  for JEDEC flash chips.

Flash chip mapping on RPXlite PPC board
CONFIG_MTD_RPXLITE
  The RPXLite PowerPC board has CFI-compliant chips mapped in 
  a strange sparse mapping. This 'mapping' driver supports that
  arrangement, allowing the CFI probe and command set driver code
  to communicate with the chips on the RPXLite board.

Flash chip mapping on Tempustech VMAX SBC301
CONFIG_MTD_VMAX
  This provides a 'mapping' driver which supports the way in which
  the flash chips are connected in the Tempustech VMAX SBC301 Single
  Board Computer. You will also need to complete and enable the driver
  for JEDEC flash chips.

Direct chardevice access to MTD devices
CONFIG_MTD_CHAR
  This provides a character device for each MTD device present in
  the system, allowing the user to read and write directly to the
  memory chips, and also use ioctl() to obtain information about
  the device, or to erase parts of it.

Pseudo-blockdevice access to MTD devices
CONFIG_MTD_BLOCK
  Although flash chips have an erase size too large to useful as
  block devices, it is possible to use MTD devices which are based
  on RAM chips in this manner. This blockdevice user of MTD devices
  performs that function. At the moment, it is also required for 
  the Journalling Flash File System to obtain a handle on the MTD 
  device when it's mounted - although the JFFS doesn't actually use
  any of the functions of the mtdblock device.

  Later, it may be extended to perform read/erase/modify/write cycles
  on flash chips to emulate a smaller block size. Needless to say,
  this is very unsafe, but could be useful for filesystems which are
  almost never written to.

FTL (Flash Translation Layer) support
CONFIG_FTL
  This provides support for the original Flash Translation Layer which
  is part of the PCMCIA specification. It uses a kind of pseudo-
  filesystem on a flash device to emulate a block device with 512-byte
  sectors, on top of which you put a 'normal' filesystem. You may find
  that the algorithms used in this code are patented unless you live
  in the Free World where software patents aren't legal - in the USA
  you are only permitted to use this on PCMCIA hardware, although 
  under the terms of the GPL you're obviously permitted to copy,
  modify and distribute the code as you wish. Just not use it.

NFTL (NAND Flash Translation Layer) support
CONFIG_NFTL
  This provides support for the NAND Flash Translation Layer which is
  used on M-Systems' DiskOnChip devices. It uses a kind of pseudo-
  filesystem on a flash device to emulate a block device with 512-byte
  sectors, on top of which you put a 'normal' filesystem. You may find
  that the algorithms used in this code are patented unless you live
  in the Free World where software patents aren't legal - in the USA
  you are only permitted to use this on DiskOnChip hardware, although 
  under the terms of the GPL you're obviously permitted to copy,
  modify and distribute the code as you wish. Just not use it.

Write support for NFTL (EXPERIMENTAL)
CONFIG_NFTL_RW
  If you're lucky, this will actually work. Don't whinge if it doesn't.
  Contact dwmw2@infradead.org if you want to help to make it more 
  reliable.

Support for USB
CONFIG_USB
  Universal Serial Bus (USB) is a specification for a serial bus
  subsystem which offers higher speeds and more features than the
  traditional PC serial port. The bus supplies power to peripherals
  and allows for hot swapping. Up to 127 USB peripherals can be
  connected to a single USB port in a tree structure. The USB port is
  the root of the tree, the peripherals are the leaves and the inner
  nodes are special USB devices called hubs. Many newer PC's have USB
  ports and newer peripherals such as scanners, keyboards, mice,
  modems, and printers support the USB protocol and can be connected
  to the PC via those ports.

  Say Y here if your computer has a USB port and you want to use USB
  devices. You then need to say Y to at least one of "UHCI support" or
  "OHCI support" below (the type of interface that the USB hardware in
  your computer provides to the operating system) and then choose from
  among the drivers for USB peripherals. You may want to check out the
  information provided in Documentation/usb/ and especially the links
  given in Documentation/usb/usb-help.txt.

  This code is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called usbcore.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt.

USB verbose debug messages
CONFIG_USB_DEBUG
  Say Y here if you want the USB core & hub drivers to produce a bunch
  of debug messages to the system log. Select this if you are having a
  problem with USB support and want to see more of what is going on.

UHCI (intel PIIX4, VIA, ...) support?
CONFIG_USB_UHCI
  The Universal Host Controller Interface is a standard by Intel for
  accessing the USB hardware in the PC (which is also called the USB
  host controller). If your USB host controller conforms to this
  standard, you may want to say Y, but see below. All recent boards
  with Intel PCI chipsets (like intel 430TX, 440FX, 440LX, 440BX,
  i810, i820) conform to this standard. Also all VIA PCI chipsets
  (like VIA VP2, VP3, MVP3, Apollo Pro, Apollo Pro II or Apollo Pro
  133).

  Currently there exist two drivers for UHCI host controllers: this
  one and the so-called JE driver, which you can get from 
  "UHCI alternate (JE) support", below. You need only one.

  This code is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called usb-uhci.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt.

UHCI (intel PIIX4, VIA, ...) alternate (JE) support?
CONFIG_USB_UHCI_ALT
  The Universal Host Controller Interface is a standard by Intel for
  accessing the USB hardware in the PC (which is also called the USB
  host controller). If your USB host controller conforms to this
  standard, you may want to say Y, but see below. All recent boards
  with Intel PCI chipsets (like intel 430TX, 440FX, 440LX, 440BX,
  i810, i820) conform to this standard. Also all VIA PCI chipsets
  (like VIA VP2, VP3, MVP3, Apollo Pro, Apollo Pro II or Apollo Pro
  133). If unsure, say Y.

  Currently there exist two drivers for UHCI host controllers: this
  so-called JE driver, and the one you get from "UHCI support", above.
  You need only one.

  This code is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called uhci.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt.

UHCI unlink optimizations (EXPERIMENTAL)
CONFIG_USB_UHCI_ALT_UNLINK_OPTIMIZE
  This option currently does nothing. You may say Y or N.

OHCI (Compaq, iMacs, OPTi, SiS, ALi, ...) support
CONFIG_USB_OHCI
  The Open Host Controller Interface is a standard by
  Compaq/Microsoft/National for accessing the USB PC hardware (also
  called USB host controller). If your USB host controller conforms to
  this standard, say Y. The USB host controllers on most non-Intel
  architectures and on several x86 compatibles with non-Intel chipsets
  -- like SiS (aktual 610, 610 and so on) or ALi (ALi IV, ALi V,
  Aladdin Pro..) -- conform to this standard.

  You may want to read the file Documentation/usb/ohci.txt.

  This code is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called usb-ohci.o. If you want to compile it
  as a module, say M here and read Documentation/modules.txt.

USB Human Interface Device (full HID) support
CONFIG_USB_HID
  Say Y here if you want full HID support to connect keyboards,
  mice, joysticks, graphic tablets, or any other HID based devices
  to your computer via USB. You can't use this driver and the
  HIDBP (Boot Protocol) keyboard and mouse drivers at the same time.
  More information is available: Documentation/usb/input.txt.

  If unsure, say Y.

  This code is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called hid.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt.

USB HIDBP Keyboard (basic) support
CONFIG_USB_KBD
  Say Y here if you don't want to use the generic HID driver for your
  USB keyboard and prefer to use the keyboard in its limited Boot
  Protocol mode instead. This driver is much smaller than the HID one.

  This code is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called usbkbd.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt.

  If unsure, say N.

USB HIDBP Mouse (basic) support
CONFIG_USB_MOUSE
  Say Y here if you don't want to use the generic HID driver for your
  USB mouse and prefer to use the mouse in its limited Boot Protocol
  mode instead. This driver is much smaller than the HID one.

  This code is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called usbmouse.o. If you want to compile it as
  a module, say M here and read Documentation/modules.txt.

  If unsure, say N.

Wacom Intuos/Graphire tablet support
CONFIG_USB_WACOM
  Say Y here if you want to use the USB version of the Wacom Intuos
  or Graphire tablet. Make sure to say Y to "Mouse support"
  (CONFIG_INPUT_MOUSEDEV) and/or "Event interface support"
  (CONFIG_INPUT_EVDEV) as well.

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called wacom.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt.

Logitech WingMan Force joystick support
CONFIG_USB_WMFORCE
  Say Y here if you want to use the Logitech WingMan Force with Linux
  on the USB port. No force-feedback support yet, but other than that
  it should work like a normal joystick.

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called wmforce.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt.

Use input layer for ADB devices
CONFIG_INPUT_ADBHID
  Say Y here if you want to have ADB (Apple Desktop Bus) HID devices
  such as keyboards, mice, joysticks, or graphic tablets handled by the
  input layer.  If you say Y here, make sure to say Y to the
  corresponding drivers "Keyboard support" (CONFIG_INPUT_KEYBDEV),
  "Mouse Support" (CONFIG_INPUT_MOUSEDEV) and "Event interface support"
  (CONFIG_INPUT_EVDEV) as well.

  If you say N here, you still have the option of using the old ADB
  keyboard and mouse drivers.

  If unsure, say Y.

Keyboard support
CONFIG_INPUT_KEYBDEV
  Say Y here if you want your USB HID keyboard (or an ADB keyboard
  handled by the input layer) to be able to serve as a system keyboard.

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called keybdev.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt.

Mouse support
CONFIG_INPUT_MOUSEDEV
  Say Y here if you want your USB HID mouse (or ADB mouse handled by
  the input layer) to be accessible as char devices 13:32+ -
  /dev/input/mouseX and 13:63 - /dev/input/mice as an emulated ImPS/2
  mouse.  That way, all user space programs will be able to use your
  mouse.
  
  If unsure, say Y.

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called mousedev.o. If you want to compile it as
  a module, say M here and read Documentation/modules.txt.

Horizontal screen resolution
CONFIG_INPUT_MOUSEDEV_SCREEN_X
  If you're using a digitizer, or a graphic tablet, and want to use
  it as a mouse then the mousedev driver needs to know the X window
  screen resolution you are using to correctly scale the data. If
  you're not using a digitizer, this value is ignored.

Vertical screen resolution
CONFIG_INPUT_MOUSEDEV_SCREEN_Y
  If you're using a digitizer, or a graphic tablet, and want to use
  it as a mouse then the mousedev driver needs to know the X window
  screen resolution you are using to correctly scale the data. If
  you're not using a digitizer, this value is ignored.

Joystick support
CONFIG_INPUT_JOYDEV
  Say Y here if you want your USB HID joystick or gamepad to be
  accessible as char device 13:0+ - /dev/input/jsX device. 

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called joydev.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt.

Event interface support
CONFIG_INPUT_EVDEV
  Say Y here if you want your USB or ADB HID device events be accessible
  under char device 13:64+ - /dev/input/eventX in a generic way.
  This is the future ...

USB Scanner support
CONFIG_USB_SCANNER
  Say Y here if you want to connect a USB scanner to your computer's
  USB port. Please read Documentation/usb/scanner.txt and
  Documentation/usb/scanner-hp-sane.txt for more information.

  This code is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called scanner.o. If you want to compile it as
  a module, say M here and read Documentation/modules.txt.

USB Audio support
CONFIG_USB_AUDIO
  Say Y here if you want to connect UAB audio equipment such as
  speakers to your computer's USB port.

  This code is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called audio.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt.

USB Modem (CDC ACM) support
CONFIG_USB_ACM
  This driver supports USB modems and ISDN adapters which support the
  Communication Device Class Abstract Control Model interface.
  Please read Documentation/usb/acm.txt for details.

  This code is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called acm.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt.

USB Serial converter support
CONFIG_USB_SERIAL
  Say Y here if you have a USB device that provides normal serial
  ports, and you want to connect it to your USB bus. Supported devices
  are the Tech WhiteHEAT multi-port USB to serial converter, and the
  FTDI or Keyspan single port USB to serial converter Handspring
  Visor. In addition to saying Y here, you need to say Y to the driver
  for your specific hardware below. Some other devices may also be
  used if you say Y to "USB Generic Serial Driver", below.

  Please read Documentation/usb/usb-serial.txt for more information.
  
  This code is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called usbserial.o. If you want to compile it 
  as a module, say M here and read Documentation/modules.txt.

USB Generic Serial Driver
CONFIG_USB_SERIAL_GENERIC
  Say Y here if you want to use the generic USB serial driver. Please
  read Documentation/usb/usb-serial.txt for more information on using
  this driver. It is recommended that the "USB Serial converter
  support" be compiled as a module for this driver to be used
  properly.

USB ConnectTech WhiteHEAT Serial Driver
CONFIG_USB_SERIAL_WHITEHEAT
  Say Y here if you want to use a ConnectTech WhiteHEAT 4 port
  USB to serial converter device.

  This code is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called whiteheat.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt.

USB Handspring Visor Driver
CONFIG_USB_SERIAL_VISOR
  Say Y here if you want to connect to your HandSpring Visor through
  its USB docking station. See http://usbvisor.sourceforge.net for
  more information on using this driver.

  This code is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called visor.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt.

USB Belkin and Paracom Single Port Serial Driver
CONFIG_USB_SERIAL_BELKIN
  Say Y here if you want to use a Belkin USB Serial single port
  adaptor (F5U103 is one of the model numbers) or the Peracom single
  port USB to serial adapter.

  This code is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called belkin_sa.o.  If you want to compile it as
  a module, say M here and read Documentation/modules.txt.

USB FTDI Single Port Serial Driver
CONFIG_USB_SERIAL_FTDI_SIO
  Say Y here if you want to use a FTDI SIO single port USB to serial
  converter device. The implementation I have is called the USC-1000.

  See http://reality.sgi.com/bryder_wellington/ftdi_sio for more
  information on this driver and the device.

  This code is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called ftdi_sio.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt.

USB Keyspan PDA Single Port Serial Driver
CONFIG_USB_SERIAL_KEYSPAN_PDA
  Say Y here if you want to use a Keyspan PDA single port USB to
  serial converter device.  This driver makes use of firmware
  developed from scratch by Brian Warner.

  This code is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called keyspan_pda.o. If you want to compile it 
  as a module, say M here and read Documentation/modules.txt.

USB Keyspan USA-xxx Serial Driver
CONFIG_USB_SERIAL_KEYSPAN
  Say Y here if you want to use Keyspan USB to serial converter
  devices.  This driver makes use of Keyspan's official firmware
  and was developed with their support.  You must also include
  firmware to support your particular device(s). 

  See http://www.linuxcare.com.au/hugh/keyspan.html for 
  more information.
 
  This code is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called keyspan.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt.

USB Keyspan USA-28 Firmware
CONFIG_USB_SERIAL_KEYSPAN_USA28
  Say Y here to include firmware for the USA-28 converter.

USB Keyspan USA-28X Firmware
CONFIG_USB_SERIAL_KEYSPAN_USA28X
  Say Y here to include firmware for the USA-28X converter.

USB Keyspan USA-19 Firmware
CONFIG_USB_SERIAL_KEYSPAN_USA19
  Say Y here to include firmware for the USA-19 converter.

USB Keyspan USA-18X Firmware
CONFIG_USB_SERIAL_KEYSPAN_USA18X
  Say Y here to include firmware for the USA-18X converter.

USB Keyspan USA-19W Firmware
CONFIG_USB_SERIAL_KEYSPAN_USA19W
  Say Y here to include firmware for the USA-19W converter.

USB ZyXEL omni.net LCD Plus Driver
CONFIG_USB_SERIAL_OMNINET
  Say Y here if you want to use a ZyXEL omni.net LCD ISDN TA.

  This code is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called omninet.o. If you want to compile it as a 
  module, say M here and read Documentation/modules.txt.

USB Digi International AccelePort USB Serial Driver
CONFIG_USB_SERIAL_DIGI_ACCELEPORT
  Say Y here if you want to use Digi AccelePort USB 2 or 4 devices,
  2 port (plus parallel port) and 4 port USB serial converters.  The
  parallel port on the USB 2 appears as a third serial port on Linux.
  The Digi Acceleport USB 8 is not yet supported by this driver.

  This driver works under SMP with the usb-uhci driver.  It does not
  work under SMP with the uhci driver.

  This code is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called digi_acceleport.o. If you want to compile 
  it as a module, say M here and read Documentation/modules.txt.

USB Empeg empeg-car Mark I/II Driver
CONFIG_USB_SERIAL_EMPEG
  Say Y here if you want to connect to your Empeg empeg-car Mark I/II
  mp3 player via USB.  The driver uses a single ttyUSB{0,1,2,...}
  device node.  See Documentation/usb/usb-serial.txt for more
  tidbits of information.

  This code is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called empeg.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt.

USB MCT Single Port Serial Driver
CONFIG_USB_SERIAL_MCT_U232
  Say Y here if you want to use a USB Serial single port adapter from
  Magic Control Technology Corp. (U232 is one of the model numbers).

  This code is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called mct_u232.o.  If you want to compile it as
  a module, say M here and read Documentation/modules.txt.

USB Serial Converter verbose debug
CONFIG_USB_SERIAL_DEBUG
  Say Y here if you want verbose debug messages from the USB Serial
  Converter. 

USB Printer support
CONFIG_USB_PRINTER
  Say Y here if you want to connect a USB printer to your computer's
  USB port.

  This code is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called printer.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt.

USB IBM (Xirlink) C-It Camera support
CONFIG_USB_IBMCAM
  Say Y here if you want to connect a IBM "C-It" camera, also known as
  "Xirlink PC Camera" to your computer's USB port. For more
  information, read Documentation/usb/ibmcam.txt.

  This driver uses the Video For Linux API.  You must enable
  (Y or M in config) Video For Linux (under Character Devices)
  to use this driver.  Information on this API and pointers to
  "v4l" programs may be found on the WWW at
  http://roadrunner.swansea.uk.linux.org/v4l.shtml .

  This code is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called ibmcam.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt. This camera
  has several configuration options which can be specified when you
  load the module. Read Documentation/usb/ibmcam.txt to learn more.

USB OV511 Camera support
CONFIG_USB_OV511
  Say Y here if you want to connect this type of camera to your
  computer's USB port. See Documentation/usb/ov511.txt for more
  information and for a list of supported cameras.
  
  This driver uses the Video For Linux API. You must say Y or M to
  "Video For Linux" (under Character Devices) to use this driver.
  Information on this API and pointers to "v4l" programs may be found
  on the WWW at http://roadrunner.swansea.uk.linux.org/v4l.shtml .

  This code is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called ov511.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt.

USB ADMtek Pegasus-based ethernet device support
CONFIG_USB_PEGASUS
  Say Y if you want to use your USB ethernet device. Supported
  cards until now are:
    ADMtek AN986 Pegasus (eval. board)
    ADMtek ADM8511 Pegasus II (eval. board)
    Accton 10/100
    Billington USB-100
    Corega FEter USB-TX
    MELCO/BUFFALO LUA-TX
    D-Link DSB-650TX, DSB-650TX-PNA, DSB-650, DU-E10, DU-E100
    Linksys USB100TX, USB10TX
    LANEED Ethernet LD-USB/TX
    SMC 202
    SOHOware NUB Ethernet
    
  Any Pegasus II based board also are supported.
  If you have devices with vendor IDs other than noted above
  you should add them in the driver code and send a message
  to me (petkan@dce.bg) for update.

  This code is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called pegasus.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt.

USB Kodak DC-2xx Camera support
CONFIG_USB_DC2XX
  Say Y here if you want to connect this type of still camera to
  your computer's USB port.  See Documentation/usb/dc2xx.txt for more
  information; some non-Kodak cameras may also work with this
  driver, given application support (such as www.gPhoto.org).

  This code is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called dc2xx.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt.

USB Mustek MDC800 Digital Camera Support
CONFIG_USB_MDC800
  Say Y here if you want to connect this type of still camera to
  your computer's USB port. This driver can be used with gphoto 0.4.3
  and higher (look at http://www.gphoto.org ).
  To use it create a device node with "mknod /dev/mustek c 180 32" and
  configure it in your software.

  This code is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called mdc800.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt.

USB Mass Storage support
CONFIG_USB_STORAGE
  Say Y here if you want to connect USB mass storage devices to your
  computer's USB port.

  This code is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called usb-storage.o. If you want to compile it
  as a module, say M here and read Documentation/modules.txt.

USB Mass Storage verbose debug
CONFIG_USB_STORAGE_DEBUG
  Say Y here in order to have the USB Mass Storage code generate
  verbose debugging messages.

USS720 parport driver
CONFIG_USB_USS720
  This driver is for USB parallel port adapters that use the Lucent
  Technologies USS-720 chip. These cables are plugged into your USB
  port and provide USB compatibility to peripherals designed with
  parallel port interfaces.
  
  The chip has two modes: automatic mode and manual mode. In automatic
  mode, it looks to the computer like a standard USB printer. Only
  printers may be connected to the USS-720 in this mode. The generic
  USB printer driver ("USB Printer support", above) may be used in
  that mode, and you can say N here if you want to use the chip only
  in this mode.

  Manual mode is not limited to printers, any parallel port
  device should work. This driver utilizes manual mode.
  Note however that some operations are three orders of magnitude
  slower than on a PCI/ISA Parallel Port, so timing critical
  applications might not work.

  Say Y here if you own an USS-720 USB->Parport cable and intend to
  connect anything other than a printer to it.

  This code is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called uss720.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt.
  
USB device file system
CONFIG_USB_DEVICEFS
  If you say Y here (and to "/proc file system support" below), you
  will get a file /proc/usb/devices which lists the devices currently
  connected to your USB busses, a file /proc/usb/drivers which lists
  the USB kernel client drivers currently loaded, and for every
  connected device a file named "/proc/usb/xxx/yyy", where xxx is the
  bus number and yyy the device number; the latter files can be used
  by user space programs to talk directly to the device. These files
  are "virtual", meaning they are generated on the fly and not stored
  on the hard drive.
  
  For the format of the /proc/usb/ files, please read
  Documentation/usb/proc_usb_info.txt. 

  Please note that this code is completely unrelated to devfs, the
  "/dev file system support".

  Most users want to say Y here.

USB Bandwidth allocation
CONFIG_USB_BANDWIDTH
  If you say Y here, the USB subsystem enforces USB bandwidth
  allocation and will prevent some device opens from succeeding
  if they would cause USB bandwidth usage to go above 90% of
  the bus bandwidth.

  If you say N here, these conditions will cause warning messages
  about USB bandwidth usage to be logged and some devices or
  drivers may not work correctly.

DABUSB driver
CONFIG_USB_DABUSB
  A Digital Audio Broadcasting (DAB) Receiver for USB and Linux
  brought to you by the DAB-Team (http://dab.in.tum.de). This driver
  can be taken as an example for URB-based bulk, control, and
  isochronous transactions. URB's are explained in
  Documentation/usb/URB.txt.

  This code is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called dabusb.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt.

PLUSB driver
CONFIG_USB_PLUSB
  A driver for the Prolific PL-2302 USB-to-USB network device. This
  'USB cable' connects two hosts via a point-to-point network with
  bandwidth of 5 Mbit/s. Configure this driver after connecting the
  USB cable via ifconfig plusb0 10.0.0.1 pointopoint 10.0.0.2 (and
  vice versa on the other host).

  This code is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called plusb.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt.

USB Diamond Rio500 support
CONFIG_USB_RIO500
  Say Y here if you want to connect a USB Rio500 mp3 player to your
  computer's USB port. Please read Documentation/usb/rio.txt
  for more information.

  This code is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called rio500.o. If you want to compile it as
  a module, say M here and read Documentation/modules.txt.

D-Link DSB-R100 FM radio support
CONFIG_USB_DSBR
  Say Y here if you want to connect this type of radio to your
  computer's USB port. Note that the audio is not digital, and
  you must connect the line out connector to a sound card or a
  set of speakers.

  This driver uses the Video For Linux API.  You must enable
  (Y or M in config) Video For Linux (under Character Devices)
  to use this driver.  Information on this API and pointers to
  "v4l" programs may be found on the WWW at
  http://roadrunner.swansea.uk.linux.org/v4l.shtml .

  This code is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called dsbr100.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt.

Microtek USB scanner support
CONFIG_USB_MICROTEK
  Say Y here if you want support for the Microtek X6USB and possibly
  some other scanners by that vendor. The scanner will appear as a
  scsi generic device to the rest of the system.
  A patched version of SANE is necessary to use the
  scanner. It's available at 
  http://fachschaft.cup.uni-muenchen.de/~neukum/scanner.html
  This driver can be compiled as a module.

USB Bluetooth support
CONFIG_USB_BLUETOOTH
  Say Y here if you want to connect a USB Bluetooth device to your
  computer's USB port. You will need the Bluetooth stack (available
  at http://developer.axis.com/software/index.shtml) to fully use
  the device.

  This code is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called bluetooth.o. If you want to compile it as 
  a module, say M here and read Documentation/modules.txt.
  
Minix fs support
CONFIG_MINIX_FS
  Minix is a simple operating system used in many classes about OS's.
  The minix file system (method to organize files on a hard disk
  partition or a floppy disk) was the original file system for Linux,
  but has been superseded by the second extended file system ext2fs.
  You don't want to use the minix file system on your hard disk
  because of certain built-in restrictions, but it is sometimes found
  on older Linux floppy disks. This option will enlarge your kernel by
  about 28 KB. If unsure, say N.

  If you want to compile this as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt. The module will be
  called minix.o. Note that the file system of your root partition
  (the one containing the directory /) cannot be compiled as a module.

Second extended fs support
CONFIG_EXT2_FS
  This is the de facto standard Linux file system (method to organize
  files on a storage device) for hard disks. 

  You want to say Y here, unless you intend to use Linux exclusively
  from inside a DOS partition using the UMSDOS file system. The
  advantage of the latter is that you can get away without
  repartitioning your hard drive (which often implies backing
  everything up and restoring afterwards); the disadvantage is that
  Linux becomes susceptible to DOS viruses and that UMSDOS is somewhat
  slower than ext2fs. Even if you want to run Linux in this fashion,
  it might be a good idea to have ext2fs around: it enables you to
  read more floppy disks and facilitates the transition to a *real*
  Linux partition later. Another (rare) case which doesn't require
  ext2fs is a diskless Linux box which mounts all files over the
  network using NFS (in this case it's sufficient to say Y to "NFS
  file system support" below). Saying Y here will enlarge your kernel
  by about 44 KB.

  The Ext2fs-Undeletion mini-HOWTO, available from
  http://www.linuxdoc.org/docs.html#howto , gives information about
  how to retrieve deleted files on ext2fs file systems.

  To change the behavior of ext2 file systems, you can use the tune2fs
  utility ("man tune2fs"). To modify attributes of files and
  directories on ext2 file systems, use chattr ("man chattr").
  
  Ext2fs partitions can be read from within DOS using the ext2tool
  command line tool package (available via FTP (user: anonymous) from
  ftp://metalab.unc.edu/pub/Linux/system/filesystems/ext2 ) and from
  within Windows NT using the ext2nt command line tool package from
  ftp://metalab.unc.edu/pub/Linux/utils/dos . Explore2fs is a
  graphical explorer for ext2fs partitions which runs on Windows 95
  and Windows NT and includes experimental write support; it is
  available from
  http://jnewbigin-pc.it.swin.edu.au/Linux/Explore2fs.htm .

  If you want to compile this file system as a module ( = code which
  can be inserted in and removed from the running kernel whenever you
  want), say M here and read Documentation/modules.txt. The module
  will be called ext2.o. Be aware however that the file system of your
  root partition (the one containing the directory /) cannot be
  compiled as a module, and so this could be dangerous. Most everyone
  wants to say Y here.

BFS file system support (EXPERIMENTAL)
CONFIG_BFS_FS
  Boot File System (BFS) is a file system used under SCO UnixWare to
  allow the bootloader access to the kernel image and other important
  files during the boot process. It is usually mounted under /stand
  and corresponds to the slice marked as "STAND" in the UnixWare
  partition. You should say Y if you want to read or write
  the files on your /stand slice from within Linux. You then also 
  need to say Y to "UnixWare slices support", below. More information
  about the BFS file system is contained in the file 
  Documentation/filesystems/bfs.txt. 

  If you don't know what this is about, say N.

  If you want to compile this as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt. The module will be
  called bfs.o. Note that the file system of your root partition (the
  one containing the directory /) cannot be compiled as a module.

Compressed ROM file system support
CONFIG_CRAMFS
  Saying Y here includes support for CramFs (Compressed ROM File
  System). Cramfs is designed to be a simple, small, and compressed
  file system for ROM based embedded systems. CramFs is read-only,
  limited to 256MB file systems (with 16MB files), and doesn't support
  16/32 bits uid/gid, hard links and timestamps.
  
  See Documentation/filesystems/cramfs.txt and fs/cramfs/README
  for further information.

  If you want to compile this as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt. The module will be
  called cramfs.o. Note that the root file system (the one containing
  the directory /) cannot be compiled as a module.

  If unsure, say N.
   
Simple RAM-based file system support
CONFIG_RAMFS
  Ramfs is a file system which keeps all files in RAM. It allows
  read and write access.

  In contrast to RAM disks, which get allocated a fixed amount of RAM,
  ramfs grows and shrinks to accommodate the files it contains.

  Before you can use this RAM-based file system, it has to be mounted,
  meaning it has to be given a location in the directory hierarchy. If
  you want to use the location /ramfiles for example, you would have
  to create that directory first and then mount the file system by
  saying "mount -t ramfs ramfs /ramfiles" or the equivalent line in
  /etc/fstab. Everything is "virtual" in the sense that no files will
  be created on your hard drive; if you reboot, everything in
  /ramfiles will be lost.
  
  If you want to compile this as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt. The module will be
  called ramfs.o.

ISO 9660 CDROM file system support
CONFIG_ISO9660_FS
  This is the standard file system used on CDROMs. It was previously
  known as "High Sierra File System" and is called "hsfs" on other
  Unix systems. The so-called Rock-Ridge extensions which allow for
  long Unix filenames and symbolic links are also supported by this
  driver. If you have a CDROM drive and want to do more with it than
  just listen to audio CDs and watch its LEDs, say Y (and read
  Documentation/filesystems/isofs.txt and the CDROM-HOWTO, available
  from http://www.linuxdoc.org/docs.html#howto ), thereby enlarging
  your kernel by about 27 KB; otherwise say N.

  If you want to compile this as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt. The module will be
  called isofs.o.

Microsoft Joliet CDROM extensions
CONFIG_JOLIET
  Joliet is a Microsoft extension for the ISO 9660 CDROM file system
  which allows for long filenames in unicode format (unicode is the
  new 16 bit character code, successor to ASCII, which encodes the
  characters of almost all languages of the world; see
  http://www.unicode.org for more information). Say Y here if you want
  to be able to read Joliet CDROMs under Linux.

UDF File System support (read only)
CONFIG_UDF_FS
  This is the new file system used on some CDROMs and DVDs. Say Y if
  you intend to mount DVD discs or CDRW's written in packet mode, or
  if written to by other UDF utilities, such as DirectCD. This UDF
  file system support is read-only. If you want to write to UDF
  file systems on some media, you need to say Y to "UDF read-write
  support" below in addition. Please read
  Documentation/filesystems/udf.txt.

  This file system support is also available as a module ( = code
  which can be inserted in and removed from the running kernel
  whenever you want). The module is called udf.o. If you want to
  compile it as a module, say M here and read
  Documentation/modules.txt.

  If unsure, say N.

UDF write support (DANGEROUS)
CONFIG_UDF_RW
  Say Y if you want to test write support for UDF file systems.
  Due to lack of support for writing to CDR/CDRW's, this option
  is only supported for hard discs, DVD-RAM, and loopback files.

DOS FAT fs support
CONFIG_FAT_FS
  If you want to use one of the FAT-based file systems (the MS-DOS,
  VFAT (Windows 95) and UMSDOS (used to run Linux on top of an
  ordinary DOS partition) file systems), then you must say Y or M here
  to include FAT support. You will then be able to mount partitions or
  diskettes with FAT-based file systems and transparently access the
  files on them, i.e. MSDOS files will look and behave just like all
  other Unix files.

  This FAT support is not a file system in itself, it only provides
  the foundation for the other file systems. You will have to say Y or
  M to at least one of "MSDOS fs support" or "VFAT fs support" in
  order to make use of it.

  Another way to read and write MSDOS floppies and hard drive
  partitions from within Linux (but not transparently) is with the
  mtools ("man mtools") program suite. You don't need to say Y here in
  order to do that.

  If you need to move large files on floppies between a DOS and a
  Linux box, say Y here, mount the floppy under Linux with an MSDOS
  file system and use GNU tar's M option. GNU tar is a program
  available for Unix and DOS ("man tar" or "info tar").
  
  It is now also becoming possible to read and write compressed FAT
  file systems; read Documentation/filesystems/fat_cvf.txt for
  details.
  
  The FAT support will enlarge your kernel by about 37 KB. If unsure,
  say Y.

  If you want to compile this as a module however ( = code which can
  be inserted in and removed from the running kernel whenever you
  want), say M here and read Documentation/modules.txt. The module
  will be called fat.o. Note that if you compile the FAT support as a
  module, you cannot compile any of the FAT-based file systems into
  the kernel -- they will have to be modules as well. The file system
  of your root partition (the one containing the directory /) cannot
  be a module, so don't say M here if you intend to use UMSDOS as your
  root file system.

MSDOS fs support
CONFIG_MSDOS_FS
  This allows you to mount MSDOS partitions of your hard drive (unless
  they are compressed; to access compressed MSDOS partitions under
  Linux, you can either use the DOS emulator DOSEMU, described in the
  DOSEMU-HOWTO, available from
  http://www.linuxdoc.org/docs.html#howto , or try dmsdosfs in
  ftp://metalab.unc.edu/pub/Linux/system/filesystems/dosfs . If you
  intend to use dosemu with a non-compressed MSDOS partition, say Y
  here) and MSDOS floppies. This means that file access becomes
  transparent, i.e. the MSDOS files look and behave just like all
  other Unix files.

  If you want to use UMSDOS, the Unix-like file system on top of a
  DOS file system, which allows you to run Linux from within a DOS
  partition without repartitioning, you'll have to say Y or M here.

  If you have Windows 95 or Windows NT installed on your MSDOS
  partitions, you should use the VFAT file system (say Y to "VFAT fs
  support" below), or you will not be able to see the long filenames
  generated by Windows 95 / Windows NT.

  This option will enlarge your kernel by about 7 KB. If unsure,
  answer Y. This will only work if you said Y to "DOS FAT fs support"
  as well. If you want to compile this as a module however ( = code
  which can be inserted in and removed from the running kernel
  whenever you want), say M here and read Documentation/modules.txt.
  The module will be called msdos.o.

VFAT (Windows-95) fs support
CONFIG_VFAT_FS
  This option provides support for normal Windows file systems with
  long filenames. That includes non-compressed FAT-based file systems
  used by Windows 95, Windows 98, Windows NT 4.0, and the Unix
  programs from the mtools package.

  You cannot use the VFAT file system for your Linux root partition
  (the one containing the directory /); use UMSDOS instead if you
  want to run Linux from within a DOS partition (i.e. say Y to
  "UMSDOS: Unix like fs on top of std MSDOS fs", below).

  The VFAT support enlarges your kernel by about 10 KB and it only
  works if you said Y to the "DOS FAT fs support" above. Please read
  the file Documentation/filesystems/vfat.txt for details. If unsure,
  say Y.

  If you want to compile this as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt. The module will be
  called vfat.o.

UMSDOS: Unix-like file system on top of standard MSDOS fs
CONFIG_UMSDOS_FS
  Say Y here if you want to run Linux from within an existing DOS
  partition of your hard drive. The advantage of this is that you can
  get away without repartitioning your hard drive (which often implies
  backing everything up and restoring afterwards) and hence you're
  able to quickly try out Linux or show it to your friends; the
  disadvantage is that Linux becomes susceptible to DOS viruses and
  that UMSDOS is somewhat slower than ext2fs. Another use of UMSDOS
  is to write files with long unix filenames to MSDOS floppies; it
  also allows Unix-style soft-links and owner/permissions of files on
  MSDOS floppies. You will need a program called umssync in order to
  make use of UMSDOS; read Documentation/filesystems/umsdos.txt. 

  To get utilities for initializing/checking UMSDOS file system, or
  latest patches and/or information, visit the UMSDOS home page at
  http://www.voyager.hr/~mnalis/umsdos/ .

  This option enlarges your kernel by about 28 KB and it only works if
  you said Y to both "DOS FAT fs support" and "MSDOS fs support"
  above. If you want to compile this as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt. The module will be
  called umsdos.o. Note that the file system of your root partition
  (the one containing the directory /) cannot be a module, so saying M
  could be dangerous. If unsure, say N.

/proc file system support
CONFIG_PROC_FS
  This is a virtual file system providing information about the status
  of the system. "Virtual" means that it doesn't take up any space on
  your hard disk: the files are created on the fly by the kernel when
  you try to access them. Also, you cannot read the files with older
  version of the program less: you need to use more or cat. 

  It's totally cool; for example, "cat /proc/interrupts" gives
  information about what the different IRQs are used for at the moment
  (there is a small number of Interrupt ReQuest lines in your computer
  that are used by the attached devices to gain the CPU's attention --
  often a source of trouble if two devices are mistakenly configured
  to use the same IRQ). The program procinfo to display some
  information about your system gathered from the /proc file system.

  Before you can use the /proc file system, it has to be mounted,
  meaning it has to be given a location in the directory hierarchy.
  That location should be /proc. A command such as "mount -t proc proc
  /proc" or the equivalent line in /etc/fstab does the job.

  The /proc file system is explained in the file
  Documentation/filesystems/proc.txt and on the proc(5) manpage ("man
  5 proc").

  This option will enlarge your kernel by about 67 KB. Several
  programs depend on this, so everyone should say Y here.

/dev file system support (EXPERIMENTAL)
CONFIG_DEVFS_FS
  This is support for devfs, a virtual file system (like /proc) which
  provides the file system interface to device drivers, normally found
  in /dev. Devfs does not depend on major and minor number
  allocations. Device drivers register entries in /dev which then
  appear automatically, which means that the system administrator does
  not have to create character and block special device files in the
  /dev directory using the mknod command (or MAKEDEV script) anymore.

  This is work in progress. If you want to use this, you *must* read
  the material in Documentation/filesystems/devfs/, especially the
  file README there.

  If unsure, say N.

Enable automatic mounting at boot
CONFIG_DEVFS_MOUNT
  This option appears if you have CONFIG_DEVFS_FS enabled. Setting
  this to 'Y' will make the kernel automatically mount devfs onto /dev
  when the system is booted, before the init thread is started.
  You can override this with the "devfs=nomount" boot option.

  If unsure, say N.

Debug devfs
CONFIG_DEVFS_DEBUG
  If you say Y here, then the /dev file system code will generate
  debugging messages. See the file
  Documentation/filesystems/devfs/boot-options for more details.
  
  If unsure, say N.

NFS file system support
CONFIG_NFS_FS
  If you are connected to some other (usually local) Unix computer
  (using SLIP, PLIP, PPP or Ethernet) and want to mount files residing
  on that computer (the NFS server) using the Network File Sharing
  protocol, say Y. "Mounting files" means that the client can access
  the files with usual UNIX commands as if they were sitting on the
  client's hard disk. For this to work, the server must run the
  programs nfsd and mountd (but does not need to have NFS file system
  support enabled in its kernel). NFS is explained in the Network
  Administrator's Guide, available from
  http://www.linuxdoc.org/docs.html#guide , on its man page: "man
  nfs", and in the NFS-HOWTO.
  
  A superior but less widely used alternative to NFS is provided by
  the Coda file system; see "Coda file system support" below.

  If you say Y here, you should have said Y to TCP/IP networking also.
  This option would enlarge your kernel by about 27 KB. 

  This file system is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module is called nfs.o. If you want to compile it as a module,
  say M here and read Documentation/modules.txt. 

  If you are configuring a diskless machine which will mount its root
  file system over NFS at boot time, say Y here and to "IP: kernel
  level autoconfiguration" above and to "Root file system on NFS"
  below. You cannot compile this driver as a module in this case.
  There are two packages designed for booting diskless machines over
  the net: netboot and etherboot, both available via FTP from
  ftp://metalab.unc.edu/pub/Linux/system/boot/ethernet/ .

  If you don't know what all this is about, say N.

Provide NFSv3 client support (EXPERIMENTAL)
CONFIG_NFS_V3
  Say Y here if you want your NFS client to be able to speak the newer
  version 3 of the NFS protocol. 
 
  If unsure, say N.

Root file system on NFS
CONFIG_ROOT_NFS
  If you want your Linux box to mount its whole root file system (the
  one containing the directory /) from some other computer over the
  net via NFS (presumably because your box doesn't have a hard disk),
  say Y. Read Documentation/nfsroot.txt for details. It is likely that
  in this case, you also want to say Y to "IP: kernel level
  autoconfiguration" so that your box can discover its network address
  at boot time.
  
  Most people say N here. 

NFS server support
CONFIG_NFSD
  If you want your Linux box to act as an NFS *server*, so that other
  computers on your local network which support NFS can access certain
  directories on your box transparently, you have two options: you can
  use the self-contained user space program nfsd, in which case you
  should say N here, or you can say Y and use the kernel based NFS
  server. The advantage of the kernel based solution is that it is
  faster.

  In either case, you will need support software; the respective
  locations are given in the file Documentation/Changes in the NFS
  section.

  If you say Y here, you will get support for version 2 of the NFS
  protocol (NFSv2). If you also want NFSv3, say Y to the next question
  as well.

  Please read the NFS-HOWTO, available from
  http://www.linuxdoc.org/docs.html#howto .

  The NFS server is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module is called nfsd.o. If you want to compile it as a module,
  say M here and read Documentation/modules.txt. If unsure, say N.

Provide NFSv3 server support
CONFIG_NFSD_V3
  If you would like to include the NFSv3 server as well as the NFSv2
  server, say Y here.  If unsure, say Y.

Provide NFS over TCP server support DEVELOPER ONLY
CONFIG_NFSD_TCP
  If you are a developer and want to work on fixing problems with
  NFS server over TCP support, say Y here.  If unsure, say N.

  Some problems can be found by looking for FIXME in net/sunrpc/svcsock.c

OS/2 HPFS file system support
CONFIG_HPFS_FS
  OS/2 is IBM's operating system for PC's, the same as Warp, and HPFS
  is the file system used for organizing files on OS/2 hard disk
  partitions. Say Y if you want to be able to read files from and
  write files to an OS/2 HPFS partition on your hard drive. OS/2
  floppies however are in regular MSDOS format, so you don't need this
  option in order to be able to read them. Read
  Documentation/filesystems/hpfs.txt.

  This file system is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module is called hpfs.o. If you want to compile it as a module,
  say M here and read Documentation/modules.txt. If unsure, say N.

NTFS support (read only)
CONFIG_NTFS_FS
  NTFS is the file system of Microsoft Windows NT. Say Y if you want
  to get read access to files on NTFS partitions of your hard drive.
  The Linux NTFS driver supports most of the mount options of the VFAT
  driver, see Documentation/filesystems/ntfs.txt. Saying Y here will
  give you read-only access to NTFS partitions.

  This code is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called ntfs.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt.

NTFS write support (DANGEROUS)
CONFIG_NTFS_RW
  If you say Y here, you will (maybe) be able to write to NTFS file
  systems as well as read from them. The read-write support in
  NTFS is far from being complete and is not well tested. If you
  say Y here, back up your NTFS volume first since it may get
  damaged. Also, make sure to run chkdsk from within Microsoft
  Windows NT after having performed any writes to a NTFS partition
  from Linux to detect any problems as early as possible.
  Please note that write support is limited to Windows NT4 and
  earlier versions.

  If unsure, say N.

System V and Coherent file system support (read only)
CONFIG_SYSV_FS
  SCO, Xenix and Coherent are commercial Unix systems for Intel
  machines. Saying Y here would allow you to read from their floppies
  and hard disk partitions. If you also want to write to these media,
  say Y to "SYSV file system write support" below.

  If you have floppies or hard disk partitions like that, it is likely
  that they contain binaries from those other Unix systems; in order
  to run these binaries, you will want to install iBCS2 (Intel Binary
  Compatibility Standard is a kernel module which lets you run SCO,
  Xenix, Wyse, UnixWare, Dell Unix and System V programs under Linux
  and is often needed to run commercial software that's only available
  for those systems. It's available via FTP (user: anonymous) from
  ftp://tsx-11.mit.edu/pub/linux/BETA ).

  If you only intend to mount files from some other Unix over the
  network using NFS, you don't need the System V file system support
  (but you need NFS file system support obviously). 

  Note that this option is generally not needed for floppies, since a
  good portable way to transport files and directories between unixes
  (and even other operating systems) is given by the tar program ("man
  tar" or preferably "info tar"). Note also that this option has
  nothing whatsoever to do with the option "System V IPC". Read about
  the System V file system in Documentation/filesystems/sysv-fs.txt.
  Saying Y here will enlarge your kernel by about 27 KB.

  If you want to compile this as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt. The module will be
  called sysv.o. 

  If you haven't heard about all of this before, it's safe to say N.

SYSV file system write support (DANGEROUS)
CONFIG_SYSV_FS_WRITE
  If you say Y here, you will be able to write to hard drive
  partitions and floppy disks which carry a SYSV file system used the
  commercial Unixes SCO, Xenix and Coherent. 

  This support is experimental and you may destroy your data. If
  unsure, say N.

Amiga FFS file system support
CONFIG_AFFS_FS
  The Fast File System (FFS) is the common file system used on hard
  disks by Amiga(tm) systems since AmigaOS Version 1.3 (34.20). Say Y
  if you want to be able to read and write files from and to an Amiga
  FFS partition on your hard drive. Amiga floppies however cannot be
  read with this driver due to an incompatibility of the floppy
  controller used in an Amiga and the standard floppy controller in
  PCs and workstations. Read Documentation/filesystems/affs.txt and
  fs/affs/Changes. 

  With this driver you can also mount disk files used by Bernd
  Schmidt's Un*X Amiga Emulator (http://www.freiburg.linux.de/~uae/ ).
  If you want to do this, you will also need to say Y or M to "Loop
  device support", above.

  This file system is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module is called affs.o. If you want to compile it as a module,
  say M here and read Documentation/modules.txt. If unsure, say N.

Apple Macintosh file system support (EXPERIMENTAL)
CONFIG_HFS_FS
  If you say Y here, you will be able to mount Macintosh-formatted
  floppy disks and hard drive partitions with full read-write access.
  Please read fs/hfs/HFS.txt to learn about the available mount
  options. 

  This file system support is also available as a module ( = code
  which can be inserted in and removed from the running kernel
  whenever you want). The module is called hfs.o. If you want to
  compile it as a module, say M here and read
  Documentation/modules.txt.

ROM file system support
CONFIG_ROMFS_FS
  This is a very small read-only file system mainly intended for
  initial ram disks of installation disks, but it could be used for
  other read-only media as well. Read
  Documentation/filesystems/romfs.txt for details. 

  This file system support is also available as a module ( = code
  which can be inserted in and removed from the running kernel
  whenever you want). The module is called romfs.o. If you want to
  compile it as a module, say M here and read
  Documentation/modules.txt. Note that the file system of your root
  partition (the one containing the directory /) cannot be a module.

  If you don't know whether you need it, then you don't need it:
  answer N.

QNX4 file system support (read only) (EXPERIMENTAL)
CONFIG_QNX4FS_FS
  This is the file system used by the operating system QNX 4. Say Y if
  you intend to mount QNX hard disks or floppies. Unless you say Y to
  "QNX4FS read-write support" below, you will only be able to read
  these file systems.

  This file system support is also available as a module ( = code
  which can be inserted in and removed from the running kernel
  whenever you want). The module is called qnx4.o. If you want to
  compile it as a module, say M here and read
  Documentation/modules.txt.

  If you don't know whether you need it, then you don't need it:
  answer N.

QNX4FS write support (DANGEROUS)
CONFIG_QNX4FS_RW
  Say Y if you want to test write support for QNX4 file systems.

Kernel automounter support
CONFIG_AUTOFS_FS
  The automounter is a tool to automatically mount remote file systems
  on demand. This implementation is partially kernel-based to reduce
  overhead in the already-mounted case; this is unlike the BSD
  automounter (amd), which is a pure user space daemon.

  To use the automounter you need the user-space tools from the autofs
  package; you can find the location in Documentation/Changes. You
  also want to answer Y to "NFS file system support", below.

  If you want to use the newer version of the automounter with more
  features, say N here and say Y to "Kernel automounter v4 support",
  below.

  If you want to compile this as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt. The module will be
  called autofs.o. 

  If you are not a part of a fairly large, distributed network, you
  probably do not need an automounter, and can say N here.

Kernel automounter v4 support
CONFIG_AUTOFS4_FS
  The automounter is a tool to automatically mount remote file systems
  on demand. This implementation is partially kernel-based to reduce
  overhead in the already-mounted case; this is unlike the BSD
  automounter (amd), which is a pure user space daemon.

  To use the automounter you need the user-space tools from
  ftp://ftp.kernel.org/pub/linux/daemons/autofs/testing-v4 ; you also
  want to answer Y to "NFS file system support", below.

  If you want to compile this as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt. The module will be
  called autofs4.o.  You will need to add "alias autofs autofs4" to
  your modules configuration file.

  If you are not a part of a fairly large, distributed network or
  don't have a laptop which needs to dynamically reconfigure to the
  local network, you probably do not need an automounter, and can say
  N here.

EFS file system support (read-only) (EXPERIMENTAL)
CONFIG_EFS_FS
  EFS is an older file system used for non-ISO9660 CDROMs and hard
  disk partitions by SGI's IRIX operating system (IRIX 6.0 and newer
  uses the XFS file system for hard disk partitions however).

  This implementation only offers read-only access. If you don't know
  what all this is about, it's safe to say N. For more information
  about EFS see its home page at http://aeschi.ch.eu.org/efs/ .

  If you want to compile the EFS file system support as a module ( =
  code which can be inserted in and removed from the running kernel
  whenever you want), say M here and read Documentation/modules.txt.
  The module will be called efs.o. 

Journalling Flash File System (JFFS) support (EXPERIMENTAL)
CONFIG_JFFS_FS
  JFFS is a new file system designed for use on flash memory devices
  rather than on block devices. It was developed on the 2.0 kernel
  by Axis Communications AB for use on their Linux-based products,
  and released under GPL, then 'borrowed' and ported to work with 
  the 2.4 kernel and the new Memory Technology Device system. 

  The 2.4 port is experimental and not yet supported by Axis. Basically,
  the good bits are probably theirs, and if it's broken in 2.4 it's 
  probably our fault. See http://www.developer.axis.com/software/jffs/
  for more information about JFFS.

  Any potential patches or queries should be sent to Axis' mailing 
  list for JFFS: <jffs-dev@axis.com>

UFS file system support (read-only)
CONFIG_UFS_FS
  BSD and derivate versions of Unix (such as SunOS, FreeBSD, NetBSD,
  OpenBSD and NeXTstep) use a file system called UFS. Some System V
  Unixes can create and mount hard disk partitions and diskettes using
  this file system as well. Saying Y here will allow you to read from
  these partitions; if you also want to write to them, say Y to the
  experimental "UFS file system write support", below. Please read the
  file Documentation/filesystems/ufs.txt for more information.

  If you only intend to mount files from some other Unix over the
  network using NFS, you don't need the UFS file system support (but
  you need NFS file system support obviously). 

  Note that this option is generally not needed for floppies, since a
  good portable way to transport files and directories between unixes
  (and even other operating systems) is given by the tar program ("man
  tar" or preferably "info tar").

  When accessing NeXTstep files, you may need to convert them from the
  NeXT character set to the Latin1 character set; use the program
  recode ("info recode") for this purpose. 

  If you want to compile the UFS file system support as a module ( =
  code which can be inserted in and removed from the running kernel
  whenever you want), say M here and read Documentation/modules.txt.
  The module will be called ufs.o. 

  If you haven't heard about all of this before, it's safe to say N.

UFS file system write support (DANGEROUS)
CONFIG_UFS_FS_WRITE
  Say Y here if you want to try writing to UFS partitions. This is
  experimental, so you should back up your UFS partitions beforehand.

Advanced partition selection
CONFIG_PARTITION_ADVANCED
  Say Y here if you would like to use hard disks under Linux which
  were partitioned under an operating system running on a different
  architecture than your Linux system.

  Note that the answer to this question won't directly affect the
  kernel: saying N will just cause this configure script to skip all
  the questions about foreign partitioning schemes. 

  If unsure, say N.

Alpha OSF partition support
CONFIG_OSF_PARTITION
  Say Y here if you would like to use hard disks under Linux which
  were partitioned on an Alpha machine.

Macintosh partition map support
CONFIG_MAC_PARTITION
  Say Y here if you would like to use hard disks under Linux which
  were partitioned on a Macintosh.

PC BIOS (MSDOS partition tables) support
CONFIG_MSDOS_PARTITION
  Say Y here if you would like to use hard disks under Linux which
  were partitioned on an x86 PC (not necessarily by DOS).

BSD disklabel (FreeBSD partition tables) support
CONFIG_BSD_DISKLABEL
  FreeBSD uses its own hard disk partition scheme on your PC. It
  requires only one entry in the primary partition table of your disk
  and manages it similarly to DOS extended partitions, putting in its
  first sector a new partition table in BSD disklabel format. Saying Y
  here allows you to read these disklabels and further mount FreeBSD
  partitions from within Linux if you have also said Y to "UFS
  file system support", above. If you don't know what all this is
  about, say N.

Sun partition tables support
CONFIG_SUN_PARTITION
  Like most systems, SunOS uses its own hard disk partition table
  format, incompatible with all others. Saying Y here allows you to
  read these partition tables and further mount SunOS partitions from
  within Linux if you have also said Y to "UFS file system support",
  above. This is mainly used to carry data from a SPARC under SunOS to
  your Linux box via a removable medium like magneto-optical or ZIP
  drives; note however that a good portable way to transport files and
  directories between unixes (and even other operating systems) is
  given by the tar program ("man tar" or preferably "info tar"). If
  you don't know what all this is about, say N.

Solaris (x86) partition table support
CONFIG_SOLARIS_X86_PARTITION
  Like most systems, Solaris x86 uses its own hard disk partition
  table format, incompatible with all others. Saying Y here allows you
  to read these partition tables and further mount Solaris x86
  partitions from within Linux if you have also said Y to "UFS
  file system support", above.

SGI partition support
CONFIG_SGI_PARTITION
  Say Y here if you would like to be able to read the hard disk
  partition table format used by SGI machines.

ADFS file system support (EXPERIMENTAL)
CONFIG_ADFS_FS
  The Acorn Disc Filing System is the standard file system of the
  RiscOS operating system which runs on Acorn's ARM-based Risc PC
  systems and the Acorn Archimedes range of machines. If you say Y
  here, Linux will be able to read from ADFS partitions on hard drives
  and from ADFS-formatted floppy discs. If you also want to be able to
  write to those devices, say Y to "ADFS write support" below.

  The ADFS partition should be the first partition (i.e.,
  /dev/[hs]d?1) on each of your drives. Please read the file
  Documentation/filesystems/adfs.txt for further details.

  This code is also available as a module called adfs.o ( = code which
  can be inserted in and removed from the running kernel whenever you
  want). If you want to compile it as a module, say M here and read
  Documentation/modules.txt.

  If unsure, say N.

ADFS write support (DANGEROUS)
CONFIG_ADFS_FS_RW
  If you say Y here, you will be able to write to ADFS partitions on
  hard drives and ADFS-formatted floppy disks. This is experimental
  codes, so if you're unsure, say N.

/dev/pts file system for Unix98 PTYs
CONFIG_DEVPTS_FS
  You should say Y here if you said Y to "Unix98 PTY support" above.
  You'll then get a virtual file system which can be mounted on
  /dev/pts with "mount -t devpts". This, together with the pseudo
  terminal master multiplexer /dev/ptmx, is used for pseudo terminal
  support as described in The Open Group's Unix98 standard: in order
  to acquire a pseudo terminal, a process opens /dev/ptmx; the number
  of the pseudo terminal is then made available to the process and the
  pseudo terminal slave can be accessed as /dev/pts/<number>. What was
  traditionally /dev/ttyp2 will then be /dev/pts/2, for example. 

  The GNU C library glibc 2.1 contains the requisite support for this
  mode of operation; you also need client programs that use the Unix98
  API. Please read Documentation/Changes for more information about
  the Unix98 pty devices.

  Note that the experimental "/dev file system support"
  (CONFIG_DEVFS_FS)  is a more general facility.

UnixWare slices support (EXPERIMENTAL)
CONFIG_UNIXWARE_DISKLABEL
  Like some systems, UnixWare uses its own slice table inside a
  partition (VTOC - Virtual Table of Contents). Its format is
  incompatible with all other OSes. Saying Y here allows you to read
  VTOC and further mount UnixWare partitions read-only from within
  Linux if you have also said Y to "UFS file system support" or
  "System V and Coherent file system support", above.

  This is mainly used to carry data from a UnixWare box to your
  Linux box via a removable medium like magneto-optical, ZIP or
  removable IDE drives. Note, however, that a good portable way to
  transport files and directories between unixes (and even other
  operating systems) is given by the tar program ("man tar" or
  preferably "info tar"). 

  If you don't know what all this is about, say N.

SMB file system support (to mount Windows shares etc.)
CONFIG_SMB_FS
  SMB (Server Message Block) is the protocol Windows for Workgroups
  (WfW), Windows 95/98, Windows NT and OS/2 Lan Manager use to share
  files and printers over local networks. Saying Y here allows you to
  mount their file systems (often called "shares" in this context) and
  access them just like any other Unix directory. Currently, this
  works only if the Windows machines use TCP/IP as the underlying
  transport protocol, and not NetBEUI. For details, read
  Documentation/filesystems/smbfs.txt and the SMB-HOWTO, available
  from http://www.linuxdoc.org/docs.html#howto .

  Note: if you just want your box to act as an SMB *server* and make
  files and printing services available to Windows clients (which need
  to have a TCP/IP stack), you don't need to say Y here; you can use
  the program samba (available via FTP (user: anonymous) in
  ftp://metalab.unc.edu/pub/Linux/system/network/samba ) for that.

  General information about how to connect Linux, Windows machines and
  Macs is on the WWW at http://www.eats.com/linux_mac_win.html .

  If you want to compile the SMB support as a module ( = code which
  can be inserted in and removed from the running kernel whenever you
  want), say M here and read Documentation/modules.txt. The module
  will be called smbfs.o. Most people say N, however.

use nls by default
CONFIG_SMB_NLS_DEFAULT
  Enabling this will make smbfs use nls translations by default. You
  need to specify the local charset (CONFIG_NLS_DEFAULT) in the nls
  settings and you need to give the default nls for the SMB server as
  CONFIG_SMB_NLS_REMOTE.

  The nls settings can be changed at mount time, if your smbmount
  supports that, using the codepage and iocharset parameters.

  Currently no smbmount distributed with samba supports this, it is
  assumed future versions will. In the meantime you can get an
  unofficial patch for samba 2.0.7 from:
  http://www.hojdpunkten.ac.se/054/samba/index.html

nls support setting
CONFIG_SMB_NLS_REMOTE
  This setting allows you to specify a default value for which
  codepage the server uses. If this field is left blank no
  translations will be done by default. The local codepage/charset
  default to CONFIG_NLS_DEFAULT.

  The nls settings can be changed at mount time, if your smbmount
  supports that, using the codepage and iocharset parameters.

  Currently no smbmount distributed with samba supports this, it is
  assumed future versions will. In the meantime you can get an
  unofficial patch for samba 2.0.7 from:
  http://www.hojdpunkten.ac.se/054/samba/index.html

Coda file system support (advanced network fs)
CONFIG_CODA_FS
  Coda is an advanced network file system, similar to NFS in that it
  enables you to mount file systems of a remote server and access them
  with regular Unix commands as if they were sitting on your hard
  disk. Coda has several advantages over NFS: support for disconnected
  operation (e.g. for laptops), read/write server replication,
  security model for authentication and encryption, persistent client
  caches and write back caching.

  If you say Y here, your Linux box will be able to act as a Coda
  *client*. You will need user level code as well, both for the client
  and server. Servers are currently user level, i.e. they need no
  kernel support. Please read Documentation/filesystems/coda.txt and
  check out the Coda home page http://www.coda.cs.cmu.edu .

  If you want to compile the coda client support as a module ( = code
  which can be inserted in and removed from the running kernel
  whenever you want), say M here and read Documentation/modules.txt.
  The module will be called coda.o. 

NCP file system support (to mount NetWare volumes)
CONFIG_NCP_FS
  NCP (NetWare Core Protocol) is a protocol that runs over IPX and is
  used by Novell NetWare clients to talk to file servers. It is to IPX
  what NFS is to TCP/IP, if that helps. Saying Y here allows you to
  mount NetWare file server volumes and to access them just like any
  other Unix directory. For details, please read the file
  Documentation/filesystems/ncpfs.txt in the kernel source and the
  IPX-HOWTO from http://www.linuxdoc.org/docs.html#howto .

  You do not have to say Y here if you want your Linux box to act as a
  file *server* for Novell NetWare clients.

  General information about how to connect Linux, Windows machines and
  Macs is on the WWW at http://www.eats.com/linux_mac_win.html .

  If you want to compile this as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt. The module will be
  called ncpfs.o. Say N unless you are connected to a Novell network.

Packet signatures
CONFIG_NCPFS_PACKET_SIGNING
  NCP allows packets to be signed for stronger security. If you want
  security, say Y. Normal users can leave it off. To be able to use
  packet signing you must use ncpfs > 2.0.12.

Proprietary file locking
CONFIG_NCPFS_IOCTL_LOCKING
  Allows locking of records on remote volumes. Say N unless you have
  special applications which are able to utilize this locking scheme.

Clear remove/delete inhibit when needed
CONFIG_NCPFS_STRONG
  Allows manipulation of files flagged as Delete or Rename Inhibit. To
  use this feature you must mount volumes with the ncpmount parameter
  "-s" (ncpfs-2.0.12 and newer). Say Y unless you are not mounting
  volumes with -f 444.

Use NFS namespace when available
CONFIG_NCPFS_NFS_NS
  Allows you to utilize NFS namespace on NetWare servers. It brings
  you case sensitive filenames. Say Y. You can disable it at
  mount-time with the `-N nfs' parameter of ncpmount.

Use OS2/LONG namespace when available
CONFIG_NCPFS_OS2_NS
  Allows you to utilize OS2/LONG namespace on NetWare servers.
  Filenames in this namespace are limited to 255 characters, they are
  case insensitive, and case in names is preserved. Say Y. You can
  disable it at mount time with the -N os2 parameter of ncpmount.

Lowercase DOS filenames on LONG namespace volume
CONFIG_NCPFS_SMALLDOS
  If you say Y here, every filename on a NetWare server volume using
  the OS2/LONG namespace and created under DOS or on a volume using
  DOS namespace will be converted to lowercase characters.
  Saying N here will give you these filenames in uppercase.
  
  This is only a cosmetic option since the OS2/LONG namespace is case
  insensitive. The only major reason for this option is backward
  compatibility when moving from DOS to OS2/LONG namespace support.
  Long filenames (created by Win95) will not be affected.

  This option does not solve the problem that filenames appear
  differently under Linux and under Windows, since Windows does an
  additional conversions on the client side. You can achieve similar
  effects by saying Y to "Allow using of Native Language Support"
  below.

Allow mounting of volume subdirectories
CONFIG_NCPFS_MOUNT_SUBDIR
  Allows you to mount not only whole servers or whole volumes, but
  also subdirectories from a volume. It can be used to reexport data
  and so on. There is no reason to say N, so Y is recommended unless
  you count every byte.

  To utilize this feature you must use ncpfs-2.0.12 or newer.

NDS authentication support
CONFIG_NCPFS_NDS_DOMAINS
  This allows storing NDS private keys in kernel space where they
  can be used to authenticate another server as interserver NDS
  accesses need it. You must use ncpfs-2.0.12.1 or newer to utilize
  this feature. Say Y if you are using NDS connections to NetWare
  servers. Do not say Y if security is primary for you because root
  can read your session key (from /proc/kcore).

Allow using of Native Language Support
CONFIG_NCPFS_NLS
  Allows you to use codepages and I/O charsets for file name
  translation between the server file system and input/output. This
  may be useful, if you want to access the server with other operating
  systems, e.g. Windows 95. See also NLS for more Information.

  To select codepages and I/O charsets use ncpfs-2.2.0.13 or newer.

Symbolic links and mode permission bits
CONFIG_NCPFS_EXTRAS
  This enables the use of symbolic links and an execute permission
  bit on NCPFS. The file server need not have long name space or NFS
  name space loaded for these to work.

  To use the new attributes, it is recommended to use the flags
  '-f 600 -d 755' on the ncpmount command line.

nls default codepage
CONFIG_NLS_DEFAULT
  The default NLS used when mounting filesystem. Currently, the valid
  values are:
  big5, cp437, cp737, cp775, cp850, cp852, cp855, cp857, cp860, cp861,
  cp862, cp863, cp864, cp865, cp866, cp869, cp874, cp932, cp936,
  cp949, cp950, euc-jp, euc-kr, gb2312, iso8859-1, iso8859-2, iso8859-3,
  iso8859-4, iso8859-5, iso8859-6, iso8859-7, iso8859-8, iso8859-9,
  iso8859-14, iso8859-15, koi8-r, sjis
  If you specify a wrong value, it will use the built-in NLS; compatible
  with iso8859-1.

  If unsure, specify it as "iso8859-1".

nls codepage 437
CONFIG_NLS_CODEPAGE_437
  The Microsoft FAT file system family can deal with filenames in
  native language character sets. These character sets are stored
  in so-called DOS codepages. You need to include the appropriate
  codepage if you want to be able to read/write these filenames on
  DOS/Windows partitions correctly. This does apply to the filenames
  only, not to the file contents. You can include several codepages;
  say Y here if you want to include the DOS codepage that is used in
  the United States and parts of Canada. This is recommended.

nls codepage 737
CONFIG_NLS_CODEPAGE_737
  The Microsoft FAT file system family can deal with filenames in
  native language character sets. These character sets are stored
  in so-called DOS codepages. You need to include the appropriate
  codepage if you want to be able to read/write these filenames on
  DOS/Windows partitions correctly. This does apply to the filenames
  only, not to the file contents. You can include several codepages;
  say Y here if you want to include the DOS codepage that is used for
  Greek. If unsure, say N.

nls codepage 775
CONFIG_NLS_CODEPAGE_775
  The Microsoft FAT file system family can deal with filenames in
  native language character sets. These character sets are stored
  in so-called DOS codepages. You need to include the appropriate
  codepage if you want to be able to read/write these filenames on
  DOS/Windows partitions correctly. This does apply to the filenames
  only, not to the file contents. You can include several codepages;
  say Y here if you want to include the DOS codepage that is used
  for the Baltic Rim Languages. If unsure, say N.

nls codepage 850
CONFIG_NLS_CODEPAGE_850
  The Microsoft FAT file system family can deal with filenames in
  native language character sets. These character sets are stored in
  so-called DOS codepages. You need to include the appropriate
  codepage if you want to be able to read/write these filenames on
  DOS/Windows partitions correctly. This does apply to the filenames
  only, not to the file contents. You can include several codepages;
  say Y here if you want to include the DOS codepage that is used for
  much of Europe -- United Kingdom, Germany, Spain, Italy, and [add
  more countries here]. It has some characters useful to many European
  languages that are not part of the US codepage 437. 

  If unsure, say Y.

nls codepage 852
CONFIG_NLS_CODEPAGE_852
  The Microsoft FAT file system family can deal with filenames in
  native language character sets. These character sets are stored in
  so-called DOS codepages. You need to include the appropriate
  codepage if you want to be able to read/write these filenames on
  DOS/Windows partitions correctly. This does apply to the filenames
  only, not to the file contents. You can include several codepages;
  say Y here if you want to include the Latin 2 codepage used by DOS
  for much of Central and Eastern Europe. It has all the required
  characters for these languages: Albanian, Croatian, Czech, English,
  Finnish, Hungarian, Irish, German, Polish, Romanian, Serbian (Latin
  transcription), Slovak, Slovenian, and Sorbian.

nls codepage 855
CONFIG_NLS_CODEPAGE_855
  The Microsoft FAT file system family can deal with filenames in
  native language character sets. These character sets are stored in
  so-called DOS codepages. You need to include the appropriate
  codepage if you want to be able to read/write these filenames on
  DOS/Windows partitions correctly. This does apply to the filenames
  only, not to the file contents. You can include several codepages;
  say Y here if you want to include the DOS codepage for Cyrillic.

nls codepage 857
CONFIG_NLS_CODEPAGE_857
  The Microsoft FAT file system family can deal with filenames in
  native language character sets. These character sets are stored in
  so-called DOS codepages. You need to include the appropriate
  codepage if you want to be able to read/write these filenames on
  DOS/Windows partitions correctly. This does apply to the filenames
  only, not to the file contents. You can include several codepages;
  say Y here if you want to include the DOS codepage for Turkish.

nls codepage 860
CONFIG_NLS_CODEPAGE_860
  The Microsoft FAT file system family can deal with filenames in
  native language character sets. These character sets are stored in
  so-called DOS codepages. You need to include the appropriate
  codepage if you want to be able to read/write these filenames on
  DOS/Windows partitions correctly. This does apply to the filenames
  only, not to the file contents. You can include several codepages;
  say Y here if you want to include the DOS codepage for Portuguese.

nls codepage 861
CONFIG_NLS_CODEPAGE_861
  The Microsoft FAT file system family can deal with filenames in
  native language character sets. These character sets are stored in
  so-called DOS codepages. You need to include the appropriate
  codepage if you want to be able to read/write these filenames on
  DOS/Windows partitions correctly. This does apply to the filenames
  only, not to the file contents. You can include several codepages;
  say Y here if you want to include the DOS codepage for Icelandic.

nls codepage 862
CONFIG_NLS_CODEPAGE_862
  The Microsoft FAT file system family can deal with filenames in
  native language character sets. These character sets are stored in
  so-called DOS codepages. You need to include the appropriate
  codepage if you want to be able to read/write these filenames on
  DOS/Windows partitions correctly. This does apply to the filenames
  only, not to the file contents. You can include several codepages;
  say Y here if you want to include the DOS codepage for Hebrew.

nls codepage 863
CONFIG_NLS_CODEPAGE_863
  The Microsoft FAT file system family can deal with filenames in
  native language character sets. These character sets are stored in
  so-called DOS codepages. You need to include the appropriate
  codepage if you want to be able to read/write these filenames on
  DOS/Windows partitions correctly. This does apply to the filenames
  only, not to the file contents. You can include several codepages;
  say Y here if you want to include the DOS codepage for Canadian
  French.

nls codepage 864
CONFIG_NLS_CODEPAGE_864
  The Microsoft FAT file system family can deal with filenames in
  native language character sets. These character sets are stored in
  so-called DOS codepages. You need to include the appropriate
  codepage if you want to be able to read/write these filenames on
  DOS/Windows partitions correctly. This does apply to the filenames
  only, not to the file contents. You can include several codepages;
  say Y here if you want to include the DOS codepage for Arabic.

nls codepage 865
CONFIG_NLS_CODEPAGE_865
  The Microsoft FAT file system family can deal with filenames in
  native language character sets. These character sets are stored in
  so-called DOS codepages. You need to include the appropriate
  codepage if you want to be able to read/write these filenames on
  DOS/Windows partitions correctly. This does apply to the filenames
  only, not to the file contents. You can include several codepages;
  say Y here if you want to include the DOS codepage for the Nordic
  European countries.

nls codepage 866
CONFIG_NLS_CODEPAGE_866
  The Microsoft FAT file system family can deal with filenames in
  native language character sets. These character sets are stored in
  so-called DOS codepages. You need to include the appropriate
  codepage if you want to be able to read/write these filenames on
  DOS/Windows partitions correctly. This does apply to the filenames
  only, not to the file contents. You can include several codepages;
  say Y here if you want to include the DOS codepage for
  Cyrillic/Russian.

nls codepage 869
CONFIG_NLS_CODEPAGE_869
  The Microsoft FAT file system family can deal with filenames in
  native language character sets. These character sets are stored in
  so-called DOS codepages. You need to include the appropriate
  codepage if you want to be able to read/write these filenames on
  DOS/Windows partitions correctly. This does apply to the filenames
  only, not to the file contents. You can include several codepages;
  say Y here if you want to include the DOS codepage for Greek.

nls codepage 874
CONFIG_NLS_CODEPAGE_874
  The Microsoft FAT file system family can deal with filenames in
  native language character sets. These character sets are stored in
  so-called DOS codepages. You need to include the appropriate
  codepage if you want to be able to read/write these filenames on
  DOS/Windows partitions correctly. This does apply to the filenames
  only, not to the file contents. You can include several codepages;
  say Y here if you want to include the DOS codepage for Thai.

nls codepage 932
CONFIG_NLS_CODEPAGE_932
  The Microsoft fat filesystem family can deal with filenames in
  native language character sets. These character sets are stored in
  so-called DOS codepages. You need to include the appropriate
  codepage if you want to be able to read/write these filenames on
  DOS/Windows partitions correctly. This does apply to the filenames
  only, not to the file contents. You can include several codepages;
  say Y here if you want to include the DOS codepage for Shift-JIS
  or EUC-JP. To use EUC-JP, you can use 'euc-jp' as mount option or
  NLS Default value during kernel configuration , instead of 'cp932'

nls codepage 936
CONFIG_NLS_CODEPAGE_936
  The Microsoft fat filesystem family can deal with filenames in
  native language character sets. These character sets are stored in
  so-called DOS codepages. You need to include the appropriate
  codepage if you want to be able to read/write these filenames on
  DOS/Windows partitions correctly. This does apply to the filenames
  only, not to the file contents. You can include several codepages;
  say Y here if you want to include the DOS codepage for Simplified
  Chinese(GBK).

nls codepage 949
CONFIG_NLS_CODEPAGE_949
  The Microsoft fat filesystem family can deal with filenames in
  native language character sets. These character sets are stored in
  so-called DOS codepages. You need to include the appropriate
  codepage if you want to be able to read/write these filenames on
  DOS/Windows partitions correctly. This does apply to the filenames
  only, not to the file contents. You can include several codepages;
  say Y here if you want to include the DOS codepage for UHC.

nls codepage 950
CONFIG_NLS_CODEPAGE_950
  The Microsoft fat filesystem family can deal with filenames in
  native language character sets. These character sets are stored in
  so-called DOS codepages. You need to include the appropriate
  codepage if you want to be able to read/write these filenames on
  DOS/Windows partitions correctly. This does apply to the filenames
  only, not to the file contents. You can include several codepages;
  say Y here if you want to include the DOS codepage for Traditional
  Chinese(Big5).

nls iso8859-1
CONFIG_NLS_ISO8859_1
  If you want to display filenames with native language characters
  from the Microsoft FAT file system family or from JOLIET CDROMs
  correctly on the screen, you need to include the appropriate
  input/output character sets. Say Y here for the Latin 1 character
  set, which covers most West European languages such as Albanian,
  Catalan, Danish, Dutch, English, Faeroese, Finnish, French, German,
  Galician, Irish, Icelandic, Italian, Norwegian, Portuguese, Spanish,
  and Swedish. It is also the default for the US. If unsure, say Y.

nls iso8859-2
CONFIG_NLS_ISO8859_2
  If you want to display filenames with native language characters
  from the Microsoft FAT file system family or from JOLIET CDROMs
  correctly on the screen, you need to include the appropriate
  input/output character sets. Say Y here for the Latin 2 character
  set, which works for most Latin-written Slavic and Central European
  languages: Czech, German, Hungarian, Polish, Rumanian, Croatian,
  Slovak, Slovene.

nls iso8859-3
CONFIG_NLS_ISO8859_3
  If you want to display filenames with native language characters
  from the Microsoft FAT file system family or from JOLIET CDROMs
  correctly on the screen, you need to include the appropriate
  input/output character sets. Say Y here for the Latin 3 character
  set, which is popular with authors of Esperanto, Galician, Maltese,
  and Turkish.

nls iso8859-4
CONFIG_NLS_ISO8859_4
  If you want to display filenames with native language characters
  from the Microsoft FAT file system family or from JOLIET CDROMs
  correctly on the screen, you need to include the appropriate
  input/output character sets. Say Y here for the Latin 4 character
  set which introduces letters for Estonian, Latvian, and
  Lithuanian. It is an incomplete predecessor of Latin 6.

nls iso8859-5
CONFIG_NLS_ISO8859_5
  If you want to display filenames with native language characters
  from the Microsoft FAT file system family or from JOLIET CDROMs
  correctly on the screen, you need to include the appropriate
  input/output character sets. Say Y here for ISO8859-5, a Cyrillic
  character set with which you can type Bulgarian, Byelorussian,
  Macedonian, Russian, Serbian, and Ukrainian. Note that the charset
  KOI8-R is preferred in Russia.

nls iso8859-6
CONFIG_NLS_ISO8859_6
  If you want to display filenames with native language characters
  from the Microsoft FAT file system family or from JOLIET CDROMs
  correctly on the screen, you need to include the appropriate
  input/output character sets. Say Y here for ISO8859-6, the Arabic
  character set.

nls iso8859-7
CONFIG_NLS_ISO8859_7
  If you want to display filenames with native language characters
  from the Microsoft FAT file system family or from JOLIET CDROMs
  correctly on the screen, you need to include the appropriate
  input/output character sets. Say Y here for ISO8859-7, the Modern
  Greek character set.

nls iso8859-8
CONFIG_NLS_ISO8859_8
  If you want to display filenames with native language characters
  from the Microsoft FAT file system family or from JOLIET CDROMs
  correctly on the screen, you need to include the appropriate
  input/output character sets. Say Y here for ISO8859-8, the Hebrew
  character set.

nls iso8859-9
CONFIG_NLS_ISO8859_9
  If you want to display filenames with native language characters
  from the Microsoft FAT file system family or from JOLIET CDROMs
  correctly on the screen, you need to include the appropriate
  input/output character sets. Say Y here for the Latin 5 character
  set, and it replaces the rarely needed Icelandic letters in Latin 1
  with the Turkish ones. Useful in Turkey.

nls iso8859-10
CONFIG_NLS_ISO8859_10
  If you want to display filenames with native language characters
  from the Microsoft FAT file system family or from JOLIET CDROMs
  correctly on the screen, you need to include the appropriate
  input/output character sets. Say Y here for the Latin 6 character
  set, which adds the last Inuit (Greenlandic) and Sami (Lappish)
  letters that were missing in Latin 4 to cover the entire Nordic
  area.

NLS ISO 8859-14 (Latin 8; Celtic)
CONFIG_NLS_ISO8859_14
  If you want to display filenames with native language characters
  from the Microsoft FAT file system family or from JOLIET CDROMs
  correctly on the screen, you need to include the appropriate
  input/output character sets. Say Y here for the Latin 8 character
  set, which adds the last accented vowels for Welsh (aka Cymraeg)
  (and Manx Gaelic) hat were missing in Latin 1.
  http://linux.speech.cymru.org/ has further information.

nls iso8859-15
CONFIG_NLS_ISO8859_15
  If you want to display filenames with native language characters
  from the Microsoft FAT file system family or from JOLIET CDROMs
  correctly on the screen, you need to include the appropriate
  input/output character sets. Say Y here for the Latin 9 character
  set, which covers most West European languages such as Albanian,
  Catalan, Danish, Dutch, English, Estonian, Faeroese, Finnish,
  French, German, Galician, Irish, Icelandic, Italian, Norwegian,
  Portuguese, Spanish, and Swedish. Latin 9 is an update to
  Latin 1 (ISO 8859-1) that removes a handful of rarely used
  characters and instead adds support for Estonian, corrects the
  support for French and Finnish, and adds the new Euro character.  If
  unsure, say Y.

nls koi8-r
CONFIG_NLS_KOI8_R
  If you want to display filenames with native language characters
  from the Microsoft FAT file system family or from JOLIET CDROMs
  correctly on the screen, you need to include the appropriate
  input/output character sets. Say Y here for the preferred Russian
  character set.

Virtual terminal
CONFIG_VT
  If you say Y here, you will get support for terminal devices with
  display and keyboard devices. These are called "virtual" because you
  can run several virtual terminals (also called virtual consoles) on
  one physical terminal. This is rather useful, for example one
  virtual terminal can collect system messages and warnings, another
  one can be used for a text-mode user session, and a third could run
  an X session, all in parallel. Switching between virtual terminals
  is done with certain key combinations, usually Alt-<function key>.

  The setterm command ("man setterm") can be used to change the
  properties (such as colors or beeping) of a virtual terminal. The
  man page console_codes(4) ("man console_codes") contains the special
  character sequences that can be used to change those properties
  directly. The fonts used on virtual terminals can be changed with
  the setfont ("man setfont") command and the key bindings are defined
  with the loadkeys ("man loadkeys") command.

  You need at least one virtual terminal device in order to make use
  of your keyboard and monitor. Therefore, only people configuring an
  embedded system would want to say N here in order to save some
  memory; the only way to log into such a system is then via a serial
  or network connection.

  If unsure, say Y, or else you won't be able to do much with your new
  shiny Linux system :-)

Support for console on virtual terminal
CONFIG_VT_CONSOLE
  The system console is the device which receives all kernel messages
  and warnings and which allows logins in single user mode. If you
  answer Y here, a virtual terminal (the device used to interact with
  a physical terminal) can be used as system console. This is the most
  common mode of operations, so you should say Y here unless you want
  the kernel messages be output only to a serial port (in which case
  you should say Y to "Console on serial port", below).

  If you do say Y here, by default the currently visible virtual
  terminal (/dev/tty0) will be used as system console. You can change
  that with a kernel command line option such as "console=tty3" which
  would use the third virtual terminal as system console. (Try "man
  bootparam" or see the documentation of your boot loader (lilo or
  loadlin) about how to pass options to the kernel at boot time.)

  If unsure, say Y.

Support for PowerMac keyboard
CONFIG_MAC_KEYBOARD
  This option allows you to use an ADB keyboard attached to your
  machine. Note that this disables any other (ie. PS/2) keyboard
  support, even if your machine is physically capable of using both at
  the same time.
  
  If you use an ADB keyboard (4 pin connector), say Y here.
  If you use a PS/2 keyboard (6 pin connector), say N here.

Standard/generic serial support
CONFIG_SERIAL
  This selects whether you want to include the driver for the standard
  serial ports. The standard answer is Y. People who might say N here
  are those that are setting up dedicated Ethernet WWW/FTP servers, or
  users that have one of the various bus mice instead of a serial
  mouse and don't intend to use their machine's standard serial port
  for anything. (Note that the Cyclades and Stallion multi serial port
  drivers do not need this driver built in for them to work.)

  If you want to compile this driver as a module, say M here and read
  Documentation/modules.txt. The module will be called serial.o.
  [WARNING: Do not compile this driver as a module if you are using
  non-standard serial ports, since the configuration information will
  be lost when the driver is unloaded. This limitation may be lifted
  in the future.]

  BTW1: If you have a mouseman serial mouse which is not recognized by
  the X window system, try running gpm first. 
  
  BTW2: If you intend to use a software modem (also called Winmodem)
  under Linux, forget it. These modems are crippled and require
  proprietary drivers which are only available under Windows.

  Most people will say Y or M here, so that they can use serial mice,
  modems and similar devices connecting to the standard serial ports.

Support for console on serial port
CONFIG_SERIAL_CONSOLE
  If you say Y here, it will be possible to use a serial port as the
  system console (the system console is the device which receives all
  kernel messages and warnings and which allows logins in single user
  mode). This could be useful if some terminal or printer is connected
  to that serial port.

  Even if you say Y here, the currently visible virtual console
  (/dev/tty0) will still be used as the system console by default, but
  you can alter that using a kernel command line option such as
  "console=ttyS1". (Try "man bootparam" or see the documentation of
  your boot loader (lilo or loadlin) about how to pass options to the
  kernel at boot time.)

  If you don't have a VGA card installed and you say Y here, the
  kernel will automatically use the first serial line, /dev/ttyS0, as
  system console.

  If unsure, say N.

Support for PowerMac serial ports
CONFIG_MAC_SERIAL
  If you have Macintosh style serial ports (8 pin mini-DIN), say Y
  here. If you also have regular serial ports and enable the driver
  for them, you can't currently use the serial console feature.

Comtrol Rocketport support
CONFIG_ROCKETPORT
  This is a driver for the Comtrol Rocketport cards which provide
  multiple serial ports. You would need something like this to connect
  more than two modems to your Linux box, for instance in order to
  become a dial-in server.

  If you want to compile this driver as a module, say M here and read
  Documentation/modules.txt. The module will be called rocket.o.

Digiboard Intelligent async support
CONFIG_DIGIEPCA
  This is a driver for Digi International's Xx, Xeve, and Xem series
  of cards which provide multiple serial ports. You would need
  something like this to connect more than two modems to your Linux
  box, for instance in order to become a dial-in server. This driver
  supports the original PC (ISA) boards as well as PCI, and EISA. If
  you have a card like this, say Y here and read the file
  Documentation/digiepca.txt.

  NOTE: There is another, separate driver for the Digiboard PC boards:
  "Digiboard PC/Xx Support" below. You should (and can) only select
  one of the two drivers. 

  If you want to compile this driver as a module, say M here and read
  Documentation/modules.txt. The module will be called epca.o.

Digiboard PC/Xx Support
CONFIG_DIGI
  This is a driver for the Digiboard PC/Xe, PC/Xi, and PC/Xeve cards
  that give you many serial ports. You would need something like this
  to connect more than two modems to your Linux box, for instance in
  order to become a dial-in server. If you have a card like that, say
  Y here and read the file Documentation/digiboard.txt.

  If you want to compile this driver as a module, say M here and read
  Documentation/modules.txt. The module will be called pcxx.o.

SDL RISCom/8 card support
CONFIG_RISCOM8
  This is a driver for the SDL Communications RISCom/8 multiport card,
  which gives you many serial ports. You would need something like
  this to connect more than two modems to your Linux box, for instance
  in order to become a dial-in server. If you have a card like that,
  say Y here and read the file Documentation/riscom8.txt.

  Also it's possible to say M here and compile this driver as kernel
  loadable module; the module will be called riscom8.o.

Computone IntelliPort Plus serial support
CONFIG_COMPUTONE
  This driver supports the entire family of Intelliport II/Plus
  controllers with the exception of the MicroChannel controllers and 
  products previous to the Intelliport II. These are multiport cards,
  which give you many serial ports. You would need something like 
  this to connect more than two modems to your Linux box, for 
  instance in order to become a dial-in server. If you have a
  card like that, say Y here and read Documentation/computone.txt.

  If you want to compile this as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt. You will get two
  modules called ip2.o and ip2main.o.

Specialix IO8+ card support
CONFIG_SPECIALIX
  This is a driver for the Specialix IO8+ multiport card (both the
  ISA and the PCI version) which gives you many serial ports. You 
  would need something like this to connect more than two modems to 
  your Linux box, for instance in order to become a dial-in server.

  If you have a card like that, say Y here and read the file
  Documentation/specialix.txt. Also it's possible to say M here and
  compile this driver as kernel loadable module which will be called
  specialix.o.

Specialix DTR/RTS pin is RTS
CONFIG_SPECIALIX_RTSCTS
  The Specialix card can only support either RTS or DTR. If you say N
  here, the driver will use the pin as "DTR" when the tty is in
  software handshake mode. If you say Y here or hardware handshake is
  on, it will always be RTS. Read the file Documentation/specialix.txt
  for more information.

Cyclades async mux support
CONFIG_CYCLADES
  This is a driver for a card that gives you many serial ports. You
  would need something like this to connect more than two modems to
  your Linux box, for instance in order to become a dial-in server.
  For information about the Cyclades-Z card, read
  drivers/char/README.cycladesZ.

  As of 1.3.9x kernels, this driver's minor numbers start at 0 instead
  of 32.

  If you want to compile this as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt. The module will be
  called cyclades.o. 

  If you haven't heard about it, it's safe to say N.

Cyclades-Z interrupt mode operation (EXPERIMENTAL)
CONFIG_CYZ_INTR
  The Cyclades-Z family of multiport cards allows 2 (two) driver op
  modes: polling and interrupt. In polling mode, the driver will check
  the status of the Cyclades-Z ports every certain amount of time
  (which is called polling cycle and is configurable). In interrupt
  mode, it will use an interrupt line (IRQ) in order to check the
  status of the Cyclades-Z ports. The default op mode is polling. If
  unsure, say N.

Stallion multiport serial support 
CONFIG_STALDRV
  Stallion cards give you many serial ports. You would need something
  like this to connect more than two modems to your Linux box, for
  instance in order to become a dial-in server. If you say Y here, you
  will be asked for your specific card model in the next questions.
  Make sure to read drivers/char/README.stallion in this case. If you
  have never heard about all this, it's safe to say N.

Stallion EasyIO or EC8/32 support 
CONFIG_STALLION
  If you have an EasyIO or EasyConnection 8/32 multiport Stallion
  card, then this is for you; say Y. Make sure to read
  Documentation/stallion.txt. 

  If you want to compile this as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt. The module will be
  called stallion.o.

Stallion EC8/64, ONboard, Brumby support
CONFIG_ISTALLION
  If you have an EasyConnection 8/64, ONboard, Brumby or Stallion
  serial multiport card, say Y here. Make sure to read
  Documentation/stallion.txt. 

  To compile it as a module ( = code which can be inserted in and
  removed from the running kernel whenever you want), say M here and
  read Documentation/modules.txt. The module will be called
  istallion.o.

Microgate SyncLink adapter support
CONFIG_SYNCLINK
  Provides support for the SyncLink ISA and PCI
  multiprotocol serial adapters. These adapters
  support asynchronous and HDLC bit synchronous
  communication up to 10Mbps (PCI adapter).

  This driver can only be built as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called synclink.o. If you want to do that, say M
  here.

Synchronous HDLC line discipline support
CONFIG_N_HDLC
  Allows synchronous HDLC communications with tty device drivers that
  support synchronous HDLC such as the Microgate SyncLink adapter.

  This driver can only be built as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called n_hdlc.o. If you want to do that, say M
  here.

Specialix SX (and SI) card support
CONFIG_SX
  This is a driver for the SX and SI multiport serial cards.
  Please read the file Documentation/sx.txt for details.

  This driver can only be built as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called sx.o. If you want to do that, say M here.

Hayes ESP serial port support
CONFIG_ESPSERIAL
  This is a driver which supports Hayes ESP serial ports. Both single
  port cards and multiport cards are supported. Make sure to read
  Documentation/hayes-esp.txt. 

  To compile this driver as a module ( = code which can be inserted in
  and removed from the running kernel whenever you want), say M here
  and read Documentation/modules.txt. The module will be called esp.o.
  If unsure, say N.

Moxa Intellio support
CONFIG_MOXA_INTELLIO
  Say Y here if you have a Moxa Intellio multiport serial card.

  This driver can also be built as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called moxa.o. If you want to do that, say M
  here.

Moxa SmartIO support
CONFIG_MOXA_SMARTIO
  Say Y here if you have a Moxa SmartIO multiport serial card.

  This driver can also be built as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called mxser.o. If you want to do that, say M
  here.

Multi-Tech multiport card support (EXPERIMENTAL)
CONFIG_ISI
  This is a driver for the Multi-Tech cards which provide several
  serial ports. The driver is experimental and can currently only be
  built as a module ( = code which can be inserted in and removed from
  the running kernel whenever you want). Please read
  Documentation/modules.txt. The module will be called isicom.o

Unix98 PTY support
CONFIG_UNIX98_PTYS
  A pseudo terminal (PTY) is a software device consisting of two
  halves: a master and a slave. The slave device behaves identical to
  a physical terminal; the master device is used by a process to
  read data from and write data to the slave, thereby emulating a
  terminal. Typical programs for the master side are telnet servers
  and xterms.
  
  Linux has traditionally used the BSD-like names /dev/ptyxx for
  masters and /dev/ttyxx for slaves of pseudo terminals. This scheme
  has a number of problems. The GNU C library glibc 2.1 and later,
  however, supports the Unix98 naming standard: in order to acquire a
  pseudo terminal, a process opens /dev/ptmx; the number of the pseudo
  terminal is then made available to the process and the pseudo
  terminal slave can be accessed as /dev/pts/<number>. What was
  traditionally /dev/ttyp2 will then be /dev/pts/2, for example.

  The entries in /dev/pts/ are created on the fly by a virtual
  file system; therefore, if you say Y here you should say Y to
  "/dev/pts file system for Unix98 PTYs" as well.

  If you want to say Y here, you need to have the C library glibc 2.1
  or later (equal to libc-6.1, check with "ls -l /lib/libc.so.*").
  Read the instructions in Documentation/Changes pertaining to pseudo
  terminals. It's safe to say N.

Maximum number of Unix98 PTYs in use (0-2048)
CONFIG_UNIX98_PTY_COUNT
  The maximum number of Unix98 PTYs that can be used at any one time.
  The default is 256, and should be enough for desktop systems. Server
  machines which support incoming telnet/rlogin/ssh connections and/or
  serve several X terminals may want to increase this: every incoming
  connection and every xterm uses up one PTY.

  When not in use, each additional set of 256 PTYs occupy
  approximately 8 KB of kernel memory on 32-bit architectures.

Parallel printer support
CONFIG_PRINTER
  If you intend to attach a printer to the parallel port of your Linux
  box (as opposed to using a serial printer; if the connector at the
  printer has 9 or 25 holes ["female"], then it's serial), say Y. Also
  read the Printing-HOWTO, available from
  http://www.linuxdoc.org/docs.html#howto .

  It is possible to share one parallel port among several devices
  (e.g. printer and ZIP drive) and it is safe to compile the
  corresponding drivers into the kernel. If you want to compile this
  driver as a module however ( = code which can be inserted in and
  removed from the running kernel whenever you want), say M here and
  read Documentation/modules.txt and Documentation/parport.txt. The 
  module will be called lp.o. 

  If you have several parallel ports, you can specify which ports to
  use with the "lp" kernel command line option. (Try "man bootparam"
  or see the documentation of your boot loader (lilo or loadlin) about
  how to pass options to the kernel at boot time.) The syntax of the
  "lp" command line option can be found in drivers/char/lp.c.

  If you have more than 3 printers, you need to increase the LP_NO
  variable in lp.c.

Support for console on line printer
CONFIG_LP_CONSOLE
  If you want kernel messages to be printed out as they occur, you
  can have a console on the printer. This option adds support for
  doing that; to actually get it to happen you need to pass the
  option "console=lp0" to the kernel at boot time.

  Note that kernel messages can get lost if the printer is out of
  paper (or off, or unplugged, or too busy..), but this behaviour
  can be changed. See drivers/char/lp.c (do this at your own risk).

  If unsure, say N.

Support for user-space parallel port device drivers
CONFIG_PPDEV
  Saying Y to this adds support for /dev/parport device nodes.  This
  is needed for programs that want portable access to the parallel
  port, for instance deviceid (which displays Plug-and-Play device
  IDs).

  This is the parallel port equivalent of SCSI generic support (sg).
  It is safe to say N to this -- it is not needed for normal printing
  or parallel port CD-ROM/disk support.

  This support is also available as a module. If you want to compile
  it as a module, say M here and read Documentation/modules.txt. The
  module will be called ppdev.o.

  If unsure, say N.

I2C support
CONFIG_I2C
  I2C (pronounce: I-square-C) is a slow serial bus protocol used in
  many micro controller applications and developed by Philips. SMBus,
  or System Management Bus is a subset of the I2C protocol. More
  information is contained in the directory Documentation/i2c/,
  especially in the file called "summary" there.

  Both I2C and SMBus are supported here. You will need this for
  hardware sensors support, and also for Video for Linux support.
  Specifically, if you want to use a BT848 based frame grabber/overlay
  boards under Linux, say Y here and also to "I2C bit-banging
  interfaces", below.

  If you want I2C support, you should say Y here and also to the
  specific driver for your bus adapter(s) below. If you say Y to
  "/proc file system" below, you will then get a /proc interface which
  is documented in Documentation/i2c/proc-interface.

  This I2C support is also available as a module. If you want to
  compile it as a module, say M here and read
  Documentation/modules.txt. The module will be called i2c-core.o.

I2C bit-banging interfaces
CONFIG_I2C_ALGOBIT
  This allows you to use a range of I2C adapters called bit-banging
  adapters. Say Y if you own an I2C adapter belonging to this class
  and then say Y to the specific driver for you adapter below.

  This support is also available as a module. If you want to compile
  it as a module, say M here and read Documentation/modules.txt. The
  module will be called i2c-algo-bit.o.

Philips style parallel port adapter
CONFIG_I2C_PHILIPSPAR
  This supports parallel-port I2C adapters made by Philips. Say Y if
  you own such an adapter.

  This driver is also available as a module. If you want to compile
  it as a module, say M here and read Documentation/modules.txt. The
  module will be called i2c-philips-par.o.

  Note that if you want support for different parallel port devices,
  life will be much easier if you compile them all as modules.

ELV adapter
CONFIG_I2C_ELV
  This supports parallel-port I2C adapters called ELV. Say Y if you
  own such an adapter.

  This driver is also available as a module. If you want to compile
  it as a module, say M here and read Documentation/modules.txt. The
  module will be called i2c-elv.o.

Velleman K9000 adapter
CONFIG_I2C_VELLEMAN
  This supports the Velleman K9000 parallel-port I2C adapter. Say Y if
  you own such an adapter.

  This driver is also available as a module. If you want to compile
  it as a module, say M here and read Documentation/modules.txt. The
  module will be called i2c-velleman.o.

I2C PCF 8584 interfaces
CONFIG_I2C_ALGOPCF
  This allows you to use a range of I2C adapters called PCF adapters.
  Say Y if you own an I2C adapter belonging to this class and then say
  Y to the specific driver for you adapter below.

  This support is also available as a module. If you want to compile
  it as a module, say M here and read Documentation/modules.txt. The
  module will be called i2c-algo-pcf.o.

Elektor ISA card
CONFIG_I2C_ELEKTOR
  This supports the PCF8584 ISA bus I2C adapter. Say Y if you own such
  an adapter.

  This driver is also available as a module. If you want to compile
  it as a module, say M here and read Documentation/modules.txt. The
  module will be called i2c-elektor.o.

I2C device interface
CONFIG_I2C_CHARDEV
  Say Y here to use i2c-* device files, usually found in the /dev
  directory on your system. They make it possible to have user-space
  programs use the I2C bus. Information on how to do this is contained
  in the file Documentation/i2c/dev-interface.

  This code is also available as a module. If you want to compile
  it as a module, say M here and read Documentation/modules.txt. The
  module will be called i2c-dev.o.

Bus Mouse Support
CONFIG_BUSMOUSE
  Say Y here if your machine has a bus mouse as opposed to a serial
  mouse. Most people have a regular serial MouseSystem or
  Microsoft mouse (made by Logitech) that plugs into a COM port
  (rectangular with 9 or 25 pins). These people say N here. If you
  have something else, read the Busmouse-HOWTO, available from
  http://www.linuxdoc.org/docs.html#howto , and say Y here.

  If you have a laptop, you either have to check the documentation or
  experiment a bit to find out whether the trackball is a serial mouse
  or not; it's best to say Y here for you. 

  This is the generic bus mouse driver code. If you have a bus mouse,
  you will have to say Y here and also to the specific driver for your
  mouse below.

  This code is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called busmouse.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt.

Mouse Support (not serial and bus mice)
CONFIG_MOUSE
  This is for machines with a mouse which is neither a serial nor a
  bus mouse. Examples are PS/2 mice (such as the track balls on some
  laptops) and some digitizer pads. Most people have a regular serial
  MouseSystem or Microsoft mouse (made by Logitech) that plugs into a
  COM port (rectangular with 9 or 25 pins). These people say N here.
  If you have something else, read the Busmouse-HOWTO, available from
  http://www.linuxdoc.org/docs.html#howto . This HOWTO contains
  information about all non-serial mice, not just bus mice.

  If you have a laptop, you either have to check the documentation or
  experiment a bit to find out whether the trackball is a serial mouse
  or not; it's best to say Y here for you. 

  Note that the answer to this question won't directly affect the
  kernel: saying N will just cause this configure script to skip all
  the questions about non-serial mice. If unsure, say Y.

Logitech busmouse support
CONFIG_LOGIBUSMOUSE
  Logitech mouse connected to a proprietary interface card. It's
  generally a round connector with 9 pins. Note that the newer mice
  made by Logitech don't use the Logitech protocol anymore; for those,
  you don't need this option. You want to read the Busmouse-HOWTO ,
  available from http://www.linuxdoc.org/docs.html#howto .

  If you want to compile this as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt. The module will be
  called busmouse.o. If you are unsure, say N and read the HOWTO
  nevertheless: it will tell you what you have.

PS/2 mouse (aka "auxiliary device") support
CONFIG_PSMOUSE
  The PS/2 mouse connects to a special mouse port that looks much like
  the keyboard port (small circular connector with 6 pins). This way,
  the mouse does not use any serial ports. This port can also be used
  for other input devices like light pens, tablets, keypads. Compaq,
  AST and IBM all use this as their mouse port on currently shipping
  machines. The trackballs of some laptops are PS/2 mice also. In
  particular, the C&T 82C710 mouse on TI Travelmates is a PS/2 mouse.

  Although PS/2 mice are not technically bus mice, they are explained
  in detail in the Busmouse-HOWTO, available from
  http://www.linuxdoc.org/docs.html#howto .

  When using a PS/2 mouse, you can get problems if you want to use the
  mouse both on the Linux console and under X. Using the "-R" option
  of the Linux mouse managing program gpm (available from
  ftp://metalab.unc.edu/pub/Linux/system/mouse ) solves this
  problem, or you can get the "mconv2" utility from the same location.

C&T 82C710 mouse port support (as on TI Travelmate)
CONFIG_82C710_MOUSE
  This is a certain kind of PS/2 mouse used on the TI Travelmate. If
  you are unsure, try first to say N here and come back if the mouse
  doesn't work. Read the Busmouse-HOWTO, available from
  http://www.linuxdoc.org/docs.html#howto .

PC110 digitizer pad support
CONFIG_PC110_PAD
  This drives the digitizer pad on the IBM PC110 palmtop. It can turn
  the digitizer pad into a PS/2 mouse emulation with tap gestures or
  into an absolute pad.

  If you want to compile this as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt. The module will be
  called pc110pad.o.

Microsoft busmouse support
CONFIG_MS_BUSMOUSE
  These animals (also called Inport mice) are connected to an
  expansion board using a round connector with 9 pins. If this is what
  you have, say Y and read the Busmouse-HOWTO, available from
  http://www.linuxdoc.org/docs.html#howto .

  If you are unsure, say N and read the HOWTO nevertheless: it will
  tell you what you have. Also be aware that several vendors talk
  about 'Microsoft busmouse' and actually mean PS/2 busmouse -- so
  count the pins on the connector.

  If you want to compile this as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt. The module will be
  called msbusmouse.o. 

Apple Desktop Bus mouse support
CONFIG_ADBMOUSE
  Say Y here if you have this type of bus mouse (4 pin connector) as
  is common on Macintoshes. You may want to read the Busmouse-HOWTO,
  available from http://www.linuxdoc.org/docs.html#howto .

  If you want to compile this as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt. The module will be
  called adbmouse.o.

ATIXL busmouse support
CONFIG_ATIXL_BUSMOUSE
  This is a rare type of busmouse that is connected to the back of an
  ATI video card. Say Y if you have one of those. Note however that
  most mice by ATI are actually Microsoft busmice; you should say Y to
  "Microsoft busmouse support" above if you have one of those. Read
  the Busmouse-HOWTO, available from
  http://www.linuxdoc.org/docs.html#howto .

  If you want to compile this as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt. The module will be
  called atixlmouse.o. 

  If you are unsure, say N and read the HOWTO nevertheless: it will
  tell you what you have.

QIC-02 tape support
CONFIG_QIC02_TAPE
  If you have a non-SCSI tape drive like that, say Y. Or, if you want
  to compile this driver as a module ( = code which can be inserted in
  and removed from the running kernel whenever you want), say M here
  and read Documentation/modules.txt. The module will be called
  tpqic02.o.

Do you want runtime configuration for QIC-02
CONFIG_QIC02_DYNCONF
  You can either configure this driver once and for all by editing a
  header file (include/linux/tpqic02.h), in which case you should
  say N, or you can fetch a program via anonymous FTP which is able
  to configure this driver during runtime. The program to do this is
  called 'qic02conf' and it is part of the tpqic02-support-X.Y.tar.gz
  support package.

  If you want to use the qic02conf program, say Y.

Floppy tape drive (QIC-80/40/3010/3020/TR-1/TR-2/TR-3) support
CONFIG_FTAPE
  If you have a tape drive that is connected to your floppy
  controller, say Y here. 

  Some tape drives (like the Seagate "Tape Store 3200" or the Iomega
  "Ditto 3200" or the Exabyte "Eagle TR-3") come with a "high speed"
  controller of their own. These drives (and their companion
  controllers) are also supported if you say Y here. 

  If you have a special controller (such as the CMS FC-10, FC-20,
  Mountain Mach-II, or any controller that is based on the Intel 82078
  FDC like the high speed controllers by Seagate and Exabyte and
  Iomega's "Ditto Dash") you must configure it by selecting the
  appropriate entries from the "Floppy tape controllers" sub-menu
  below and possibly modify the default values for the IRQ and DMA
  channel and the IO base in ftape's configuration menu. 

  If you want to use your floppy tape drive on a PCI-bus based system,
  please read the file drivers/char/ftape/README.PCI. 

  The ftape kernel driver is also available as a runtime loadable
  module ( = code which can be inserted in and removed from the
  running kernel whenever you want). If you want to compile it as a
  module, say M here and read Documentation/modules.txt. The module
  will be called ftape.o. 

  Note that the Ftape-HOWTO is out of date (sorry) and documents the
  older version 2.08 of this software but still contains useful
  information. There is a web page with more recent documentation at
  http://www.math1.rwth-aachen.de/~heine/ftape/ . This page
  always contains the latest release of the ftape driver and useful
  information (backup software, ftape related patches and
  documentation, FAQ). Note that the file system interface has changed
  quite a bit compared to previous versions of ftape. Please read
  Documentation/ftape.txt.

The file system interface for ftape
CONFIG_ZFTAPE
  Normally, you want to say Y or M. DON'T say N here or you
  WON'T BE ABLE TO USE YOUR FLOPPY TAPE DRIVE.

  The ftape module itself no longer contains the routines necessary
  to interface with the kernel VFS layer (i.e. to actually write data
  to and read data from the tape drive). Instead the file system
  interface (i.e. the hardware independent part of the driver) has
  been moved to a separate module.

  If you say M zftape will be compiled as a runtime loadable
  module ( = code which can be inserted in and removed from the
  running kernel whenever you want). In this case you should read
  Documentation/modules.txt. The module will be called zftape.o.

  Regardless of whether you say Y or M here, an additional runtime
  loadable module called `zft-compressor.o' which contains code to
  support user transparent on-the-fly compression based on Ross
  William's lzrw3 algorithm will be produced. If you have enabled the
  kernel module loader (i.e. have said Y to "Kernel module loader
  support", above) then `zft-compressor.o' will be loaded
  automatically by zftape when needed.

  Despite its name, zftape does NOT use compression by default. The
  file Documentation/ftape.txt contains a short description of the
  most important changes in the file system interface compared to
  previous versions of ftape. The ftape home page
  http://www-math.math.rwth-aachen.de/~LBFM/claus/ftape/ contains
  further information.

  IMPORTANT NOTE: zftape can read archives created by previous
  versions of ftape and provide file mark support (i.e. fast skipping
  between tape archives) but previous version of ftape will lack file
  mark support when reading archives produced by zftape.

Default block size for zftape
CONFIG_ZFT_DFLT_BLK_SZ
  If unsure leave this at its default value, i.e. 10240. Note that
  you specify only the default block size here. The block size can be
  changed at run time using the MTSETBLK tape operation with the
  MTIOCTOP ioctl (i.e. with "mt -f /dev/qft0 setblk #BLKSZ" from the
  shell command line).

  The probably most striking difference between zftape and previous
  versions of ftape is the fact that all data must be written or read
  in multiples of a fixed block size. The block size defaults to
  10240 which is what GNU tar uses. The values for the block size
  should be either 1 or multiples of 1024 up to a maximum value of
  63488 (i.e. 62 K). If you specify `1' then zftape's builtin
  compression will be disabled.

  Reasonable values are `10240' (GNU tar's default block size),
  `5120' (afio's default block size), `32768' (default block size some
  backup programs assume for SCSI tape drives) or `1' (no restriction
  on block size, but disables builtin compression).

Number of DMA buffers
CONFIG_FT_NR_BUFFERS
  Please leave this at `3' unless you REALLY know what you are doing.
  It is not necessary to change this value. Values below 3 make the
  proper use of ftape impossible, values greater than 3 are a waste of
  memory. You can change the amount of DMA memory used by ftape at
  runtime with "mt -f /dev/qft0 setdrvbuffer #NUMBUFFERS". Each buffer
  wastes 32 KB of memory. Please note that this memory cannot be
  swapped out.

Procfs entry for ftape
CONFIG_FT_PROC_FS
  Optional. Saying Y will result in creation of a directory
  `/proc/ftape' under the /proc file system. The files can be viewed
  with your favorite pager (i.e. use "more /proc/ftape/history" or
  "less /proc/ftape/history" or simply "cat /proc/ftape/history"). The
  file will contain some status information about the inserted
  cartridge, the kernel driver, your tape drive, the floppy disk
  controller and the error history for the most recent use of the
  kernel driver. Saying Y will enlarge the size of the ftape driver
  by approximately 2 KB.

  WARNING: When compiling ftape as a module (i.e. saying M to "Floppy
  tape drive") it is dangerous to use ftape's /proc file system
  interface. Accessing `/proc/ftape' while the module is unloaded will
  result in a kernel Oops. This cannot be fixed from inside ftape.

Controlling the amount of debugging output of ftape
CONFIG_FT_NORMAL_DEBUG
  This option controls the amount of debugging output the ftape driver
  is ABLE to produce; it does not increase or diminish the debugging
  level itself. If unsure, leave this at its default setting,
  i.e. choose "Normal".

  Ftape can print lots of debugging messages to the system console
  resp. kernel log files. Reducing the amount of possible debugging
  output reduces the size of the kernel module by some KB, so it might
  be a good idea to use "None" for emergency boot floppies.

  If you want to save memory then the following strategy is
  recommended: leave this option at its default setting "Normal" until
  you know that the driver works as expected, afterwards reconfigure
  the kernel, this time specifying "Reduced" or "None" and recompile
  and install the kernel as usual. Note that choosing "Excessive"
  debugging output does not increase the amount of debugging output
  printed to the console but only makes it possible to produce
  "Excessive" debugging output.

  Please read Documentation/ftape.txt for a short description
  how to control the amount of debugging output.

The floppy drive controller for ftape
CONFIG_FT_STD_FDC
  Only change this setting if you have a special controller. If you
  didn't plug any add-on card into your computer system but just
  plugged the floppy tape cable into the already existing floppy drive
  controller then you don't want to change the default setting,
  i.e. choose "Standard".

  Choose "MACH-2" if you have a Mountain Mach-2 controller.
  Choose "FC-10/FC-20" if you have a Colorado FC-10 or FC-20
  controller.
  Choose "Alt/82078" if you have another controller that is located at
  an IO base address different from the standard floppy drive
  controller's base address of `0x3f0', or uses an IRQ (interrupt)
  channel different from `6', or a DMA channel different from
  `2'. This is necessary for any controller card that is based on
  Intel's 82078 FDC such as Seagate's, Exabyte's and Iomega's "high
  speed" controllers.

  If you choose something other than "Standard" then please make
  sure that the settings for the IO base address and the IRQ and DMA
  channel in the configuration menus below are correct. Use the manual
  of your tape drive to determine the correct settings!

  If you are already successfully using your tape drive with another
  operating system then you definitely should use the same settings
  for the IO base, the IRQ and DMA channel that have proven to work
  with that other OS.

  Note that this menu lets you specify only the default setting for
  the hardware setup. The hardware configuration can be changed at
  boot time (when ftape is compiled into the kernel, i.e. if you
  have said Y to "Floppy tape drive") or module load time (i.e. if you
  have said M to "Floppy tape drive").

  Please read also the file Documentation/ftape.txt which
  contains a short description of the parameters that can be set at
  boot or load time. If you want to use your floppy tape drive on a
  PCI-bus based system, please read the file
  drivers/char/ftape/README.PCI.

IO base of the floppy disk controller used with Ftape
CONFIG_FT_FDC_BASE
  You don't need to specify a value if the following default
  settings for the base IO address are correct:
  <<< MACH-2     : 0x1E0 >>>
  <<< FC-10/FC-20: 0x180 >>>
  <<< Secondary  : 0x370 >>>
  Secondary refers to a secondary FDC controller like the "high speed"
  controllers delivered by Seagate or Exabyte or Iomega's Ditto Dash.
  Please make sure that the setting for the IO base address
  specified here is correct. USE THE MANUAL OF YOUR TAPE DRIVE OR
  CONTROLLER CARD TO DETERMINE THE CORRECT SETTING. If you are already
  successfully using the tape drive with another operating system then
  you definitely should use the same settings for the IO base that has
  proven to work with that other OS.

  Note that this menu lets you specify only the default setting for
  the IO base. The hardware configuration can be changed at boot time
  (when ftape is compiled into the kernel, i.e. if you specified Y to
  "Floppy tape drive") or module load time (i.e. if you have said M to
  "Floppy tape drive").

  Please read also the file Documentation/ftape.txt which contains a
  short description of the parameters that can be set at boot or load
  time.

IRQ channel for the floppy disk controller used with Ftape
CONFIG_FT_FDC_IRQ
  You don't need to specify a value if the following default
  settings for the interrupt channel are correct:
  <<< MACH-2     : 6 >>>
  <<< FC-10/FC-20: 9 >>>
  <<< Secondary  : 6 >>>
  Secondary refers to secondary a FDC controller like the "high speed"
  controllers delivered by Seagate or Exabyte or Iomega's Ditto Dash.
  Please make sure that the setting for the IO base address
  specified here is correct. USE THE MANUAL OF YOUR TAPE DRIVE OR
  CONTROLLER CARD TO DETERMINE THE CORRECT SETTING. If you are already
  successfully using the tape drive with another operating system then
  you definitely should use the same settings for the IO base that has
  proven to work with that other OS.

  Note that this menu lets you specify only the default setting for
  the IRQ channel. The hardware configuration can be changed at boot
  time (when ftape is compiled into the kernel, i.e. if you said Y to
  "Floppy tape drive") or module load time (i.e. if you said M to
  "Floppy tape drive").

  Please read also the file Documentation/ftape.txt which contains a
  short description of the parameters that can be set at boot or load
  time.

DMA channel for the floppy disk controller used with Ftape
CONFIG_FT_FDC_DMA
  You don't need to specify a value if the following default
  settings for the DMA channel are correct:
  <<< MACH-2     : 2 >>>
  <<< FC-10/FC-20: 3 >>>
  <<< Secondary  : 2 >>>
  Secondary refers to a secondary FDC controller like the "high speed"
  controllers delivered by Seagate or Exabyte or Iomega's Ditto Dash.
  Please make sure that the setting for the IO base address
  specified here is correct. USE THE MANUAL OF YOUR TAPE DRIVE OR
  CONTROLLER CARD TO DETERMINE THE CORRECT SETTING. If you are already
  successfully using the tape drive with another operating system then
  you definitely should use the same settings for the IO base that has
  proven to work with that other OS.

  Note that this menu lets you specify only the default setting for
  the DMA channel. The hardware configuration can be changed at boot
  time (when ftape is compiled into the kernel, i.e. if you said Y to
  "Floppy tape drive") or module load time (i.e. if you said M to
  "Floppy tape drive").

  Please read also the file Documentation/ftape.txt which contains a
  short description of the parameters that can be set at boot or load
  time.

FDC FIFO Threshold before requesting DMA service
CONFIG_FT_FDC_THR
  Set the FIFO threshold of the FDC. If this is higher the DMA
  controller may serve the FDC after a higher latency time. If this is
  lower, fewer DMA transfers occur leading to less bus contention.
  You may try to tune this if ftape annoys you with "reduced data
  rate because of excessive overrun errors" messages. However, this
  doesn't seem to have too much effect.

  If unsure, don't touch the initial value, i.e. leave it at "8".

FDC maximum data rate
CONFIG_FT_FDC_MAX_RATE
  With some motherboard/FDC combinations ftape will not be able to
  run your FDC/tape drive combination at the highest available
  speed. If this is the case you'll encounter "reduced data rate
  because of excessive overrun errors" messages and lots of retries
  before ftape finally decides to reduce the data rate.

  In this case it might be desirable to tell ftape beforehand that
  it need not try to run the tape drive at the highest available
  speed. If unsure, leave this disabled, i.e. leave it at 2000
  bits/sec.

Direct Rendering Manager (XFree86 DRI support)
CONFIG_DRM
  Kernel-level support for the Direct Rendering Infrastructure (DRI)
  introduced in XFree86 4.0. If you say Y here, you need to select
  the module that's right for your graphics card from the list below.
  These modules provide support for synchronization, security, and
  DMA transfers. Please see http://dri.sourceforge.net for more
  details.  You should also select and configure AGP
  (/dev/agpgart) support.

3dfx Banshee/Voodoo3+
CONFIG_DRM_TDFX
  Choose this option if you have a 3dfx Banshee or Voodoo3 (or later),
  graphics card.  If M is selected, the module will be called tdfx.o.

3dlabs GMX 2000
CONFIG_DRM_GAMMA
  Choose this option if you have a 3dlabs GMX 2000 graphics card.
  If M is selected, the module will be called gamma.o.

ATI Rage 128
CONFIG_DRM_R128
  Choose this option if you have an ATI Rage 128 graphics card.  If M
  is selected, the module will be called r128.o.  AGP support for
  this card is strongly suggested (unless you have a PCI version).

Intel I810
CONFIG_DRM_I810
  Choose this option if you have an Intel I810 graphics card.  If M is
  selected, the module will be called i810.o.  AGP support is required
  for this driver to work.

Matrox g200/g400
CONFIG_DRM_MGA
  Choose this option if you have a Matrox g200 or g400 graphics card.  If M
  is selected, the module will be called mga.o.  AGP support is required
  for this driver to work.

MTRR control and configuration
CONFIG_MTRR
  On Intel P6 family processors (Pentium Pro, Pentium II and later)
  the Memory Type Range Registers (MTRRs) may be used to control
  processor access to memory ranges. This is most useful if you have
  a video (VGA) card on a PCI or AGP bus. Enabling write-combining
  allows bus write transfers to be combined into a larger transfer
  before bursting over the PCI/AGP bus. This can increase performance
  of image write operations 2.5 times or more. Saying Y here creates a
  /proc/mtrr file which may be used to manipulate your processor's
  MTRRs. Typically the X server should use this. 

  This code has a reasonably generic interface so that similar 
  control registers on other processors can be easily supported 
  as well:

  The Cyrix 6x86, 6x86MX and M II processors have Address Range
  Registers (ARRs) which provide a similar functionality to MTRRs. For
  these, the ARRs are used to emulate the MTRRs.
  The AMD K6-2 (stepping 8 and above) and K6-3 processors have two
  MTRRs. The Centaur C6 (WinChip) has 8 MCRs, allowing
  write-combining. All of these processors are supported by this code
  and it makes sense to say Y here if you have one of them.

  Saying Y here also fixes a problem with buggy SMP BIOSes which only
  set the MTRRs for the boot CPU and not for the secondary CPUs. This
  can lead to all sorts of problems, so it's good to say Y here.

  You can safely say Y even if your machine doesn't have MTRRs, you'll
  just add about 9 KB to your kernel.

  See Documentation/mtrr.txt for more information.

Main CPU frequency, only for DEC alpha machine
CONFIG_FT_ALPHA_CLOCK
  On some DEC Alpha machines the CPU clock frequency cannot be
  determined automatically, so you need to specify it here ONLY if
  running a DEC Alpha, otherwise this setting has no effect.

Double Talk PC internal speech card support
CONFIG_DTLK
  This driver is for the DoubleTalk PC, a speech synthesizer
  manufactured by RC Systems (http://www.rcsys.com/ ).  It is also
  called the `internal DoubleTalk'.  If you want to compile this as a
  module ( = code which can be inserted in and removed from the
  running kernel whenever you want), say M here and read
  Documentation/modules.txt. The module will be called dtlk.o.

Siemens R3964 serial protocol support
CONFIG_R3964
  This driver allows synchronous communication with devices using the
  Siemens R3964 packet protocol. Unless you are dealing with special
  hardware like PLCs, you are unlikely to need this.

  To compile this driver as a module ( = code which can be inserted in
  and removed from the running kernel whenever you want), say M here
  and read Documentation/modules.txt. The module will be called 
  n_r3964.o.

  If unsure, say N.

Applicom intelligent fieldbus card support
CONFIG_APPLICOM
  This driver provides the kernel-side support for the intelligent
  fieldbus cards made by Applicom International. More information
  about these cards can be found on the WWW at the address
  http://www.applicom-int.com/ , or by email from David Woodhouse
  <dwmw2@infradead.org>.

  To compile this driver as a module ( = code which can be inserted in
  and removed from the running kernel whenever you want), say M here
  and read Documentation/modules.txt. The module will be called
  applicom.o.

  If unsure, say N.

Intel Random Number Generator support
CONFIG_INTEL_RNG
  This driver provides kernel-side support for the Random Number
  Generator hardware found on Intel i8xx-based motherboards.

  Both a character driver, used to read() entropy data, and a timer
  function which automatically adds entropy directly into the
  kernel pool, are exported by this driver.

  To compile this driver as a module ( = code which can be inserted in
  and removed from the running kernel whenever you want), say M here
  and read Documentation/modules.txt. The module will be called
  i810_rng.o.

  If unsure, say N.

Power Management support
CONFIG_PM
  "Power Management" means that parts of your computer are shut
  off or put into a power conserving "sleep" mode if they are not
  being used. There are two competing standards for doing this: APM
  and ACPI. If you want to use either one, say Y here and then also to
  the requisite support below. 

  Power Management is most important for battery powered laptop
  computers; if you have a laptop, check out the Linux Laptop home
  page on the WWW at
  http://www.cs.utexas.edu/users/kharker/linux-laptop/ and the Battery
  Powered Linux mini-HOWTO, available from
  http://www.linuxdoc.org/docs.html#howto .

  Note that, even if you say N here, Linux on the x86 architecture
  will issue the hlt instruction if nothing is to be done, thereby
  sending the processor to sleep and saving power.

ACPI Support
CONFIG_ACPI
  ACPI/OSPM support for Linux is currently under development. As such, 
  this support is preliminary and EXPERIMENTAL. Configuring ACPI support
  enables kernel interfaces that allow higher level software (OSPM) to
  manipulate ACPI defined hardware and software interfaces, including
  the evaluation of ACPI control methods. If unsure, choose N here.
  Note, this option will enlarge your kernel by about 120K.

  This support requires an ACPI compliant platform (hardware/firmware).
  If both ACPI and Advanced Power Management (APM) support are
  configured, ACPI is used.

  This code DOES NOT currently provide a complete OSPM implementation --
  it has not yet reached APM's level of functionality. When fully
  implemented, Linux ACPI/OSPM will provide a more robust functional
  replacement for legacy configuration and power management interfaces,
  including the Plug-and-Play BIOS specification (PNP BIOS), the Multi-
  Processor Specification (MPS), and the Advanced Power Management 
  specification (APM).

  Linux support for ACPI/OSPM is based on Intel Corporation's ACPI
  Component Architecture (ACPI CA). The latest ACPI CA source code,
  documentation, debug builds, and implementation status information
  can be downloaded from:
  http://developer.intel.com/technology/iapc/acpi/downloads.htm
  
  The ACPI mailing list may also be of interest:
  http://phobos.fs.tum.de/acpi/index.html

Advanced Power Management BIOS support
CONFIG_APM
  APM is a BIOS specification for saving power using several different
  techniques. This is mostly useful for battery powered laptops with
  APM compliant BIOSes. If you say Y here, the system time will be
  reset after a RESUME operation, the /proc/apm device will provide
  battery status information, and user-space programs will receive
  notification of APM "events" (e.g. battery status change).

  If you select "Y" here, you can disable actual use of the APM
  BIOS by passing the "apm=off" option to the kernel at boot time.

  Note that the APM support is almost completely disabled for
  machines with more than one CPU.

  In order to use APM, you will need supporting software. For location
  and more information, read Documentation/pm.txt and the Battery
  Powered Linux mini-HOWTO, available from
  http://www.linuxdoc.org/docs.html#howto .

  This driver does not spin down disk drives (see the hdparm(8)
  manpage ("man 8 hdparm") for that), and it doesn't turn off
  VESA-compliant "green" monitors. 

  This driver does not support the TI 4000M TravelMate and the ACER
  486/DX4/75 because they don't have compliant BIOSes. Many "green"
  desktop machines also don't have compliant BIOSes, and this driver
  may cause those machines to panic during the boot phase.

  Generally, if you don't have a battery in your machine, there isn't
  much point in using this driver and you should say N. If you get
  random kernel OOPSes or reboots that don't seem to be related to
  anything, try disabling/enabling this option (or disabling/enabling
  APM in your BIOS). 

  Some other things you should try when experiencing seemingly random,
  "weird" problems:

   1) make sure that you have enough swap space and that it is
      enabled. 
   2) pass the "no-hlt" option to the kernel 
   3) switch on floating point emulation in the kernel and pass
      the "no387" option to the kernel
   4) pass the "floppy=nodma" option to the kernel
   5) pass the "mem=4M" option to the kernel (thereby disabling 
      all but the first 4 MB of RAM)
   6) make sure that the CPU is not over clocked.
   7) read the sig11 FAQ at http://www.bitwizard.nl/sig11/
   8) disable the cache from your BIOS settings
   9) install a fan for the video card or exchange video RAM
   10) install a better fan for the CPU
   11) exchange RAM chips 
   12) exchange the motherboard.

  To compile this driver as a module ( = code which can be inserted in
  and removed from the running kernel whenever you want), say M here
  and read Documentation/modules.txt. The module will be called
  apm.o.

Ignore USER SUSPEND
CONFIG_APM_IGNORE_USER_SUSPEND
  This option will ignore USER SUSPEND requests. On machines with a
  compliant APM BIOS, you want to say N. However, on the NEC Versa M
  series notebooks, it is necessary to say Y because of a BIOS bug.

Enable APM at boot time
CONFIG_APM_DO_ENABLE
  Enable APM features at boot time. From page 36 of the APM BIOS
  specification: "When disabled, the APM BIOS does not automatically
  power manage devices, enter the Standby State, enter the Suspend
  State, or take power saving steps in response to CPU Idle calls."
  This driver will make CPU Idle calls when Linux is idle (unless this
  feature is turned off -- see "Do CPU IDLE calls", below). This
  should always save battery power, but more complicated APM features
  will be dependent on your BIOS implementation. You may need to turn
  this option off if your computer hangs at boot time when using APM
  support, or if it beeps continuously instead of suspending. Turn
  this off if you have a NEC UltraLite Versa 33/C or a Toshiba
  T400CDT. This is off by default since most machines do fine without
  this feature.

Do CPU IDLE calls
CONFIG_APM_CPU_IDLE
  Enable calls to APM CPU Idle/CPU Busy inside the kernel's idle loop.
  On some machines, this can activate improved power savings, such as
  a slowed CPU clock rate, when the machine is idle. These idle calls
  are made after the idle loop has run for some length of time (e.g.,
  333 mS). On some machines, this will cause a hang at boot time or
  whenever the CPU becomes idle. (On machines with more than one CPU,
  this option does nothing.)

Enable console blanking using APM
CONFIG_APM_DISPLAY_BLANK
  Enable console blanking using the APM. Some laptops can use this to
  turn off the LCD backlight when the screen blanker of the Linux
  virtual console blanks the screen. Note that this is only used by
  the virtual console screen blanker, and won't turn off the backlight
  when using the X Window system. This also doesn't have anything to
  do with your VESA-compliant power-saving monitor. Further, this
  option doesn't work for all laptops -- it might not turn off your
  backlight at all, or it might print a lot of errors to the console,
  especially if you are using gpm.

RTC stores time in GMT
CONFIG_APM_RTC_IS_GMT
  Say Y here if your RTC (Real Time Clock a.k.a. hardware clock)
  stores the time in GMT (Greenwich Mean Time). Say N if your RTC
  stores localtime.

  It is in fact recommended to store GMT in your RTC, because then you
  don't have to worry about daylight savings time changes. The only
  reason not to use GMT in your RTC is if you also run a broken OS
  that doesn't understand GMT.

Allow interrupts during APM BIOS calls
CONFIG_APM_ALLOW_INTS
  Normally we disable external interrupts while we are making calls to
  the APM BIOS as a measure to lessen the effects of a badly behaving
  BIOS implementation.  The BIOS should reenable interrupts if it
  needs to.  Unfortunately, some BIOSes do not -- especially those in
  many of the newer IBM Thinkpads.  If you experience hangs when you
  suspend, try setting this to Y.  Otherwise, say N.

Use real mode APM BIOS call to power off
CONFIG_APM_REAL_MODE_POWER_OFF
  Use real mode APM BIOS calls to switch off the computer. This is
  a work-around for a number of buggy BIOSes. Switch this option on if
  your computer crashes instead of powering off properly.

Watchdog Timer Support 
CONFIG_WATCHDOG
  If you say Y here (and to one of the following options) and create a
  character special file /dev/watchdog with major number 10 and minor
  number 130 using mknod ("man mknod"), you will get a watchdog, i.e.:
  subsequently opening the file and then failing to write to it for
  longer than 1 minute will result in rebooting the machine. This
  could be useful for a networked machine that needs to come back
  online as fast as possible after a lock-up. There's both a watchdog
  implementation entirely in software (which can sometimes fail to
  reboot the machine) and a driver for hardware watchdog boards, which
  are more robust and can also keep track of the temperature inside
  your computer. For details, read Documentation/watchdog.txt in the
  kernel source.

  The watchdog is usually used together with the watchdog daemon 
  which is available via FTP (user: anonymous) from
  ftp://tsx-11.mit.edu/pub/linux/sources/sbin/ . This daemon can also
  monitor NFS connections and can reboot the machine when the process
  table is full.

  If unsure, say N.

Disable watchdog shutdown on close
CONFIG_WATCHDOG_NOWAYOUT
  The default watchdog behaviour (which you get if you say N here) is
  to stop the timer if the process managing it closes the file
  /dev/watchdog. It's always remotely possible that this process might
  get killed. If you say Y here, the watchdog cannot be stopped once
  it has been started.

WDT Watchdog timer
CONFIG_WDT
  If you have a WDT500P or WDT501P watchdog board, say Y here,
  otherwise N. It is not possible to probe for this board, which means
  that you have to inform the kernel about the IO port and IRQ using
  the "wdt=" kernel option (try "man bootparam" or see the
  documentation of your boot loader (lilo or loadlin) about how to
  pass options to the kernel at boot time).

  If you want to compile this as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt. The module will be
  called wdt.o.

WDT PCI Watchdog timer
CONFIG_WDTPCI
  If you have a PCI WDT500/501 watchdog board, say Y here,
  otherwise N. It is not possible to probe for this board, which means
  that you have to inform the kernel about the IO port and IRQ using
  the "wdt=" kernel option (try "man bootparam" or see the
  documentation of your boot loader (lilo or loadlin) about how to
  pass options to the kernel at boot time).

  If you want to compile this as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt. The module will be
  called wdt_pci.o.

WDT501 features
CONFIG_WDT_501
  Saying Y here and creating a character special file /dev/temperature
  with major number 10 and minor number 131 ("man mknod") will give
  you a thermometer inside your computer: reading from
  /dev/temperature yields one byte, the temperature in degrees
  Fahrenheit. This works only if you have a WDT501P watchdog board
  installed.

Fan Tachometer
CONFIG_WDT_501_FAN
  Enable the Fan Tachometer on the WDT501. Only do this if you have a
  fan tachometer actually set up.

Software Watchdog
CONFIG_SOFT_WATCHDOG
  A software monitoring watchdog. This will fail to reboot your system
  from some situations that the hardware watchdog will recover
  from. Equally it's a lot cheaper to install. 

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  If you want to compile it as a module, say M here and read
  Documentation/modules.txt. The module will be called softdog.o.

Berkshire Products PC Watchdog
CONFIG_PCWATCHDOG
  This is the driver for the Berkshire Products PC Watchdog card.
  This card simply watches your kernel to make sure it doesn't freeze,
  and if it does, it reboots your computer after a certain amount of
  time. This driver is like the WDT501 driver but for different
  hardware. Please read Documentation/pcwd-watchdog.txt. The PC
  watchdog cards can be ordered from http://www.berkprod.com . 

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module is called pcwd.o. If you want to compile it as a module,
  say M here and read Documentation/modules.txt. 

  Most people will say N.

Acquire SBC Watchdog Timer
CONFIG_ACQUIRE_WDT
  This is the driver for the hardware watchdog on the PSC-6x86 Single
  Board Computer produced by Acquire Inc (and others). This watchdog
  simply watches your kernel to make sure it doesn't freeze, and if
  it does, it reboots your computer after a certain amount of time.

  This driver is like the WDT501 driver but for different hardware.
  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module is called pscwdt.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt. Most people
  will say N.

Mixcom Watchdog
CONFIG_MIXCOMWD 
  This is a driver for the Mixcom hardware watchdog cards. This
  watchdog simply watches your kernel to make sure it doesn't freeze,
  and if it does, it reboots your computer after a certain amount of
  time.

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module is called mixcomwd.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt. Most people
  will say N.

Toshiba Laptop support
CONFIG_TOSHIBA
  If you intend to run this the kernel on a Toshiba portable say yes
  here. This adds a driver to safely access the System Management
  Mode of the CPU on Toshiba portables. The System Management Mode
  is used to set the BIOS and power saving options on Toshiba portables.

  For information on utilities to make use of this driver see the
  Toshiba Linux utilities website at:
  http://www.buzzard.org.uk/toshiba/

/dev/cpu/microcode - Intel IA32 CPU microcode support
CONFIG_MICROCODE
  If you say Y here and also to "/dev file system support" in the
  'File systems' section, you will be able to update the microcode on
  Intel processors in the IA32 family, e.g. Pentium Pro, Pentium II,
  Pentium III, Pentium 4, Xeon etc. You will obviously need the actual 
  microcode binary data itself which is not shipped with the Linux kernel.

  For latest news and information on obtaining all the required
  ingredients for this driver, check:
  http://www.urbanmyth.org/microcode/

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called microcode.o. If you want to compile it as
  a module, say M here and read Documentation/modules.txt. If you use
  modprobe or kmod you may also want to add the line
  'alias char-major-10-184 microcode' to your /etc/modules.conf file.

/dev/cpu/*/msr - Model-specific register support
CONFIG_X86_MSR
  This device gives privileged processes access to the x86
  Model-Specific Registers (MSRs).  It is a character device with
  major 202 and minors 0 to 31 for /dev/cpu/0/msr to /dev/cpu/31/msr.
  MSR accesses are directed to a specific CPU on multi-processor
  systems.

/dev/cpu/*/cpuid - CPU information support
CONFIG_X86_CPUID
  This device gives processes access to the x86 CPUID instruction to
  be executed on a specific processor.  It is a character device
  with major 203 and minors 0 to 31 for /dev/cpu/0/cpuid to
  /dev/cpu/31/cpuid.

Enhanced Real Time Clock Support
CONFIG_RTC
  If you say Y here and create a character special file /dev/rtc with
  major number 10 and minor number 135 using mknod ("man mknod"), you
  will get access to the real time clock (or hardware clock) built 
  into your computer.

  Every PC has such a clock built in. It can be used to generate
  signals from as low as 1Hz up to 8192Hz, and can also be used
  as a 24 hour alarm. It reports status information via the file
  /proc/driver/rtc and its behaviour is set by various ioctls on
  /dev/rtc.

  If you run Linux on a multiprocessor machine and said Y to
  "Symmetric Multi Processing" above, you should say Y here to read
  and set the RTC in an SMP compatible fashion.

  If you think you have a use for such a device (such as periodic data
  sampling), then say Y here, and read Documentation/rtc.txt for
  details.

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module is called rtc.o. If you want to compile it as a module,
  say M here and read Documentation/modules.txt. 

### Add
#EFI Real Time Clock Services
#CONFIG_EFI_RTC

Tadpole ANA H8 Support
CONFIG_H8
  The Hitachi H8/337 is a microcontroller used to deal with the power
  and thermal environment. If you say Y here, you will be able to
  communicate with it via a character special device. 

  If unsure, say N.

/dev/nvram support
CONFIG_NVRAM
  If you say Y here and create a character special file /dev/nvram
  with major number 10 and minor number 144 using mknod ("man mknod"),
  you get read and write access to the 50 bytes of non-volatile memory
  in the real time clock (RTC), which is contained in every PC and
  most Ataris. 

  This memory is conventionally called "CMOS RAM" on PCs and "NVRAM"
  on Ataris. /dev/nvram may be used to view settings there, or to
  change them (with some utility). It could also be used to frequently
  save a few bits of very important data that may not be lost over
  power-off and for which writing to disk is too insecure. Note
  however that most NVRAM space in a PC belongs to the BIOS and you
  should NEVER idly tamper with it. See Ralf Brown's interrupt list
  for a guide to the use of CMOS bytes by your BIOS.

  On Atari machines, /dev/nvram is always configured and does not need
  to be selected.

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called nvram.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt.

Joystick support
CONFIG_JOYSTICK
  If you have a joystick, 6dof controller, gamepad, steering wheel,
  weapon control system or something like that you can say Y here to
  enable generic support for these controllers. You will also need to
  say Y or M to at least one of the hardware specific drivers. This
  will make the controllers available as /dev/input/jsX devices.
  Please read the file Documentation/joystick.txt which contains more
  information and the location of the joystick package that you'll
  need.

ns558 gameports
CONFIG_INPUT_NS558
  Say Y here if you have an ISA, ISAPnP or PCI standard gameport.
  For more information on how to use the driver please read
  Documentation/joystick.txt

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called ns558.o. If you want to compile
  it as a module, say M here and read Documentation/modules.txt.

PDPI Lightning 4 gamecard
CONFIG_INPUT_LIGHTNING
  Say Y here if you have a PDPI Lightning 4 gamecard. For more
  information on how to use the driver please read
  Documentation/joystick.txt

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called lightning.o. If you want to compile
  it as a module, say M here and read Documentation/modules.txt.

Aureal Vortex and Trident 4DWave gameports
CONFIG_INPUT_PCIGAME
  Say Y here if you have a Trident 4DWave DX/NX or Aureal Vortex 1/2
  card. For more information on how to use the driver please read
  Documentation/joystick.txt

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called pcigame.o. If you want to compile
  it as a module, say M here and read Documentation/modules.txt.

Classic PC analog joysticks and gamepads
CONFIG_INPUT_ANALOG
  Say Y here if you have a controller that connects to the PC
  gameport. This supports many different types, including joysticks
  with throttle control, with rudders, or with extensions like
  additional hats and buttons compatible with CH Flightstick Pro,
  ThrustMaster FCS, 6 and 8 button gamepads, or Saitek Cyborg
  joysticks. For more information on how to use the driver please read
  Documentation/joystick.txt

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called analog.o. If you want to compile
  it as a module, say M here and read Documentation/modules.txt.

Assasin 3D and MadCatz Panther devices
CONFIG_INPUT_A3D
  Say Y here if you have an FPGaming or MadCatz controller using the
  A3D protocol over the PC gameport. For more information on how to
  use the driver please read Documentation/joystick.txt

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called a3d.o. If you want to compile
  it as a module, say M here and read Documentation/modules.txt.

Logitech ADI digital joysticks and gamepads
CONFIG_INPUT_ADI
  Say Y here if you have a Logitech controller using the ADI
  protocol over the PC gameport. For more information on how to use
  the driver please read Documentation/joystick.txt

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called adi.o. If you want to compile
  it as a module, say M here and read Documentation/modules.txt.

Creative Labs Blaster Cobra gamepad
CONFIG_INPUT_COBRA
  Say Y here if you have a Creative Labs Blaster Cobra gamepad.
  For more information on how to use the driver please read
  Documentation/joystick.txt

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called cobra.o. If you want to compile
  it as a module, say M here and read Documentation/modules.txt.

Genius Flight2000 Digital joysticks and gamepads
CONFIG_INPUT_GF2K
  Say Y here if you have a Genius Flight2000 or MaxFighter
  digitally communicating joystick or gamepad. For more information
  on how to use the driver please read Documentation/joystick.txt

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called gf2k.o. If you want to compile
  it as a module, say M here and read Documentation/modules.txt.

Gravis GrIP joysticks and gamepads
CONFIG_INPUT_GRIP
  Say Y here if you have a Gravis controller using the GrIP protocol
  over the PC gameport. For more information on how to use the driver
  please read Documentation/joystick.txt

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called grip.o. If you want to compile
  it as a module, say M here and read Documentation/modules.txt.

InterAct digital joysticks and gamepads
CONFIG_INPUT_INTERACT
  Say Y hereif you have an InterAct gameport or joystick
  communicating digitally over the gameport. For more information on
  how to use the driver please read Documentation/joystick.txt

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called interact.o. If you want to compile
  it as a module, say M here and read Documentation/modules.txt.

ThrustMaster DirectConnect joysticks and gamepads
CONFIG_INPUT_TMDC
  Say Y here if you have a ThrustMaster controller using the
  DirectConnect (BSP) protocol over the PC gameport. For more
  information on how to use the driver please read
  Documentation/joystick.txt

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called tmdc.o. If you want to compile
  it as a module, say M here and read Documentation/modules.txt.

Microsoft SideWinder digital joysticks and gamepads
CONFIG_INPUT_SIDEWINDER
  Say Y here if you have a Microsoft controller using the Digital
  Overdrive protocol over PC gameport. For more information on how to
  use the driver please read Documentation/joystick.txt

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called sidewinder.o. If you want to compile
  it as a module, say M here and read Documentation/modules.txt.

Serial port input line discipline
CONFIG_INPUT_SERPORT
  Say Y hereif you plan to use a joystick that communicates over the
  serial (COM) port. For more information on how to use the driver
  please read Documentation/joystick.txt

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called serport.o. If you want to compile
  it as a module, say M here and read Documentation/modules.txt.

Logitech WingMan Warrior joystick
CONFIG_INPUT_WARRIOR
  Say Y here if you have a Logitech WingMan Warrior joystick
  connected to your computer's serial port. For more information on
  how to use the driver please read Documentation/joystick.txt

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called warrior.o. If you want to compile
  it as a module, say M here and read Documentation/modules.txt.

LogiCad3d Magellan/SpaceMouse 6dof controller
CONFIG_INPUT_MAGELLAN
  Say Y here if you have a Magellan or Space Mouse 6DOF controller
  connected to your computer's serial port.  For more information on
  how to use the driver please read Documentation/joystick.txt

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called magellan.o. If you want to compile
  it as a module, say M here and read Documentation/modules.txt.

SpaceTec SpaceOrb/Avenger 6dof controller
CONFIG_INPUT_SPACEORB
  Say Y here if you have a SpaceOrb 360 or SpaceBall Avenger 6DOF
  controller connected to your computer's serial port.  For more
  information on how to use the driver please read
  Documentation/joystick.txt

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called spaceorb.o. If you want to compile
  it as a module, say M here and read Documentation/modules.txt.
 
SpaceTec SpaceBall 4000 FLX 6dof controller
CONFIG_INPUT_SPACEBALL
  Say Y here if you have a SpaceTec SpaceBall 4000 FLX controller
  connected to your computer's serial port. For more information on
  how to use the driver please read Documentation/joystick.txt

I-Force joysticks/wheels
CONFIG_INPUT_IFORCE_232
  Say Y here if you have an I-Force joystick or steering wheel
  connected to your serial (COM) port. For more information on
  how to use the driver please read Documentation/joystick.txt

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called iforce.o. If you want to compile
  it as a module, say M here and read Documentation/modules.txt.

I-Force joysticks/wheels
CONFIG_INPUT_IFORCE_USB
  Say Y here if you have an I-Force joystick or steering wheel
  connected to your USB port. For more information on how to use the
  driver please read Documentation/joystick.txt

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called iforce.o. If you want to compile
  it as a module, say M here and read Documentation/modules.txt.
 
Multisystem, Sega Genesis, Saturn joysticks and gamepads
CONFIG_INPUT_DB9
  Say Y here if you have a Sega Master System gamepad, Sega Genesis
  gamepad, Sega Saturn gamepad, or a Multisystem -- Atari, Amiga,
  Commodore, Amstrad CPC joystick connected to your parallel port. 
  For more information on how to use the driver please read 
  Documentation/joystick.txt and Documentation/joystick-parport.txt.

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called db9.o. If you want to compile
  it as a module, say M here and read Documentation/modules.txt.

Multisystem, NES, SNES, N64, PSX joysticks and gamepads
CONFIG_INPUT_GAMECON
  Say Y here if you have a Nintendo Entertainment System gamepad,
  Super Nintendo Entertainment System gamepad, Nintendo 64 gamepad,
  Sony PlayStation gamepad or a Multisystem -- Atari, Amiga,
  Commodore, Amstrad CPC joystick connected to your parallel port.
  For more information on how to use the driver please read
  Documentation/joystick.txt and Documentation/joystick-parport.txt

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called gamecon.o. If you want to compile
  it as a module, say M here and read Documentation/modules.txt.

Multisystem joysticks via TurboGraFX device
CONFIG_INPUT_TURBOGRAFX
  Say Y here if you have the TurboGraFX interface by Steffen
  Schwenke, and want to use it with Multiststem -- Atari, Amiga,
  Commodore, Amstrad CPC joystick. For more information on how to use
  the driver please read Documentation/joystick.txt and
  Documentation/joystick-parport.txt

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called turbografx.o. If you want to compile
  it as a module, say M here and read Documentation/modules.txt.

Amiga joysticks
CONFIG_INPUT_AMIJOY
  Say Y here if you have an Amiga with a digital joystick connected
  to it. For more information on how to use the driver please read
  Documentation/joystick.txt

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called joy-amiga.o. If you want to compile
  it as a module, say M here and read Documentation/modules.txt.

Atomwide Serial Support
CONFIG_ATOMWIDE_SERIAL
  If you have an Atomwide Serial card for an Acorn system, say Y to
  this option. The driver can handle 1, 2, or 3 port cards.
  If unsure, say N

The Serial Port Dual Serial Port
CONFIG_DUALSP_SERIAL
  If you have the Serial Port's dual serial card for an Acorn system,
  say Y to this option. If unsure, say N

NetWinder Button
CONFIG_NWBUTTON
  If you say Y here and create a character device node /dev/nwbutton
  with major and minor numbers 10 and 158 ("man mknod"), then every
  time the orange button is pressed a number of times, the number of
  times the button was pressed will be written to that device.

  This is most useful for applications, as yet unwritten, which
  perform actions based on how many times the button is pressed in a
  row.

  Do not hold the button down for too long, as the driver does not
  alter the behaviour of the hardware reset circuitry attached to the
  button; it will still execute a hard reset if the button is held
  down for longer than approximately five seconds.

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  If you want to compile it as a module, say M here and read
  Documentation/modules.txt. The module will be called nwbutton.o.

  Most people will answer Y to this question and "Reboot Using Button"
  below to be able to initiate a system shutdown from the button.

Reboot Using Button
CONFIG_NWBUTTON_REBOOT
  If you say Y here, then you will be able to initiate a system
  shutdown and reboot by pressing the orange button a number of times.
  The number of presses to initiate the shutdown is two by default,
  but this can be altered by modifying the value of NUM_PRESSES_REBOOT
  in nwbutton.h and recompiling the driver or, if you compile the
  driver as a module, you can specify the number of presses at load
  time with "insmod button reboot_count=<something>".

Sound card support
CONFIG_SOUND
  If you have a sound card in your computer, i.e. if it can say more
  than an occasional beep, say Y. Be sure to have all the information
  about your sound card and its configuration down (I/O port,
  interrupt and DMA channel), because you will be asked for it. 

  You want to read the Sound-HOWTO, available from
  http://www.linuxdoc.org/docs.html#howto . General information
  about the modular sound system is contained in the files
  Documentation/sound/Introduction. The file
  Documentation/sound/README.OSS contains some slightly outdated but
  still useful information as well.

  If you have a PnP sound card and you want to configure it at boot
  time using the ISA PnP tools (read
  http://www.roestock.demon.co.uk/isapnptools/ ), then you need to
  compile the sound card support as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want)
  and load that module after the PnP configuration is finished. To do
  this, say M here and read Documentation/modules.txt as well as
  Documentation/sound/README.modules; the module will be called
  soundcore.o.

  I'm told that even without a sound card, you can make your computer
  say more than an occasional beep, by programming the PC speaker.
  Kernel patches and supporting utilities to do that are in the pcsp
  package, available at ftp://ftp.infradead.org/pub/pcsp/ .

OSS sound modules
CONFIG_SOUND_OSS
  OSS is the Open Sound System suite of sound card drivers. They make
  sound programming easier since they provide a common API. Say Y or M
  here (the module will be called sound.o) if you haven't found a
  driver for your sound card above, then pick your driver from the
  list below.

Persistent DMA buffers
CONFIG_SOUND_DMAP
  Linux can often have problems allocating DMA buffers for ISA sound
  cards on machines with more than 16MB of RAM. This is because ISA
  DMA buffers must exist below the 16MB boundary and it is quite
  possible that a large enough free block in this region cannot be
  found after the machine has been running for a while. If you say Y
  here the DMA buffers (64Kb) will be allocated at boot time and kept
  until the shutdown. This option is only useful if you said Y to
  "OSS sound modules", above. If you said M to "OSS sound modules"
  then you can get the persistent DMA buffer functionality by passing
  the command-line argument "dmabuf=1" to the sound.o module.

  Say Y unless you have 16MB or less RAM or a PCI sound card.

Support for Aztech Sound Galaxy (non-PnP) cards
CONFIG_SOUND_SGALAXY
  This module initializes the older non Plug and Play sound galaxy
  cards from Aztech. It supports the Waverider Pro 32 - 3D and the
  Galaxy Washington 16.

  If you compile the driver into the kernel, you have to add
  "sgalaxy=<io>,<irq>,<dma>,<dma2>,<sgbase>" to the kernel command
  line.

Support for AD1816(A) based cards (EXPERIMENTAL)
CONFIG_SOUND_AD1816
  Say M here if you have a sound card based on the Analog Devices 
  AD1816(A) chip.

  If you compile the driver into the kernel, you have to add
  "ad1816=<io>,<irq>,<dma>,<dma2>" to the kernel command line.

Yamaha OPL3-SA1 audio controller
CONFIG_SOUND_OPL3SA1
  Say Y or M if you have a Yamaha OPL3-SA1 sound chip, which is
  usually built into motherboards. Read Documentation/sound/OPL3-SA
  for details.

  If you compile the driver into the kernel, you have to add
  "opl3sa=<io>,<irq>,<dma>,<dma2>,<mpuio>,<mpuirq>" to the kernel
  command line.

ProAudioSpectrum 16 support
CONFIG_SOUND_PAS
  Answer Y only if you have a Pro Audio Spectrum 16, ProAudio Studio
  16 or Logitech SoundMan 16 sound card. Answer N if you have some
  other card made by Media Vision or Logitech since those are not
  PAS16 compatible. Please read Documentation/sound/PAS16.

  If you compile the driver into the kernel, you have to add
  "pas2=<io>,<irq>,<dma>,<dma2>,<sbio>,<sbirq>,<sbdma>,<sbdma2>
  to the kernel command line.

100% Sound Blaster compatibles (SB16/32/64, ESS, Jazz16) support
CONFIG_SOUND_SB
  Answer Y if you have an original Sound Blaster card made by Creative
  Labs or a 100% hardware compatible clone (like the Thunderboard or
  SM Games). For an unknown card you may answer Y if the card claims
  to be Sound Blaster-compatible.

  Please read the file Documentation/sound/Soundblaster.

  You should also say Y here for cards based on the Avance Logic
  ALS-007 and ALS-1X0 chips (read Documentation/sound/ALS) and for cards
  based on ESS chips (read Documentation/sound/ESS1868 and
  Documentation/sound/ESS). If you have an SB AWE 32 or SB AWE 64, say
  Y here and also to "AWE32 synth" below and read 
  Documentation/sound/INSTALL.awe. If you have an IBM Mwave card, say
  Y here and read Documentation/sound/mwave.

  If you compile the driver into the kernel and don't want to use
  isapnp, you have to add "sb=<io>,<irq>,<dma>,<dma2>" to the kernel
  command line.
  
  You can say M here to compile this driver as a module; the module is
  called sb.o.

#Loopback MIDI device support
#CONFIG_SOUND_VMIDI
###
### somebody please fill this in.
###
#
Gravis Ultrasound support
CONFIG_SOUND_GUS
  Say Y here for any type of Gravis Ultrasound card, including
  the GUS or GUS MAX. See also Documentation/sound/ultrasound for
  more information on configuring this card with modules.

  If you compile the driver into the kernel, you have to add
  "gus=<io>,<irq>,<dma>,<dma2>" to the kernel command line.

MPU-401 support (NOT for SB16)
CONFIG_SOUND_MPU401
  Be careful with this question. The MPU401 interface is supported by
  all sound cards. However, some natively supported cards have their
  own driver for MPU401. Enabling this MPU401 option with these cards
  will cause a conflict. Also, enabling MPU401 on a system that
  doesn't really have a MPU401 could cause some trouble. If your card
  was in the list of supported cards, look at the card specific
  instructions in the drivers/sound/Readme.cards file. It's safe to
  answer Y if you have a true MPU401 MIDI interface card.

  If you compile the driver into the kernel, you have to add
  "mpu401=<io>,<irq>" to the kernel command line.

6850 UART support
CONFIG_SOUND_UART6850
  This option enables support for MIDI interfaces based on the 6850
  UART chip. This interface is rarely found on sound cards. It's safe
  to answer N to this question.

  If you compile the driver into the kernel, you have to add
  "uart6850=<io>,<irq>" to the kernel command line.

PSS (AD1848, ADSP-2115, ESC614) support
CONFIG_SOUND_PSS
  Answer Y or M if you have an Orchid SW32, Cardinal DSP16, Beethoven
  ADSP-16 or some other card based on the PSS chipset (AD1848 codec +
  ADSP-2115 DSP chip + Echo ESC614 ASIC CHIP). For more information on
  how to compile it into the kernel or as a module see the file
  Documentation/sound/PSS.

  If you compile the driver into the kernel, you have to add
  "pss=<io>,<mssio>,<mssirq>,<mssdma>,<mpuio>,<mpuirq>" to the kernel
  command line.

Enable PSS mixer (Beethoven ADSP-16 and other compatible)
CONFIG_PSS_MIXER
  Answer Y for Beethoven ADSP-16. You may try to say Y also for other
  cards if they have master volume, bass, treble, and you can't
  control it under Linux. If you answer N for Beethoven ADSP-16, you
  can't control master volume, bass, treble and synth volume.

  If you said M to "PSS support" above, you may enable or disable this
  PSS mixer with the module parameter pss_mixer. For more information
  see the file Documentation/sound/PSS.

Have DSPxxx.LD firmware file
CONFIG_PSS_HAVE_BOOT
  If you have the DSPxxx.LD file or SYNTH.LD file for you card, say Y
  to include this file. Without this file the synth device (OPL) may
  not work.

Full pathname of DSPxxx.LD firmware file
CONFIG_PSS_BOOT_FILE
  Enter the full pathname of your DSPxxx.LD file or SYNTH.LD file,
  starting from /.

Microsoft Sound System support
CONFIG_SOUND_MSS
  Again think carefully before answering Y to this question. It's safe
  to answer Y if you have the original Windows Sound System card made
  by Microsoft or Aztech SG 16 Pro (or NX16 Pro). Also you may say Y
  in case your card is NOT among these:

     ATI Stereo F/X, AdLib, Audio Excell DSP16, Cardinal DSP16,
     Ensoniq SoundScape (and compatibles made by Reveal and Spea),
     Gravis Ultrasound, Gravis Ultrasound ACE, Gravis Ultrasound Max,
     Gravis Ultrasound with 16 bit option, Logitech Sound Man 16,
     Logitech SoundMan Games, Logitech SoundMan Wave, MAD16 Pro (OPTi
     82C929), Media Vision Jazz16, MediaTriX AudioTriX Pro, Microsoft
     Windows Sound System (MSS/WSS), Mozart (OAK OTI-601), Orchid
     SW32, Personal Sound System (PSS), Pro Audio Spectrum 16, Pro
     Audio Studio 16, Pro Sonic 16, Roland MPU-401 MIDI interface,
     Sound Blaster 1.0, Sound Blaster 16, Sound Blaster 16ASP, Sound
     Blaster 2.0, Sound Blaster AWE32, Sound Blaster Pro, TI TM4000M
     notebook, ThunderBoard, Turtle Beach Tropez, Yamaha FM
     synthesizers (OPL2, OPL3 and OPL4), 6850 UART MIDI Interface.

  For cards having native support in VoxWare, consult the card
  specific instructions in drivers/sound/Readme.cards. Some drivers
  have their own MSS support and saying Y to this option will cause a
  conflict.

  If you compile the driver into the kernel, you have to add
  "ad1848=<io>,<irq>,<dma>,<dma2>[,<type>]" to the kernel command
  line.

SGI Visual Workstation on-board audio
CONFIG_SOUND_VWSND
  Say Y or M if you have an SGI Visual Workstation and you want to
  be able to use its on-board audio.  Read Documentation/sound/vwsnd
  for more info on this driver's capabilities.

Ensoniq Soundscape support
CONFIG_SOUND_SSCAPE
  Answer Y if you have a sound card based on the Ensoniq SoundScape
  chipset. Such cards are being manufactured at least by Ensoniq, Spea
  and Reveal (Reveal makes also other cards).

  If you compile the driver into the kernel, you have to add
  "sscape=<io>,<irq>,<dma>,<mpuio>,<mpuirq>" to the kernel command
  line.

MediaTriX AudioTriX Pro support
CONFIG_SOUND_TRIX
  Answer Y if you have the AudioTriX Pro sound card manufactured
  by MediaTrix.

Have TRXPRO.HEX firmware file
CONFIG_TRIX_HAVE_BOOT
  The MediaTrix AudioTrix Pro has an on-board microcontroller which
  needs to be initialized by downloading the code from the file
  TRXPRO.HEX in the DOS driver directory. If you don't have the
  TRXPRO.HEX file handy you may skip this step. However, the SB and
  MPU-401 modes of AudioTrix Pro will not work without this file!

Full pathname of TRXPRO.HEX firmware file
CONFIG_TRIX_BOOT_FILE
  Enter the full pathname of your TRXPRO.HEX file, starting from /.

Support for OPTi MAD16 and/or Mozart based cards
CONFIG_SOUND_MAD16
  Answer Y if your card has a Mozart (OAK OTI-601) or MAD16 (OPTi
  82C928 or 82C929 or 82C931) audio interface chip. These chips are 
  quite common so it's possible that many no-name cards have one of
  them. In addition the MAD16 chip is used in some cards made by known
  manufacturers such as Turtle Beach (Tropez), Reveal (some models)
  and Diamond (latest ones). Note however that the Tropez sound cards
  have their own driver; if you have one of those, say N here and Y or
  M to "Full support for Turtle Beach WaveFront", below. 

  If you compile the driver into the kernel, you have to add
  "mad16=<io>,<irq>,<dma>,<dma2>,<mpuio>,<mpuirq>" to the
  kernel command line.

  See also Documentation/sound/Opti and Documentation/sound/MAD16 for
  more information on setting these cards up as modules.

Full support for Turtle Beach WaveFront synth/sound cards
CONFIG_SOUND_WAVEFRONT
  Answer Y or M if you have a Tropez Plus, Tropez or Maui sound card
  and read the files Documentation/sound/Wavefront and
  Documentation/sound/Tropez+.
  
Support MIDI in older MAD16 based cards (requires SB)
CONFIG_MAD16_OLDCARD
  Answer Y (or M) if you have an older card based on the C928 or
  Mozart chipset and you want to have MIDI support. If you enable this
  option you also need to enable support for Sound Blaster.

Support for Crystal CS4232 based (PnP) cards
CONFIG_SOUND_CS4232
  Say Y here if you have a card based on the Crystal CS4232 chip set,
  which uses its own Plug and Play protocol.

  If you compile the driver into the kernel, you have to add
  "cs4232=<io>,<irq>,<dma>,<dma2>,<mpuio>,<mpuirq>" to the kernel
  command line.

  See Documentation/sound/CS4232 for more information on configuring
  this card.

Support for Yamaha OPL3-SA2, SA3, and SAx based PnP cards
CONFIG_SOUND_OPL3SA2
  Say Y or M if you have a card based on one of these Yamaha
  sound chipsets. Read Documentation/sound/OPL3-SA2 for more
  information on configuring these cards.

  If you compile the driver into the kernel, you have to add
  "opl3sa2=<io>,<irq>,<dma>,<dma2>,<mssio>,<mpuio>" to the kernel
  command line.

Support for Turtle Beach Wave Front (Maui, Tropez) synthesizers
CONFIG_SOUND_MAUI
  Say Y here if you have a Turtle Beach Wave Front, Maui, or Tropez
  sound card.

  If you compile the driver into the kernel, you have to add
  "maui=<io>,<irq>" to the kernel command line.

Have OSWF.MOT firmware file
CONFIG_MAUI_HAVE_BOOT
  Turtle Beach Maui and Tropez sound cards have a microcontroller
  which needs to be initialized prior to use. OSWF.MOT is a file
  distributed with the card's DOS/Windows drivers. Answer Y if you
  have this file.

Full pathname of OSWF.MOT firmware file
CONFIG_MAUI_BOOT_FILE
  Enter the full pathname of your OSWF.MOT file, starting from /.

Support for Turtle Beach MultiSound Classic, Tahiti, Monterey
CONFIG_SOUND_MSNDCLAS
  Say M here if you have a Turtle Beach MultiSound Classic, Tahiti or
  Monterey (not for the Pinnacle or Fiji). 

  See Documentation/sound/MultiSound for important information about
  this driver.

Full pathname of MSNDINIT.BIN firmware file
CONFIG_MSNDCLAS_INIT_FILE
  The MultiSound cards have two firmware files which are required for
  operation, and are not currently included. These files can be
  obtained from Turtle Beach. See Documentation/sound/MultiSound for
  information on how to obtain this.

Full pathname of MSNDPERM.BIN firmware file
CONFIG_MSNDCLAS_PERM_FILE
  The MultiSound cards have two firmware files which are required for
  operation, and are not currently included. These files can be
  obtained from Turtle Beach. See Documentation/sound/MultiSound for
  information on how to obtain this.

Support for Turtle Beach MultiSound Pinnacle, Fiji
CONFIG_SOUND_MSNDPIN
  Say M here if you have a Turtle Beach MultiSound Pinnacle or Fiji.
  See Documentation/sound/MultiSound for important information about
  this driver.

Full pathname of PNDSPINI.BIN firmware file
CONFIG_MSNDPIN_INIT_FILE
  The MultiSound cards have two firmware files which are required for
  operation, and are not currently included. These files can be
  obtained from Turtle Beach. See Documentation/sound/MultiSound for
  information on how to obtain this.

Full pathname of PNDSPERM.BIN firmware file
CONFIG_MSNDPIN_PERM_FILE
  The MultiSound cards have two firmware files which are required for
  operation, and are not currently included. These files can be
  obtained from Turtle Beach. See Documentation/sound/MultiSound for
  information on how to obtain this.

MSND Pinnacle have S/PDIF I/O
CONFIG_MSNDPIN_DIGITAL
  If you have the S/PDIF daughter board for the Pinnacle or Fiji,
  answer Y here; otherwise, say N. If you have this, you will be able
  to play and record from the S/PDIF port (digital signal). See
  Documentation/sound/MultiSound for information on how to make use of
  this capability.

MSND Pinnacle non-PnP Mode
CONFIG_MSNDPIN_NONPNP
  The Pinnacle and Fiji card resources can be configured either with
  PnP, or through a configuration port. Say Y here if your card is NOT
  in PnP mode. For the Pinnacle, configuration in non-PnP mode allows
  use of the IDE and joystick peripherals on the card as well; these
  do not show up when the card is in PnP mode. Specifying zero for any
  resource of a device will disable the device. If you are running the
  card in PnP mode, you must say N here and use isapnptools to
  configure the card's resources.

MSND Pinnacle config port
CONFIG_MSNDPIN_CFG
  This is the port which the Pinnacle and Fiji uses to configure the
  card's resources when not in PnP mode. If your card is in PnP mode,
  then be sure to say N to the previous option, "MSND Pinnacle Non-PnP
  Mode".

MSND buffer size (kB)
CONFIG_MSND_FIFOSIZE
  Configures the size of each audio buffer, in kilobytes, for
  recording and playing in the MultiSound drivers (both the Classic
  and Pinnacle). Larger values reduce the chance of data overruns at
  the expense of overall latency. If unsure, use the default.

FM synthesizer (YM3812/OPL-3) support
CONFIG_SOUND_YM3812
  Answer Y if your card has a FM chip made by Yamaha (OPL2/OPL3/OPL4).
  Answering Y is usually a safe and recommended choice, however some
  cards may have software (TSR) FM emulation. Enabling FM support with
  these cards may cause trouble (I don't currently know of any such
  cards, however).
  Please read the file Documentation/sound/OPL3 if your card has an
  OPL3 chip.

  If you compile the driver into the kernel, you have to add
  "opl3=<io>" to the kernel command line.

  If unsure, say Y.

ACI mixer (miroPCM12/PCM20)
CONFIG_SOUND_ACI_MIXER
  ACI (Audio Command Interface) is a protocol used to communicate with
  the microcontroller on some sound cards produced by miro, e.g. the
  miroSOUND PCM12 and PCM20. The main function of the ACI is to
  control the mixer and to get a product identification. 

  This Voxware ACI driver currently only supports the ACI functions on
  the miroSOUND PCM12 and PCM20 cards. On the PCM20, ACI also controls
  the radio tuner. This is supported in the video4linux
  radio-miropcm20 driver.

SB32/AWE support
CONFIG_SOUND_AWE32_SYNTH
  Say Y here if you have a Sound Blaster SB32, AWE32-PnP, SB AWE64 or
  similar sound card. See Documentation/sound/README.awe,
  Documentation/sound/AWE32 and the Soundblaster-AWE mini-HOWTO,
  available from http://www.linuxdoc.org/docs.html#howto for more
  info.

Gallant's Audio Excel DSP 16 support (SC-6000 and SC-6600)
CONFIG_SOUND_AEDSP16
  Answer Y if you have a Gallant's Audio Excel DSP 16 card. This
  driver supports Audio Excel DSP 16 but not the III nor PnP versions
  of this card.

  The Gallant's Audio Excel DSP 16 card can emulate either an SBPro or
  a Microsoft Sound System card, so you should have said Y to either
  "100% Sound Blaster compatibles (SB16/32/64, ESS, Jazz16) support"
  or "Microsoft Sound System support", above, and you need to answer
  the "MSS emulation" and "SBPro emulation" questions below
  accordingly. You should say Y to one and only one of these two
  questions.

  Read the drivers/sound/lowlevel/README.aedsp16 file and the head of
  drivers/sound/lowlevel/aedsp16.c as well as
  Documentation/sound/AudioExcelDSP16 to get more information about
  this driver and its configuration.

Audio Excel DSP 16 (SBPro emulation)
CONFIG_AEDSP16_SBPRO
  Answer Y if you want your audio card to emulate Sound Blaster Pro.
  You should then say Y to "100% Sound Blaster compatibles
  (SB16/32/64, ESS, Jazz16) support" and N to "Audio Excel DSP 16 (MSS
  emulation)".

  If you compile the driver into the kernel, you have to add
  "aedsp16=<io>,<irq>,<dma>,<mssio>,<mpuio>,<mouirq>" to the kernel
  command line.

Audio Excel DSP 16 (MSS emulation)
CONFIG_AEDSP16_MSS
  Answer Y if you want your audio card to emulate Microsoft Sound
  System. You should then say Y to "Microsoft Sound System support"
  and say N to "Audio Excel DSP 16 (SBPro emulation)".

SC-6600 based audio cards (new Audio Excel DSP 16)
CONFIG_SC6600
  The SC6600 is the new version of DSP mounted on the Audio Excel DSP
  16 cards. Find in the manual the FCC ID of your audio card and
  answer Y if you have an SC6600 DSP.

SC-6600 Joystick Interface
CONFIG_SC6600_JOY
  Say Y here in order to use the joystick interface of the Audio Excel
  DSP 16 card.

SC-6600 CDROM Interface
CONFIG_SC6600_CDROM
  This is used to activate the the CDROM interface of the Audio Excel
  DSP 16 card. Enter: 0 for Sony, 1 for Panasonic, 2 for IDE, 4 for no
  CDROM present.

Audio Excel DSP 16 (MPU401 emulation)
CONFIG_AEDSP16_MPU401
  Answer Y if you want your audio card to emulate the MPU-401 midi
  interface. You should then also say Y to "MPU-401 support".
  
  Note that the I/O base for MPU-401 support of aedsp16 is the same
  you have selected for "MPU-401 support". If you are using this
  driver as a module you have to specify the MPU I/O base address with
  the parameter 'mpu_base=0xNNN'.

Creative EMU10K1 based PCI sound cards
CONFIG_SOUND_EMU10K1
  Say Y or M if you have a PCI sound card using the EMU10K1
  chipset, such as the Creative SBLive!,  SB PCI512 or Emu-APS.

Crystal SoundFusion (CS4280/461x)
CONFIG_SOUND_FUSION
  This module drives the Crystal SoundFusion devices (CS4280/46xx series)
  when wired as native sound drivers with AC97 codecs. If this driver
  does not work try the CS4232 driver.

Ensoniq ES1370 based PCI sound cards
CONFIG_SOUND_ES1370
  Say Y or M if you have a PCI sound card utilizing the Ensoniq
  ES1370 chipset, such as Ensoniq's AudioPCI (non-97). To find
  out if your sound card uses an ES1370 without removing your
  computer's cover, use lspci -n and look for the PCI ID 
  1274:5000. Since Ensoniq was bought by Creative Labs,
  Sound Blaster 64/PCI models are either ES1370 or ES1371 based.
  This driver differs slightly from OSS/Free, so PLEASE READ
  Documentation/sound/es1370.

Ensoniq ES1371 based PCI sound cards
CONFIG_SOUND_ES1371
  Say Y or M if you have a PCI sound card utilizing the Ensoniq
  ES1371 chipset, such as Ensoniq's AudioPCI97. To find out if
  your sound card uses an ES1371 without removing your computer's
  cover, use lspci -n and look for the PCI ID 1274:1371. Since
  Ensoniq was bought by Creative Labs, Sound Blaster 64/PCI
  models are either ES1370 or ES1371 based. This driver differs
  slightly from OSS/Free, so PLEASE READ Documentation/sound/es1371.

ESS Solo1 based PCI sound cards (eg. SC1938)
CONFIG_SOUND_ESSSOLO1
  Say Y or M if you have a PCI sound card utilizing the ESS Technology
  Solo1 chip. To find out if your sound card uses a
  Solo1 chip without removing your computer's cover, use
  lspci -n and look for the PCI ID 125D:1969. This driver 
  differs slightly from OSS/Free, so PLEASE READ
  Documentation/sound/solo1.

S3 SonicVibes based PCI sound cards
CONFIG_SOUND_SONICVIBES
  Say Y or M if you have a PCI sound card utilizing the S3
  SonicVibes chipset. To find out if your sound card uses a
  SonicVibes chip without removing your computer's cover, use
  lspci -n and look for the PCI ID 5333:CA00. This driver 
  differs slightly from OSS/Free, so PLEASE READ
  Documentation/sound/sonicvibes.

Trident 4DWave DX/NX, SiS 7018 or ALi 5451 PCI Audio Core
CONFIG_SOUND_TRIDENT
  Say Y or M if you have a PCI sound card utilizing the Trident
  4DWave-DX/NX chipset or your mother board chipset has SiS 7018
  or ALi 5451 built-in. The SiS 7018 PCI Audio Core is embedded
  in SiS960 Super South Bridge and SiS540/630 Single Chipset.
  The ALi 5451 PCI Audio Core is embedded in ALi M1535, M1535D,
  M1535+ or M1535D+ South Bridge.

  Use lspci -n to find out if your sound card or chipset uses
  Trident 4DWave or SiS 7018. PCI ID 1023:2000 or 1023:2001 stands
  for Trident 4Dwave. PCI ID 1039:7018 stands for SiS7018. PCI ID
  10B9:5451 stands for ALi5451.

  This driver supports S/PDIF in/out (record/playback) for ALi 5451
  embedded in ALi M1535+ and M1535D+. Note that they aren't all 
  enabled by default; you can enable them by saying Y to "/proc file
  system support" and "Sysctl support", and after the /proc file 
  system has been mounted, executing the command

	command			what is enabled
  
  echo 0>/proc/ALi5451	pcm out is also set to S/PDIF out. (Default).
  
  echo 1>/proc/ALi5451	use S/PDIF out to output pcm data.
  
  echo 2>/proc/ALi5451	use S/PDIF out to output non-pcm data.(AC3...).

  echo 3>/proc/ALi5451	record from Ac97 in(MIC, Line in...). (Default).
  
  echo 4>/proc/ALi5451	no matter Ac97 settings, record from S/PDIF in.
  
  
  This driver differs slightly from OSS/Free, so PLEASE READ the
  comments at the top of driver/sound/trident.c

Rockwell WaveArtist
CONFIG_SOUND_WAVEARTIST
  Say Y here to include support for the Rockwell WaveArtist sound
  system.  This driver is mainly for the NetWinder.

VIA 82Cxxx Audio Codec
CONFIG_SOUND_VIA82CXXX
  Say Y here to include support for the audio codec found on VIA
  82Cxxx-based chips. Typically these are built into a motherboard. DO
  NOT select Sound Blaster or Adlib with this driver, unless you have
  a Sound Blaster or Adlib card in addition to your VIA audio chip.

NeoMagic 256AV/256ZX sound chipsets
CONFIG_SOUND_NM256
  Say M here to include audio support for the NeoMagic 256AV/256ZX
  chipsets. These are the audio chipsets found in the Sony
  Z505S/SX/DX, some Sony F-series, and the Dell Latitude CPi and CPt
  laptops. It includes support for an AC97-compatible mixer and an
  apparently proprietary sound engine.

  See Documentation/sound/NM256 for further information.

ESS Maestro sound chipsets
CONFIG_SOUND_MAESTRO
  Say Y or M if you have a sound system driven by ESS's Maestro line
  of PCI sound chips.  These include the Maestro 1, Maestro 2, and
  Maestro 2E.  See Documentation/sound/Maestro for more details.

Are you using a crosscompiler
CONFIG_CROSSCOMPILE
  Say Y here if you are compiling the kernel on a different
  architecture than the one it is intended to run on.

Kernel support for Linux/MIPS 32-bit binary compatibility
CONFIG_MIPS32_COMPAT
  Select this option if you want Linux/MIPS 32-bit binary
  compatibility. Since all software available for Linux/MIPS is
  currently 32-bit you should say Y here.

Build fp exception handler module
CONFIG_MIPS_FPE_MODULE
  Build the floating point exception handler module. This option is
  only useful for people working on the floating point exception
  handler. If you don't, say N.

Remote GDB kernel debugging
CONFIG_REMOTE_DEBUG
  If you say Y here, it will be possible to remotely debug the MIPS
  kernel using gdb. This enlarges your kernel image disk size by
  several megabytes and requires a machine with more than 16 MB,
  better 32 MB RAM to avoid excessive linking time. This is only
  useful for kernel hackers. If unsure, say N.

Magic System Request Key support
CONFIG_MAGIC_SYSRQ
  If you say Y here, you will have some control over the system even
  if the system crashes for example during kernel debugging (e.g., you
  will be able to flush the buffer cache to disk, reboot the system
  immediately or dump some status information). This is accomplished
  by pressing various keys while holding SysRq (Alt+PrintScreen). It
  also works on a serial console (on PC hardware at least), if you
  send a BREAK and then within 5 seconds a command keypress. The
  keys are documented in Documentation/sysrq.txt. Don't say Y unless
  you really know what this hack does.

ISDN subsystem
CONFIG_ISDN
  ISDN ("Integrated Services Digital Networks", called RNIS in France)
  is a special type of fully digital telephone service; it's mostly
  used to connect to your Internet service provider (with SLIP or
  PPP). The main advantage is that the speed is higher than ordinary
  modem/telephone connections, and that you can have voice
  conversations while downloading stuff. It only works if your
  computer is equipped with an ISDN card and both you and your service
  provider purchased an ISDN line from the phone company. For details,
  read http://alumni.caltech.edu/~dank/isdn/ on the WWW.

  This driver allows you to use an ISDN-card for networking
  connections and as dialin/out device. The isdn-tty's have a built in
  AT-compatible modem emulator. Network devices support autodial,
  channel-bundling, callback and caller-authentication without having
  a daemon running. A reduced T.70 protocol is supported with tty's
  suitable for German BTX. On D-Channel, the protocols EDSS1
  (Euro-ISDN) and 1TR6 (German style) are supported. See
  Documentation/isdn/README for more information. 

  If you want to compile the ISDN code as a module ( = code which can
  be inserted in and removed from the running kernel whenever you
  want), say M here and read Documentation/modules.txt. The module
  will be called isdn.o. If unsure, say N.

Support synchronous PPP
CONFIG_ISDN_PPP
  Over digital connections such as ISDN, there is no need to
  synchronize sender and recipient's clocks with start and stop bits
  as is done over analog telephone lines. Instead, one can use
  "synchronous PPP". Saying Y here will include this protocol. This
  protocol is used by Cisco and Sun for example. So you want to say Y
  here if the other end of your ISDN connection supports it. You will
  need a special version of pppd (called ipppd) for using this
  feature. See Documentation/isdn/README.syncppp and
  Documentation/isdn/syncPPP.FAQ for more information.

Support generic MP (RFC 1717)
CONFIG_ISDN_MPP
  With synchronous PPP enabled, it is possible to increase throughput
  by bundling several ISDN-connections, using this protocol. See
  Documentation/isdn/README.syncppp for more information.

Use VJ-compression with synchronous PPP
CONFIG_ISDN_PPP_VJ
  This enables Van Jacobson header compression for synchronous PPP.
  Say Y if the other end of the connection supports it.

Support audio via ISDN
CONFIG_ISDN_AUDIO
  If you say Y here, the modem-emulator will support a subset of the
  EIA Class 8 Voice commands. Using a getty with voice-support
  (mgetty+sendfax by gert@greenie.muc.de with an extension, available
  with the ISDN utility package for example), you will be able to use
  your Linux box as an ISDN-answering machine. Of course, this must be
  supported by the lowlevel driver also. Currently, the HiSax driver
  is the only voice-supporting driver. See
  Documentation/isdn/README.audio for more information.

X.25 PLP on top of ISDN
CONFIG_ISDN_X25
  This feature provides the X.25 protocol over ISDN connections. 
  See Documentation/isdn/README.x25 for more information
  if you are thinking about using this.

ISDN diversion services support
CONFIG_ISDN_DIVERSION
  This option allows you to use some supplementary diversion
  services in conjunction with the HiSax driver on an EURO/DSS1
  line. 

  Supported options are CD (call deflection), CFU (Call forward
  unconditional), CFB (Call forward when busy) and CFNR (call forward
  not reachable). Additionally the actual CFU, CFB and CFNR state may
  be interrogated.

  The use of CFU, CFB, CFNR and interrogation may be limited to some
  countries. The keypad protocol is still not implemented. CD should
  work in all countries if the service has been subscribed to.

  Please read the file Documentation/isdn/README.diversion.

ICN 2B and 4B support
CONFIG_ISDN_DRV_ICN
  This enables support for two kinds of ISDN-cards made by a German
  company called ICN. 2B is the standard version for a single ISDN
  line with two B-channels, 4B supports two ISDN lines. For running
  this card, additional firmware is necessary, which has to be
  downloaded into the card using a utility which is distributed
  separately. See Documentation/isdn/README and README.icn for more
  information. 

  If you want to compile this as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt. The module will be
  called icn.o.

isdnloop support
CONFIG_ISDN_DRV_LOOP
  This driver provides a virtual ISDN card. Its primary purpose is
  testing of linklevel features or configuration without getting
  charged by your service-provider for lots of phone calls.
  You need will need the loopctrl utility from the latest isdn4k-utils
  package to set up this driver.

HiSax SiemensChipSet driver support
CONFIG_ISDN_DRV_HISAX
  This is a driver supporting the Siemens chipset on various
  ISDN-cards (like AVM A1, Elsa ISDN cards, Teles S0-16.0, Teles
  S0-16.3, Teles S0-8, Teles/Creatix PnP, ITK micro ix1 and many
  compatibles). 

  HiSax is just the name of this driver, not the name of any hardware.
  
  If you have a card with such a chipset, you should say Y here and
  also to the configuration option of the driver for your particular
  card, below.

  If you want to compile this as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt. The module will be
  called hisax.o. See Documentation/isdn/README.HiSax for more
  information on using this driver.

HiSax Support for EURO/DSS1
CONFIG_HISAX_EURO
  Say Y or N according to the D-channel protocol which your local
  telephone service company provides.

  The call control protocol E-DSS1 is used in most European countries.
  If unsure, say yes.

Support for german charge info
CONFIG_DE_AOC
  If you want that the HiSax hardware driver sends messages to the
  upper level of the isdn code on each AOCD (Advice Of Charge, During
  the call -- transmission of the fee information during a call) and
  on each AOCE (Advice Of Charge, at the End of the call --
  transmission of fee information at the end of the call), say Y here.
  This works only in Germany.

Disable sending complete
CONFIG_HISAX_NO_SENDCOMPLETE
  If you have trouble with some ugly exchanges or you live in
  Australia select this option.

Disable sending low layer compatibility
CONFIG_HISAX_NO_LLC
  If you have trouble with some ugly exchanges try to select this
  option.

Disable keypad protocol option
CONFIG_HISAX_NO_KEYPAD
  If you like to send special dial strings including * or # without
  using the keypad protocol, select this option.

HiSax Support for German 1TR6
CONFIG_HISAX_1TR6
  Say Y or N according to the D-channel protocol which your local
  telephone service company provides.

  1TR6 is an old call control protocol which was used in Germany
  before E-DSS1 was established. Nowadays, all new lines in Germany
  use E-DSS1.

HiSax Support for US NI1
CONFIG_HISAX_NI1
  Enable this if you like to use ISDN in US on a NI1 basic rate interface.

Teles 16.0/8.0
CONFIG_HISAX_16_0
  This enables HiSax support for the Teles ISDN-cards S0-16.0, S0-8
  and many compatibles. 

  See Documentation/isdn/README.HiSax on how to configure it using the
  different cards, a different D-channel protocol, or non-standard
  IRQ/port/shmem settings.

Teles 16.3 or PNP or PCMCIA
CONFIG_HISAX_16_3
  This enables HiSax support for the Teles ISDN-cards S0-16.3 the
  Teles/Creatix PnP and the Teles PCMCIA.
  
  See Documentation/isdn/README.HiSax on how to configure it using the
  different cards, a different D-channel protocol, or non-standard
  IRQ/port settings.

Teles PCI
CONFIG_HISAX_TELESPCI
  This enables HiSax support for the Teles PCI.
  See Documentation/isdn/README.HiSax on how to configure it.
 
Teles S0Box
CONFIG_HISAX_S0BOX
  This enables HiSax support for the Teles/Creatix parallel port
  S0BOX.  See Documentation/isdn/README.HiSax on how to configure it.

AVM A1 (Fritz)
CONFIG_HISAX_AVM_A1
  This enables HiSax support for the AVM A1 (aka "Fritz").
  
  See Documentation/isdn/README.HiSax on how to configure it using the
  different cards, a different D-channel protocol, or non-standard
  IRQ/port settings.

AVM PnP/PCI (Fritz!PNP/PCI)
CONFIG_HISAX_FRITZPCI
  This enables HiSax support for the AVM "Fritz!PnP" and "Fritz!PCI".
  See Documentation/isdn/README.HiSax on how to configure it.

AVM A1 PCMCIA (Fritz)
CONFIG_HISAX_AVM_A1_PCMCIA
  This enables HiSax support for the AVM A1 "Fritz!PCMCIA").
  See Documentation/isdn/README.HiSax on how to configure it.

Elsa cards
CONFIG_HISAX_ELSA
  This enables HiSax support for the Elsa Mircolink ISA cards, for the
  Elsa Quickstep series cards and Elsa PCMCIA.

  See Documentation/isdn/README.HiSax on how to configure it using the
  different cards, a different D-channel protocol, or non-standard
  IRQ/port settings.

ITK ix1-micro Revision 2
CONFIG_HISAX_IX1MICROR2
  This enables HiSax support for the ITK ix1-micro Revision 2 card.

  See Documentation/isdn/README.HiSax on how to configure it using the
  different cards, a different D-channel protocol, or non-standard
  IRQ/port settings.

Eicon.Diehl Diva cards
CONFIG_HISAX_DIEHLDIVA
  This enables HiSax support for the Eicon.Diehl Diva none PRO
  versions passive ISDN cards.

  See Documentation/isdn/README.HiSax on how to configure it using the
  different cards, a different D-channel protocol, or non-standard
  IRQ/port settings.

ASUSCOM ISA cards
CONFIG_HISAX_ASUSCOM
  This enables HiSax support for the AsusCom and their OEM versions
  passive ISDN ISA cards.

  See Documentation/isdn/README.HiSax on how to configure it using the
  different cards, a different D-channel protocol, or non-standard
  IRQ/port settings.

TELEINT cards
CONFIG_HISAX_TELEINT
  This enables HiSax support for the TELEINT SA1 semiactiv ISDN card.

  See Documentation/isdn/README.HiSax on how to configure it using the
  different cards, a different D-channel protocol, or non-standard
  IRQ/port settings.

HFC-S based cards
CONFIG_HISAX_HFCS
  This enables HiSax support for the HFC-S 2BDS0 based cards, like
  teles 16.3c.
  
  See Documentation/isdn/README.HiSax on how to configure it using the
  different cards, a different D-channel protocol, or non-standard
  IRQ/port settings.

Sedlbauer cards
CONFIG_HISAX_SEDLBAUER
  This enables HiSax support for the Sedlbauer passive ISDN cards.

  See Documentation/isdn/README.HiSax on how to configure it using the
  different cards, a different D-channel protocol, or non-standard
  IRQ/port settings.

USR Sportster internal TA
CONFIG_HISAX_SPORTSTER
  This enables HiSax support for the USR Sportster internal TA card.

  See Documentation/isdn/README.HiSax on how to configure it using a
  different D-channel protocol, or non-standard IRQ/port settings.

MIC card
CONFIG_HISAX_MIC
  This enables HiSax support for the ITH MIC card. 

  See Documentation/isdn/README.HiSax on how to configure it using a
  different D-channel protocol, or non-standard IRQ/port settings.

NETjet card
CONFIG_HISAX_NETJET
  This enables HiSax support for the NetJet from Traverse
  Technologies.

  See Documentation/isdn/README.HiSax on how to configure it using a
  different D-channel protocol, or non-standard IRQ/port settings.

NETspider U card
CONFIG_HISAX_NETJET_U
  This enables HiSax support for the Netspider U interface ISDN card from
  Traverse Technologies.
  See Documentation/isdn/README.HiSax on how to configure it using a
  different D-channel protocol, or non-standard IRQ/port settings.

Niccy PnP/PCI card
CONFIG_HISAX_NICCY
  This enables HiSax support for the Dr. Neuhaus Niccy PnP or PCI. 

  See Documentation/isdn/README.HiSax on how to configure it using a
  different D-channel protocol, or non-standard IRQ/port settings.

Siemens I-Surf card
CONFIG_HISAX_ISURF
  This enables HiSax support for the Siemens I-Talk/I-Surf card with
  ISAR chip.
  See Documentation/isdn/README.HiSax on how to configure it using a
  different D-channel protocol, or non-standard IRQ/port settings.

HST Saphir card
CONFIG_HISAX_HSTSAPHIR
  This enables HiSax support for the HST Saphir card.
  
  See Documentation/isdn/README.HiSax on how to configure it using a
  different D-channel protocol, or non-standard IRQ/port settings.

Telekom A4T card
CONFIG_HISAX_BKM_A4T
  This enables HiSax support for the Telekom A4T card.
  
  See Documentation/isdn/README.HiSax on how to configure it using a
  different D-channel protocol, or non-standard IRQ/port settings.

Scitel Quadro card
CONFIG_HISAX_SCT_QUADRO
  This enables HiSax support for the Scitel Quadro card.
  
  See Documentation/isdn/README.HiSax on how to configure it using a
  different D-channel protocol, or non-standard IRQ/port settings.

Gazel cards
CONFIG_HISAX_GAZEL
  This enables HiSax support for the Gazel cards.

  See Documentation/isdn/README.HiSax on how to configure it using a
  different D-channel protocol, or non-standard IRQ/port settings.

HFC PCI-Bus cards
CONFIG_HISAX_HFC_PCI
  This enables HiSax support for the HFC-S PCI 2BDS0 based cards.
  
  For more informations see under Documentation/isdn/README.hfc-pci.

Winbond W6692 based cards
CONFIG_HISAX_W6692
  This enables HiSax support for Winbond W6692 based PCI ISDN cards.
  
  See Documentation/isdn/README.HiSax on how to configure it using a
  different D-channel protocol, or non-standard IRQ/port settings.

HFC-S+, HFC-SP, HFC-PCMCIA cards (EXPERIMENTAL)
CONFIG_HISAX_HFC_SX
  This enables HiSax support for the HFC-S+, HFC-SP and HFC-PCMCIA
  cards. This code is not finished yet.

Am7930 (EXPERIMENTAL)
CONFIG_HISAX_AMD7930
  This enables HiSax support for the AMD7930 chips on some SPARCs.
  This code is not finished yet.

PCBIT-D support
CONFIG_ISDN_DRV_PCBIT
  This enables support for the PCBIT ISDN-card. This card is
  manufactured in Portugal by Octal. For running this card, additional
  firmware is necessary, which has to be downloaded into the card
  using a utility which is distributed separately. See
  Documentation/isdn/README and Documentation/isdn/README.pcbit for
  more information. 

  If you want to compile this as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt. The module will be
  called pcbit.o.

Spellcaster support (EXPERIMENTAL)
CONFIG_ISDN_DRV_SC
  This enables support for the Spellcaster BRI ISDN boards. This
  driver currently builds only in a modularized version ( = code which
  can be inserted in and removed from the running kernel whenever you
  want, details in Documentation/modules.txt); the module will be
  called sc.o. See Documentation/isdn/README.sc and
  http://www.spellcast.com for more information.

Eicon active card support
CONFIG_ISDN_DRV_EICON
  Say Y here if you have an Eicon active ISDN card. In order to use
  this card, additional firmware is necessary, which has to be loaded
  into the card using the eiconctrl utility which is part of the
  latest isdn4k-utils package. Please read the file
  Documentation/isdn/README.eicon for more information.
  
Eicon Diva Server card support
CONFIG_ISDN_DRV_EICON_PCI
  Say Y here if you have an Eicon Diva Server (BRI/PRI/4BRI) ISDN card.
  Please read Documentation/isdn/README.eicon for more information.
  
Eicon old-type card support
CONFIG_ISDN_DRV_EICON_ISA
  Say Y here if you have an old-type Eicon active ISDN card. In order
  to use this card, additional firmware is necessary, which has to be
  loaded into the card using the eiconctrl utility which is part of
  the latest isdn4k-utils package. Please read the file
  Documentation/isdn/README.eicon for more information.

Eicon driver type standalone
CONFIG_ISDN_DRV_EICON_STANDALONE
  Enable this option if you want the eicon driver as standalone
  version with no interface to the ISDN4Linux isdn module. If you
  say Y here, the eicon module only supports the Diva Server PCI
  cards and will provide its own IDI interface. You should say N
  here.

Support AT-Fax Class 1 and 2 commands
CONFIG_ISDN_TTY_FAX
  If you say Y here, the modem-emulator will support a subset of the
  Fax Class 1 and 2 commands. Using a getty with fax-support
  (mgetty+sendfax, hylafax), you will be able to use your Linux box as
  an ISDN-fax-machine. This must be supported by the lowlevel driver
  also. See Documentation/isdn/README.fax for more information.

CAPI2.0 support
CONFIG_ISDN_CAPI
  This provides the CAPI (Common ISDN Application Programming
  Interface, a standard making it easy for programs to access ISDN
  hardware, see http://www.capi.org/ . This is needed for AVM's set of
  active ISDN controllers like B1, T1, M1.

  This code is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The modules will be called capi.o and kernelcapi.o. If you want to
  compile it as a module, say M here and read
  Documentation/modules.txt.

AVM B1 ISA support
CONFIG_ISDN_DRV_AVMB1_B1ISA
  Enable support for the ISA version of the AVM B1 card.

AVM B1 PCI support
CONFIG_ISDN_DRV_AVMB1_B1PCI
  Enable support for the PCI version of the AVM B1 card.

AVM B1 PCI V4 support
CONFIG_ISDN_DRV_AVMB1_B1PCIV4
  Enable support for the V4 version of AVM B1 PCI card.

AVM T1/T1-B ISA support
CONFIG_ISDN_DRV_AVMB1_T1ISA
  Enable support for the AVM T1 T1B card.
  Note: This is a PRI card and handle 30 B-channels.

AVM B1/M1/M2 PCMCIA support
CONFIG_ISDN_DRV_AVMB1_B1PCMCIA
  Enable support for the PCMCIA version of the AVM B1 card.

AVM T1/T1-B PCI support
CONFIG_ISDN_DRV_AVMB1_T1PCI
  Enable support for the AVM T1 T1B card.
  Note: This is a PRI card and handle 30 B-channels.

AVM C4 support
CONFIG_ISDN_DRV_AVMB1_C4
  Enable support for the AVM C4 PCI card.
  This card handle 4 BRI ISDN lines (8 channels).

Verbose reason code reporting (kernel size +=7K)
CONFIG_ISDN_DRV_AVMB1_VERBOSE_REASON
  If you say Y here, the AVM B1 driver will give verbose reasons for
  disconnecting. This will increase the size of the kernel by 7 KB. If
  unsure, say Y.

IBM Active 2000 support (EXPERIMENTAL)
CONFIG_ISDN_DRV_ACT2000
  Say Y here if you have an IBM Active 2000 ISDN card. In order to use
  this card, additional firmware is necessary, which has to be loaded
  into the card using a utility which is part of the latest
  isdn4k-utils package. Please read the file
  Documentation/isdn/README.act2000 for more information.

Hypercope HYSDN cards (Champ, Ergo, Metro) support (module)
CONFIG_HYSDN
  Say Y here if you have one of Hypercope's active PCI ISDN cards
  Champ, Ergo and Metro. You will then get a module called hysdn.o.
  Please read the file Documentation/isdn/README.hysdn for more
  information.

HYSDN CAPI 2.0 support
CONFIG_HYSDN_CAPI
  Say Y here if you like to use Hypercope's CAPI 2.0 interface

Support for Sun4 architecture
CONFIG_SUN4
  Say Y here if, and only if, your machine is a Sun4. Note that
  a kernel compiled with this option will run only on Sun4.
  (And the current version will probably work only on sun4/330.)

SPARC ESP SCSI support
CONFIG_SCSI_SUNESP
  This is the driver for the Sun ESP SCSI host adapter. The ESP
  chipset is present in most SPARC SBUS-based computers.

  This support is also available as a module called esp.o ( = code
  which can be inserted in and removed from the running kernel
  whenever you want). If you want to compile it as a module, say M
  here and read Documentation/modules.txt.

PTI Qlogic, ISP Driver
CONFIG_SCSI_QLOGICPTI
  This driver supports SBUS SCSI controllers from PTI or QLogic. These
  controllers are known under Solaris as qpti and in the openprom as
  PTI,ptisp or QLGC,isp. Note that PCI QLogic SCSI controllers are
  driven by a different driver.

  This support is also available as a module called qlogicpti.o ( =
  code which can be inserted in and removed from the running kernel
  whenever you want). If you want to compile it as a module, say M
  here and read Documentation/modules.txt.

SPARC /dev/openprom compatibility driver (EXPERIMENTAL)
CONFIG_SUN_OPENPROMIO
  This driver provides user programs with an interface to the SPARC
  PROM device tree. The driver implements a SunOS-compatible
  interface and a NetBSD-compatible interface. 

  If you want to compile this as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M and read Documentation/modules.txt. If unsure, say Y.

Openprom tree appears in /proc/openprom
CONFIG_SUN_OPENPROMFS
  If you say Y, the OpenPROM device tree will be available as a
  virtual file system, which you can mount to /proc/openprom by "mount
  -t openpromfs none /proc/openprom".

  If you want to compile the /proc/openprom support as a module ( =
  code which can be inserted in and removed from the running kernel
  whenever you want), say M here and read Documentation/modules.txt.
  The module will be called openpromfs.o. If unsure, say M.

Kernel support for Linux/Sparc 32bit binary compatibility
CONFIG_SPARC32_COMPAT
  This allows you to run 32-bit binaries on your Ultra.
  Everybody wants this; say Y.

Kernel support for 32-bit ELF binaries
CONFIG_BINFMT_ELF32
  This allows you to run 32-bit Linux/ELF binaries on your Ultra.
  Everybody wants this; say Y.

Kernel support for 32-bit (ie. SunOS) a.out binaries
CONFIG_BINFMT_AOUT32
  This allows you to run 32-bit a.out format binaries on your Ultra.
  If you want to run SunOS binaries (see SunOS binary emulation below)
  or other a.out binaries, say Y. If unsure, say N.

SunOS binary emulation
CONFIG_SUNOS_EMUL
  This allows you to run most SunOS binaries. If you want to do this,
  say Y here and place appropriate files in /usr/gnemul/sunos. See
  http://www.ultralinux.org/faq.html for more information. If you want
  to run SunOS binaries on an Ultra you must also say Y to "Kernel
  support for 32-bit a.out binaries" above.

Mostek real time clock support
CONFIG_SUN_MOSTEK_RTC
  The Mostek RTC chip is used on all known Sun computers except
  some JavaStations. For a JavaStation you need to say Y both here
  and to "Enhanced Real Time Clock Support".

  Say Y here unless you are building a special purpose kernel.

OBP Flash Device support
CONFIG_OBP_FLASH
  The OpenBoot PROM on Ultra systems is flashable. If you want to be
  able to upgrade the OBP firmware, say Y here.

JavaStation OS Flash SIMM
CONFIG_SUN_JSFLASH
  If you say Y here, you will be able to boot from your JavaStation's
  Flash memory.

Siemens SAB82532 serial support
CONFIG_SAB82532
  This driver supports the serial ports on newer (PCI) Ultra systems.
  Say Y if you want to be able to use your serial ports.

Aurora Multiboard 1600se (EXPERIMENTAL)
CONFIG_SUN_AURORA
  The Aurora Multiboard is a multi-port high-speed serial controller.
  If you have one of these, say Y.

Audio support (EXPERIMENTAL)
CONFIG_SPARCAUDIO
  This driver provides support for the build-in sound devices on most
  Sun machines. If you want to be able to use this, select this option
  and one or more of the lowlevel drivers below. See
  http://www.dementia.org/~shadow/sparcaudio.html for more
  information.

AMD7930 Lowlevel Driver
CONFIG_SPARCAUDIO_AMD7930
  This driver supports the AMD 7930 chip found on sun4c, 4/6xx, and
  SparcClassic systems.

CS4231 Lowlevel Driver
CONFIG_SPARCAUDIO_CS4231
  This driver supports the Crystal Semiconductor CS4231 chip found on
  the SS4, SS5, and Ultras.

DBRI Lowlevel Driver
CONFIG_SPARCAUDIO_DBRI
  This driver supports the DBRI audio interface found on the SS10,
  SS20, Sparcbook 3, and Voyager systems.

Dummy lowlevel Driver
CONFIG_SPARCAUDIO_DUMMY
  This is a pseudo-driver used for debugging and testing the
  sparcaudio subsystem. Say N unless you want to work on this
  subsystem.

Sparc hardware (EXPERIMENTAL)
CONFIG_PARPORT_SUNBPP
  This driver provides support for the bidirectional parallel port
  found on many Sun machines. Note that many of the newer Ultras
  actually have pc style hardware instead.

#
# m68k-specific kernel options
# Documented by Chris Lawrence <quango@themall.net> et al.
#
Amiga support
CONFIG_AMIGA
  This option enables support for the Amiga series of computers. If
  you plan to use this kernel on an Amiga, say Y here and browse the
  material available in Documentation/m68k; otherwise say N.

Atari support
CONFIG_ATARI
  This option enables support for the 68000-based Atari series of
  computers (including the TT, Falcon and Medusa). If you plan to use
  this kernel on an Atari, say Y here and browse the material
  available in Documentation/m68k; otherwise say N.

Hades support
CONFIG_HADES
  This option enables support for the Hades Atari clone. If you plan
  to use this kernel on a Hades, say Y here; otherwise say N.

Macintosh support
CONFIG_MAC
  This option enables support for the Apple Macintosh series of
  computers (yes, there is experimental support now, at least for part
  of the series).
  
  Say N unless you're willing to code the remaining necessary support.
  ;)

HP9000/300 support
CONFIG_HP300
  This option enables support for the HP9000/300 series of
  workstations. Support for these machines is still very experimental.
  If you plan to try to use the kernel on such a machine say Y here.
  Everybody else says N.

Sun 3X support
CONFIG_SUN3X
  This option enables support for the Sun 3x series of workstations.
  Be warned that this support is very experimental. You will also want
  to say Y to 68020 support and N to the other processors below.

  If you don't want to compile a kernel for a Sun 3x, say N.

68020 support
CONFIG_M68020
  If you anticipate running this kernel on a computer with a MC68020
  processor, say Y. Otherwise, say N. Note that the 68020 requires a
  68851 MMU (Memory Management Unit) to run Linux/m68k, except on the
  Sun 3, which provides its own version.

68030 support
CONFIG_M68030
  If you anticipate running this kernel on a computer with a MC68030
  processor, say Y. Otherwise, say N. Note that a MC68EC030 will not
  work, as it does not include an MMU (Memory Management Unit).

68040 support
CONFIG_M68040
  If you anticipate running this kernel on a computer with a MC68LC040
  or MC68040 processor, say Y. Otherwise, say N. Note that an
  MC68EC040 will not work, as it does not include an MMU (Memory
  Management Unit).

68060 support
CONFIG_M68060
  If you anticipate running this kernel on a computer with a MC68060
  processor, say Y. Otherwise, say N.

Math emulation support (EXPERIMENTAL)
CONFIG_M68KFPU_EMU
  At some point in the future, this will cause floating-point math
  instructions to be emulated by the kernel on machines that lack a
  floating-point math coprocessor.  Thrill-seekers and chronically
  sleep-deprived psychotic hacker types can say Y now, everyone else
  should probably wait a while.

Math emulation only kernel
CONFIG_M68KFPU_EMU_ONLY
  This option prevents any floating-point instructions from being
  compiled into the kernel, thereby the kernel doesn't save any
  floating point context anymore during task switches, so this
  kernel will only be usable on machines without a floating-point
  math coprocessor. This makes the kernel a bit faster as no tests
  needs to be executed whether a floating-point instruction in the
  kernel should be executed or not.

Math emulation extra precision
CONFIG_M68KFPU_EMU_EXTRAPREC
  The fpu uses normally a few bit more during calculations for
  correct rounding, the emulator can (often) do the same but this
  extra calculation can cost quite some time, so you can disable
  it here. The emulator will then "only" calculate with a 64 bit
  mantissa and round slightly incorrect, what is more then enough
  for normal usage.

Advanced configuration options
CONFIG_ADVANCED
  This gives you access to some advanced options for the CPU. The
  defaults should be fine for most users, but these options may make
  it possible for you to improve performance somewhat if you know what
  you are doing. 

  Note that the answer to this question won't directly affect the
  kernel: saying N will just cause this configure script to skip all
  the questions about these options.

  Most users should say N to this question.

Use read-modify-write instructions
CONFIG_RMW_INSNS
  This allows to use certain instructions that work with indivisible
  read-modify-write bus cycles. While this is faster than the
  workaround of disabling interrupts, it can conflict with DMA 
  ( = direct memory access) on many Amiga systems, and it is also said
  to destabilize other machines. It is very likely that this will
  cause serious problems on any Amiga or Atari Medusa if set. The only
  configuration where it should work are 68030-based Ataris, where it
  apparently improves performance. But you've been warned! Unless you
  really know what you are doing, say N. Try Y only if you're quite
  adventurous.

Zorro support
CONFIG_ZORRO
  This enables support for the Zorro bus in the Amiga. If you have
  expansion cards in your Amiga that conform to the Amiga
  AutoConfig(tm) specification, say Y, otherwise N. Note that even
  expansion cards that do not fit in the Zorro slots but fit in e.g.
  the CPU slot may fall in this category, so you have to say Y to let
  Linux use these.

Zorro device name database
CONFIG_ZORRO_NAMES
  By default, the kernel contains a database of all known Zorro device
  names to make the information in /proc/iomem comprehensible to the
  user. This database increases the size of the kernel image by about
  15KB, but it gets freed after the system boots up, so it doesn't
  take up kernel memory. Anyway, if you are building an installation
  floppy or kernel for an embedded system where kernel image size
  really matters, you can disable this feature and you'll get device
  ID numbers instead of names.

  When in doubt, say Y.

Amiga 1200/600 PCMCIA support (EXPERIMENTAL)
CONFIG_AMIGA_PCMCIA
  Include support in the kernel for pcmcia on Amiga 1200 and Amiga
  600. If you intend to use pcmcia cards say Y; otherwise say N.

Amiga Zorro II ramdisk support
CONFIG_AMIGA_Z2RAM
  This enables support for using Chip RAM and Zorro II RAM as a
  ramdisk or as a swap partition. Say Y if you want to include this
  driver in the kernel. This driver is also available as a module 
  ( = code which can be inserted in and removed from the running
  kernel whenever you want). The module is called z2ram.o. If you want
  to compile it as a module, say M here and read
  Documentation/modules.txt.

Atari ST-RAM swap support
CONFIG_STRAM_SWAP
  This enables support for using (parts of) ST-RAM as swap space,
  instead of as normal system memory. This can first enhance system
  performance if you have lots of alternate RAM (compared to the size
  of ST-RAM), because executable code always will reside in faster
  memory. ST-RAM will remain as ultra-fast swap space. On the other
  hand, it allows much improved dynamic allocations of ST-RAM buffers
  for device driver modules (e.g. floppy, ACSI, SLM printer, DMA
  sound). The probability that such allocations at module load time
  fail is drastically reduced.

Atari ACSI support
CONFIG_ATARI_ACSI
  This enables support for the Atari ACSI interface. The driver
  supports hard disks and CD-ROMs, which have 512-byte sectors, or can
  be switched to that mode. Due to the ACSI command format, only disks
  up to 1 GB are supported. Special support for certain ACSI to SCSI
  adapters, which could relax that, isn't included yet. The ACSI
  driver is also the basis for certain other drivers for devices
  attached to the ACSI bus: Atari SLM laser printer, BioNet-100
  Ethernet, and PAMsNet Ethernet. If you want to use one of these
  devices, you need ACSI support, too. 

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called acsi.o.

Probe all LUNs on each ACSI device
CONFIG_ACSI_MULTI_LUN
  If you have a ACSI device that supports more than one LUN (Logical
  Unit Number), e.g. a CD jukebox, you should say Y here so that all
  will be found by the ACSI driver. An ACSI device with multiple LUNs
  acts logically like multiple ACSI devices. The vast majority of ACSI
  devices have only one LUN, and so most people can say N here and
  should in fact do so, because it is safer.

Atari SLM laser printer support
CONFIG_ATARI_SLM
  If you have an Atari SLM laser printer, say Y to include support for
  it in the kernel. Otherwise, say N. This driver is also available as
  a module ( = code which can be inserted in and removed from the
  running kernel whenever you want). The module will be called
  acsi_slm.o. Be warned: the driver needs much ST-RAM and can cause
  problems due to that fact!

A3000 WD33C93A support
CONFIG_A3000_SCSI
  If you have an Amiga 3000 and have SCSI devices connected to the
  built-in SCSI controller, say Y. Otherwise, say N. This driver is
  also available as a module ( = code which can be inserted in and
  removed from the running kernel whenever you want). The module is
  called wd33c93.o. If you want to compile it as a module, say M here
  and read Documentation/modules.txt.

A2091 WD33C93A support
CONFIG_A2091_SCSI
  If you have a Commodore A2091 SCSI controller, say Y. Otherwise,
  say N. This driver is also available as a module ( = code which can
  be inserted in and removed from the running kernel whenever you
  want). The module is called wd33c93.o. If you want to compile it as
  a module, say M here and read Documentation/modules.txt.

GVP Series II WD33C93A support
CONFIG_GVP11_SCSI
  If you have a Great Valley Products Series II SCSI controller,
  answer Y. Also say Y if you have a later model of GVP SCSI
  controller (such as the GVP A4008 or a Combo board). Otherwise,
  answer N. This driver does NOT work for the T-Rex series of
  accelerators from TekMagic and GVP-M.

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you
  want). The module will be called gvp11.o. If you want to compile it
  as a module, say M here and read Documentation/modules.txt.

Cyberstorm SCSI support
CONFIG_CYBERSTORM_SCSI
  If you have an Amiga with an original (MkI) Phase5 Cyberstorm
  accelerator board and the optional Cyberstorm SCSI controller,
  answer Y. Otherwise, say N.

Cyberstorm II SCSI support
CONFIG_CYBERSTORMII_SCSI
  If you have an Amiga with a Phase5 Cyberstorm MkII accelerator board
  and the optional Cyberstorm SCSI controller, say Y. Otherwise,
  answer N.

Blizzard 2060 SCSI support (EXPERIMENTAL)
CONFIG_BLZ2060_SCSI
  If you have an Amiga with a Phase5 Blizzard 2060 accelerator board
  and want to use the onboard SCSI controller, say Y. Otherwise,
  answer N.

Blizzard 1230IV/1260 SCSI support
CONFIG_BLZ1230_SCSI
  If you have an Amiga 1200 with a Phase5 Blizzard 1230IV or Blizzard
  1260 accelerator, and the optional SCSI module, say Y. Otherwise,
  say N.

Blizzard PowerUP 603e+ SCSI support
CONFIG_BLZ603EPLUS_SCSI
  If you have an Amiga 1200 with a Phase5 Blizzard PowerUP 603e+
  accelerator, say Y. Otherwise, say N.

Fastlane SCSI support
CONFIG_FASTLANE_SCSI
  If you have the Phase5 Fastlane Z3 SCSI controller, or plan to use
  one in the near future, say Y to this question. Otherwise, say N.

Atari native SCSI support
CONFIG_ATARI_SCSI
  If you have an Atari with built-in NCR5380 SCSI controller (TT,
  Falcon, ...) say Y to get it supported. Of course also, if you have
  a compatible SCSI controller (e.g. for Medusa). This driver is also
  available as a module ( = code which can be inserted in and removed
  from the running kernel whenever you want). The module is called
  atari_scsi.o. If you want to compile it as a module, say M here and
  read Documentation/modules.txt. This driver supports both styles of
  NCR integration into the system: the TT style (separate DMA), and
  the Falcon style (via ST-DMA, replacing ACSI). It does NOT support
  other schemes, like in the Hades (without DMA).

Long delays for Toshiba CD-ROMs
CONFIG_ATARI_SCSI_TOSHIBA_DELAY
  This option increases the delay after a SCSI arbitration to
  accommodate some flaky Toshiba CD-ROM drives. Say Y if you intend to
  use a Toshiba CD-ROM drive; otherwise, the option is not needed and
  would impact performance a bit, so say N.

Hades SCSI DMA emulator
CONFIG_TT_DMA_EMUL
  This option enables code which emulates the TT SCSI DMA chip on the
  Hades. This increases the SCSI transfer rates at least ten times
  compared to PIO transfers.

Ariadne support
CONFIG_ARIADNE
  If you have a Village Tronic Ariadne Ethernet adapter, say Y.
  Otherwise, say N.

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you
  want). The module is called ariadne.o. If you want to compile it as
  a module, say M here and read Documentation/modules.txt.

Ariadne II and X-Surf support
CONFIG_ARIADNE2
  This driver is for the Village Tronic Ariadne II and the Individual
  Computers X-Surf Ethernet cards. If you have such a card, say Y.
  Otherwise, say N.

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called ariadne2.o. If you want to compile it as
  a module, say M here and read Documentation/modules.txt.

A2065 support
CONFIG_A2065
  If you have a Commodore A2065 Ethernet adapter, say Y. Otherwise,
  say N.

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you
  want). The module is called a2065.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt.

Hydra support
CONFIG_HYDRA
  If you have a Hydra Ethernet adapter, say Y. Otherwise, say N.

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you
  want). The module is called hydra.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt.

Pcmcia NE2000 compatible support
CONFIG_APNE
  If you have a pcmcia ne2000 compatible adapter, say Y.  Otherwise,
  say N.

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you
  want). The module is called apne.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt.

Atari Lance support
CONFIG_ATARILANCE
  Say Y to include support for several Atari Ethernet adapters based
  on the AMD Lance chipset: RieblCard (with or without battery), or
  PAMCard VME (also the version by Rhotron, with different addresses).

BioNet-100 support
CONFIG_ATARI_BIONET
  Say Y to include support for BioData's BioNet-100 Ethernet adapter
  for the ACSI port. The driver works (has to work...) with a polled
  I/O scheme, so it's rather slow :-(

PAMsNet support
CONFIG_ATARI_PAMSNET
  Say Y to include support for the PAMsNet Ethernet adapter for the
  ACSI port ("ACSI node"). The driver works (has to work...) with a
  polled I/O scheme, so it's rather slow :-(

Amiga mouse support
CONFIG_AMIGAMOUSE
  If you want to be able to use an Amiga mouse in Linux, say Y. 

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module is called amigamouse.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt.

Atari mouse support
CONFIG_ATARIMOUSE
  If you want to be able to use an Atari mouse in Linux, say Y. 

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module is called atarimouse.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt.

Atari MFP serial support
CONFIG_ATARI_MFPSER
  If you like to use the MFP serial ports ("Modem1", "Serial1") under
  Linux, say Y. The driver equally supports all kinds of MFP serial
  ports and automatically detects whether Serial1 is available. 

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  If you want to compile it as a module, say M here and read
  Documentation/modules.txt. 

  Note for Falcon users: You also have an MFP port, it's just not
  wired to the outside... But you could use the port under Linux.

Atari SCC serial support
CONFIG_ATARI_SCC
  If you have serial ports based on a Zilog SCC chip (Modem2, Serial2,
  LAN) and like to use them under Linux, say Y. All built-in SCC's are
  supported (TT, MegaSTE, Falcon), and also the ST-ESCC. If you have
  two connectors for channel A (Serial2 and LAN), they are visible as
  two separate devices.

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  If you want to compile it as a module, say M here and read
  Documentation/modules.txt.

Atari SCC serial DMA support
CONFIG_ATARI_SCC_DMA
  This enables DMA support for receiving data on channel A of the SCC.
  If you have a TT you may say Y here and read
  drivers/char/atari_SCC.README. All other users should say N here,
  because only the TT has SCC-DMA, even if your machine keeps claiming
  so at boot time.

Atari MIDI serial support
CONFIG_ATARI_MIDI
  If you want to use your Atari's MIDI port in Linux, say Y.

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you
  want). If you want to compile it as a module, say M here and read
  Documentation/modules.txt.

Atari DSP56k Digital Signal Processor support (EXPERIMENTAL)
CONFIG_ATARI_DSP56K
  If you want to be able to use the DSP56001 in Falcons, say Y. This
  driver is still experimental, and if you don't know what it is, or
  if you don't have this processor, just say N.

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  If you want to compile it as a module, say M here and read
  Documentation/modules.txt.

Amiga builtin serial support
CONFIG_AMIGA_BUILTIN_SERIAL
  If you want to use your Amiga's built-in serial port in Linux,
  answer Y.

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you
  want). If you want to compile it as a module, say M here and read
  Documentation/modules.txt.

GVP IO-Extender support
CONFIG_GVPIOEXT
  If you want to use a GVP IO-Extender serial card in Linux, say Y.
  Otherwise, say N.

Multiface Card III serial support
CONFIG_MULTIFACE_III_TTY
  If you want to use a Multiface III card's serial port in Linux,
  answer Y.

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  If you want to compile it as a module, say M here and read
  Documentation/modules.txt.

Atari DMA sound support
CONFIG_DMASOUND_ATARI
  If you want to use the internal audio of your Atari in Linux, answer
  Y to this question. This will provide a Sun-like /dev/audio,
  compatible with the Linux/i386 sound system. Otherwise, say N.

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you
  want). If you want to compile it as a module, say M here and read
  Documentation/modules.txt.

PowerMac DMA sound support
CONFIG_DMASOUND_AWACS
  If you want to use the internal audio of your PowerMac in Linux,
  answer Y to this question. This will provide a Sun-like /dev/audio,
  compatible with the Linux/i386 sound system. Otherwise, say N.

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you
  want). If you want to compile it as a module, say M here and read
  Documentation/modules.txt.

Amiga DMA sound support
CONFIG_DMASOUND_PAULA
  If you want to use the internal audio of your Amiga in Linux, answer
  Y to this question. This will provide a Sun-like /dev/audio,
  compatible with the Linux/i386 sound system. Otherwise, say N.

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you
  want). If you want to compile it as a module, say M here and read
  Documentation/modules.txt.

Q40 sound support
CONFIG_DMASOUND_Q40
  If you want to use the internal audio of your Q40 in Linux, answer
  Y to this question. This will provide a Sun-like /dev/audio,
  compatible with the Linux/i386 sound system. Otherwise, say N.

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you
  want). If you want to compile it as a module, say M here and read
  Documentation/modules.txt.

HP DCA serial support
CONFIG_HPDCA
  If you want to use the internal "DCA" serial ports on an HP300
  machine, say Y here.

HP on-board LANCE support
CONFIG_HPLANCE
  If you want to use the builtin "LANCE" Ethernet controller on an
  HP300 machine, say Y here.

DIO bus support
CONFIG_DIO
  Say Y here to enable support for the "DIO" expansion bus used in
  HP300 machines. If you are using such a system you almost certainly
  want this.

Processor Type
CONFIG_6xx
  There are four types of PowerPC chips supported. The more common
  types (601, 603, 604, 740, 750), the Motorola embedded versions
  (821, 823, 850, 855, 860), the IBM embedded versions (403 and
  405) and the high end 64 bit Power processors (Power 3, Power 4).
  Unless you are building a kernel for one of the embedded
  processor systems, or a 64 bit IBM RS/6000, choose 6xx.  Note that
  the kernel runs in 32-bit mode even on 64-bit chips.

Machine Type
CONFIG_PMAC
  Linux currently supports several different kinds of PowerPC-based
  machines: Apple Power Macintoshes and clones (such as the Motorola
  Starmax series), PReP (PowerPC Reference Platform) machines such as
  the Motorola PowerStack, Amiga Power-Up systems (APUS), CHRP and the
  embedded MBX boards from Motorola. Currently, a single kernel binary
  only supports one type or the other. However, there is very early
  work on support for CHRP, PReP and PowerMac's from a single binary.

Power management support for PowerBooks
CONFIG_PMAC_PBOOK
  This provides support for putting a PowerBook to sleep; it also
  enables media bay support.  Power management works on the
  PB2400/3400/3500, Wallstreet, Lombard, and Bronze PowerBook G3. You
  must get the power management daemon, pmud, to make it work and you
  must have the /dev/pmu device (see the pmud README).

  Get pmud from ftp://linuxcare.com.au/pub/ppclinux/pmud/

  If you have a PowerBook, you should say Y.

  You may also want to compile the dma sound driver as a module and
  have it autoloaded. The act of removing the module shuts down the
  sound hardware for more power savings.

Mac-on-Linux support
CONFIG_MOL
  This option enables low-level support for Mac-on-Linux.
  MOL lets you run MacOS and Linux simultaneously. Please
  visit <http://www.maconlinux.org> for more information.
  If unsure, say Y.

ADB raw keycode support
CONFIG_MAC_ADBKEYCODES
  This provides support for sending raw ADB keycodes to console
  devices.  This is the default up to 2.4.0, but in future this may be
  phased out in favor of generic Linux keycodes. If you say Y here, you
  can dynamically switch via the
      /proc/sys/dev/mac_hid/keyboard_sends_linux_keycodes
  sysctl and with the "keyboard_sends_linux_keycodes=" kernel argument.
  
  If unsure, say Y here.

Mouse button 2+3 emulation support
CONFIG_MAC_EMUMOUSEBTN
  This provides generic support for emulating the 2nd and 3rd mouse
  button with keypresses. If you say Y here, the emulation is still
  disabled by default. The emulation is controlled by these sysctl entries:
      /proc/sys/dev/mac_hid/mouse_button_emulation
      /proc/sys/dev/mac_hid/mouse_button2_keycode
      /proc/sys/dev/mac_hid/mouse_button3_keycode

Enhanced Real Time Clock Support
CONFIG_PPC_RTC
  If you say Y here and create a character special file /dev/rtc with
  major number 10 and minor number 135 using mknod ("man mknod"), you
  will get access to the real time clock (or hardware clock) built 
  into your computer.
  
  If unsure, say Y here.

Support for Open Firmware device tree in /proc
CONFIG_PROC_DEVICETREE
  This option adds a device-tree directory under /proc which contains
  an image of the device tree that the kernel copies from Open
  Firmware. If unsure, say Y here.

MESH (Power Mac internal SCSI) support
CONFIG_SCSI_MESH
  Many Power Macintoshes and clones have a MESH (Macintosh Enhanced
  SCSI Hardware) SCSI bus adaptor (the 7200 doesn't, but all of the
  other Power Macintoshes do). Say Y to include support for this SCSI
  adaptor. This driver is also available as a module called mesh.o
  ( = code which can be inserted in and removed from the running
  kernel whenever you want). If you want to compile it as a module,
  say M here and read Documentation/modules.txt.

Maximum synchronous transfer rate
CONFIG_SCSI_MESH_SYNC_RATE
  On Power Macintoshes (and clones) where the MESH SCSI bus adaptor
  drives a bus which is entirely internal to the machine (such as the
  7500, 7600, 8500, etc.), the MESH is capable of synchronous
  operation at up to 10 MB/s. On machines where the SCSI bus
  controlled by the MESH can have external devices connected, it is
  usually rated at 5 MB/s. 5 is a safe value here unless you know the
  MESH SCSI bus is internal only; in that case you can say 10. Say 0
  to disable synchronous operation.

53C94 (Power Mac external SCSI) support
CONFIG_SCSI_MAC53C94
  On Power Macintoshes (and clones) with two SCSI buses, the external
  SCSI bus is usually controlled by a 53C94 SCSI bus adaptor. Older
  machines which only have one SCSI bus, such as the 7200, also use
  the 53C94. Say Y to include support for the 53C94. 

  This driver is also available as a module called mac53c94.o ( = code
  which can be inserted in and removed from the running kernel
  whenever you want). If you want to compile it as a module, say M
  here and read Documentation/modules.txt.

MACE (Power Mac Ethernet) support
CONFIG_MACE
  Power Macintoshes and clones with Ethernet built-in on the
  motherboard will usually use a MACE (Medium Access Control for
  Ethernet) interface. Say Y to include support for the MACE chip.

  This driver is also available as a module called mace.o ( = code
  which can be inserted in and removed from the running kernel
  whenever you want). If you want to compile it as a module, say M
  here and read Documentation/modules.txt.

BMAC (G3 ethernet) support
CONFIG_BMAC
  Say Y for support of BMAC Ethernet interfaces. These are used on G3
  computers. 

  This driver is also available as a module called bmac.o ( = code
  which can be inserted in and removed from the running kernel
  whenever you want). If you want to compile it as a module, say M
  here and read Documentation/modules.txt.

GMAC (G4/iBook ethernet) support
CONFIG_GMAC
  Say Y for support of GMAC Ethernet interfaces. These are used on G4
  and iBook computers. 

  This driver is also available as a module called gmac.o ( = code
  which can be inserted in and removed from the running kernel
  whenever you want). If you want to compile it as a module, say M
  here and read Documentation/modules.txt.

Symbios 53c885 (Synergy ethernet) support
CONFIG_NCR885E
  This is and Ethernet driver for the dual-function NCR 53C885
  SCSI/Ethernet controller.

  This driver is also available as a module called ncr885e.o ( = code
  which can be inserted in and removed from the running kernel
  whenever you want). If you want to compile it as a module, say M
  here and read Documentation/modules.txt.

National DP83902AV (Oak ethernet) support
CONFIG_OAKNET
  Say Y if your machine has this type of Ethernet network card.

  This driver is also available as a module called oaknet.o ( = code
  which can be inserted in and removed from the running kernel
  whenever you want). If you want to compile it as a module, say M
  here and read Documentation/modules.txt.

Video For Linux
CONFIG_VIDEO_DEV
  Support for audio/video capture and overlay devices and FM radio
  cards. The exact capabilities of each device vary. User tools for
  this are available from
  ftp://ftp.uk.linux.org/pub/linux/video4linux .

  If you are interested in writing a driver for such an audio/video
  device or user software interacting with such a driver, please read
  the file Documentation/video4linux/API.html.

  This driver is also available as a module called videodev.o ( = code
  which can be inserted in and removed from the running kernel
  whenever you want). If you want to compile it as a module, say M
  here and read Documentation/modules.txt.

Video For Linux /proc file system information
CONFIG_VIDEO_PROC_FS
  If you say Y here, you are able to access video device information
  in /proc/video.

  To use this option, you have to check, that the "/proc file system
  support" (CONFIG_PROC_FS) is enabled too.

AIMSlab RadioTrack (aka RadioReveal) support
CONFIG_RADIO_RTRACK
  Choose Y here if you have one of these FM radio cards, and then fill
  in the port address below.

  Note that newer AIMSlab RadioTrack cards have a different chipset
  and are not supported by this driver. For these cards, use the
  RadioTrack II driver below.

  If you have a GemTeks combined (PnP) sound- and radio card you must
  use this driver as a module and setup the card with isapnptools. You
  must also pass the module a suitable io parameter, 0x248 has been
  reported to be used by these cards.

  In order to control your radio card, you will need to use programs
  that are compatible with the Video for Linux API. Information on
  this API and pointers to "v4l" programs may be found on the WWW at
  http://roadrunner.swansea.uk.linux.org/v4l.shtml . More information
  is contained in the file Documentation/video4linux/radiotrack.txt.

  If you want to compile this driver as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt. The module will be
  called radio-aimslab.o.

RadioTrack i/o port
CONFIG_RADIO_RTRACK_PORT
  Enter either 0x30f or 0x20f here. The card default is 0x30f, if you
  haven't changed the jumper setting on the card.

AIMSlab RadioTrack II support
CONFIG_RADIO_RTRACK2
  Choose Y here if you have this FM radio card, and then fill in the 
  port address below.

  In order to control your radio card, you will need to use programs
  that are compatible with the Video for Linux API. Information on 
  this API and pointers to "v4l" programs may be found on the WWW at
  http://roadrunner.swansea.uk.linux.org/v4l.shtml .

  If you want to compile this driver as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt. The module will be
  called radio-rtrack2.o.

RadioTrack II i/o port
CONFIG_RADIO_RTRACK2_PORT
  Enter either 0x30c or 0x20c here. The card default is 0x30c, if you
  haven't changed the jumper setting on the card.

Aztech/Packard Bell Radio
CONFIG_RADIO_AZTECH
  Choose Y here if you have one of these FM radio cards, and then fill
  in the port address below.
  
  In order to control your radio card, you will need to use programs
  that are compatible with the Video for Linux API. Information on 
  this API and pointers to "v4l" programs may be found on the WWW at
  http://roadrunner.swansea.uk.linux.org/v4l.shtml .

  If you want to compile this driver as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt. The module will be
  called radio-aztech.o.

Aztech/Packard Bell radio card i/o port
CONFIG_RADIO_AZTECH_PORT
  Enter either 0x350 or 0x358 here. The card default is 0x350, if you
  haven't changed the setting of jumper JP3 on the card. Removing the
  jumper sets the card to 0x358.

ADS Cadet AM/FM Radio Tuner Card
CONFIG_RADIO_CADET
  Choose Y here if you have one of these AM/FM radio cards, and then
  fill in the port address below.
  
  In order to control your radio card, you will need to use programs
  that are compatible with the Video for Linux API. Information on 
  this API and pointers to "v4l" programs may be found on the WWW at
  http://roadrunner.swansea.uk.linux.org/v4l.shtml .

  Further documentation on this driver can be found on the WWW at
  http://linux.blackhawke.net/cadet.html . 

  If you want to compile this driver as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt. The module will be
  called radio-cadet.o.

SF16FMI Radio
CONFIG_RADIO_SF16FMI
  Choose Y here if you have one of these FM radio cards, and then fill
  in the port address below.

  In order to control your radio card, you will need to use programs
  that are compatible with the Video for Linux API. Information on 
  this API and pointers to "v4l" programs may be found on the WWW at
  http://roadrunner.swansea.uk.linux.org/v4l.shtml .

  If you want to compile this driver as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt. The module will be
  called radio-sf16fmi.o

SF16FMI I/O port (0x284 or 0x384)
CONFIG_RADIO_SF16FMI_PORT
  Enter the I/O port of your SF16FMI radio card.

Typhoon Radio
CONFIG_RADIO_TYPHOON
  Choose Y here if you have one of these FM radio cards, and then fill
  in the port address and the frequency used for muting below.

  In order to control your radio card, you will need to use programs
  that are compatible with the Video for Linux API. Information on 
  this API and pointers to "v4l" programs may be found on the WWW at
  http://roadrunner.swansea.uk.linux.org/v4l.shtml .

  If you want to compile this driver as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt. The module will be
  called radio-typhoon.o

Support for /proc/radio-typhoon
CONFIG_RADIO_TYPHOON_PROC_FS
  Say Y here if you want the typhoon radio card driver to write
  status information (frequency, volume, muted, mute frequency,
  base address) to /proc/radio-typhoon. The file can be viewed with
  your favorite pager (i.e. use "more /proc/radio-typhoon" or "less
  /proc/radio-typhoon" or simply "cat /proc/radio-typhoon").

Typhoon I/O port (0x316 or 0x336)
CONFIG_RADIO_TYPHOON_PORT
  Enter the I/O port of your Typhoon or EcoRadio radio card.

Typhoon frequency set when muting the device (kHz)
CONFIG_RADIO_TYPHOON_MUTEFREQ
  Enter the frequency used for muting the radio. The device is never
  completely silent. If the volume is just turned down, you can still
  hear silent voices and music. For that reason, the frequency of the
  radio device is set to the frequency you can enter here whenever
  the device is muted. There should be no local radio station at that
  frequency.

Zoltrix Radio
CONFIG_RADIO_ZOLTRIX
  Choose Y here if you have one of these FM radio cards, and then fill
  in the port address below.

  In order to control your radio card, you will need to use programs
  that are compatible with the Video for Linux API. Information on 
  this API and pointers to "v4l" programs may be found on the WWW at
  http://roadrunner.swansea.uk.linux.org/v4l.shtml .

  If you want to compile this driver as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt. The module will be
  called radio-zoltrix.o

ZOLTRIX I/O port (0x20c or 0x30c)
CONFIG_RADIO_ZOLTRIX_PORT
  Enter the I/O port of your Zoltrix radio card.

IIC on parallel port
CONFIG_I2C_PARPORT
  I2C is a simple serial bus system used in many micro controller
  applications. Saying Y here will allow you to use your parallel port
  as an I2C interface.

  If you want to compile this driver as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt. The module will be
  called i2c-parport.o.

Miro PCM20 Radio
CONFIG_RADIO_MIROPCM20
  Choose Y here if you have this FM radio card. You also need to say Y
  to "ACI mixer (miroPCM12/PCM20)" (in "additional low level sound
  drivers") for this to work.

  In order to control your radio card, you will need to use programs
  that are compatible with the Video for Linux API. Information on 
  this API and pointers to "v4l" programs may be found on the WWW at
  http://roadrunner.swansea.uk.linux.org/v4l.shtml .

  If you want to compile this driver as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt. The module will be
  called radio-miropcm20.o

GemTek Radio Card
CONFIG_RADIO_GEMTEK
  Choose Y here if you have this FM radio card, and then fill in the 
  port address below.

  In order to control your radio card, you will need to use programs
  that are compatible with the Video for Linux API. Information on 
  this API and pointers to "v4l" programs may be found on the WWW at
  http://roadrunner.swansea.uk.linux.org/v4l.shtml .

  If you want to compile this driver as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt. The module will be
  called radio-gemtek.o.

GemTek i/o port
CONFIG_RADIO_GEMTEK_PORT
  Enter either 0x20c, 0x30c, 0x24c or 0x34c here. The card default is
  0x34c, if you haven't changed the jumper setting on the card. On
  Sound Vision 16 Gold PnP with FM Radio (ESS1869+FM Gemtek), the i/o
  port is 0x28c.

PlanB Video-In for PowerMacs
CONFIG_VIDEO_PLANB
  PlanB is the V4L driver for the PowerMac 7x00/8x00 series video
  input hardware. If you want to experiment with this, say Y.
  Otherwise, or if you don't understand a word, say N.
  See http://www.cpu.lu/~mlan/planb.html for more info.

  Saying M will compile this driver as a module (planb.o).

TerraTec ActiveRadio
CONFIG_RADIO_TERRATEC
  Choose Y here if you have this FM radio card, and then fill in the
  port address below. (TODO)

  Note: This driver is in its early stages. Right now volume and
  frequency control and muting works at least for me, but
  unfortunately i have not found anybody who wants to use this card
  with Linux. So if it is this what YOU are trying to do right now,
  PLEASE DROP ME A NOTE!! Rolf Offermanns (rolf@offermanns.de)
  
  In order to control your radio card, you will need to use programs
  that are compatible with the Video for Linux API. Information on
  this API and pointers to "v4l" programs may be found on the WWW at
  http://roadrunner.swansea.uk.linux.org/v4l.shtml .

  If you want to compile this driver as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want),
  say M here and read Documentation/modules.txt. The module will be
  called radio-terratec.o.

Terratec i/o port (normally 0x590)
CONFIG_RADIO_TERRATEC_PORT
  Fill in the i/o port of your TerraTec FM radio card. If unsure, go
  with the default.

### Add these
# Zoran ZR36057/36060 support
# CONFIG_VIDEO_ZORAN

# Include support for Iomega Buz
# CONFIG_VIDEO_BUZ

Trust FM radio card
CONFIG_RADIO_TRUST
  This is a driver for the Trust FM radio cards. Say Y if you have
  such a card and want to use it under Linux.

  This driver is also available as a module called radio-trust.o ( =
  code which can be inserted in and removed from the running kernel
  whenever you want). If you want to compile it as a module, say M
  here and read Documentation/modules.txt.

Trust i/o port (usually 0x350 or 0x358)
CONFIG_RADIO_TRUST_PORT
  Enter the i/o port of your Trust FM radio card. If unsure, try the
  values "0x350" or "0x358".

BT848 Video For Linux
CONFIG_VIDEO_BT848
  Support for BT848 based frame grabber/overlay boards. This includes
  the Miro, Hauppauge and STB boards. Please read the material in
  Documentation/video4linux/bttv for more information.

  If you say Y or M here, you need to say Y or M to "I2C support" and
  "I2C bit-banging interfaces" in the character device section.
  
  This driver is available as a module called bttv.o ( = code
  which can be inserted in and removed from the running kernel
  whenever you want). If you want to compile it as a module, say M
  here and read Documentation/modules.txt.

ZR36120/36125 Video for Linux
CONFIG_VIDEO_ZR36120
  Support for ZR36120/ZR36125 based frame grabber/overlay boards.
  This includes the Victor II, WaveWatcher, Video Wonder, Maxi-TV,
  and Buster boards. Please read the material in
  Documentation/video4linux/zr36120.txt for more information.

  This driver is also available as a module called zr36120.o ( = code
  which can be inserted in and removed from the running kernel
  whenever you want). If you want to compile it as a module, say M
  here and read Documentation/modules.txt.

SAA5249 Teletext processor
CONFIG_VIDEO_SAA5249
  Support for I2C bus based teletext using the SAA5249 chip. At the
  moment this is only useful on some European WinTV cards.

  This driver is also available as a module called saa5249.o ( = code
  which can be inserted in and removed from the running kernel
  whenever you want). If you want to compile it as a module, say M
  here and read Documentation/modules.txt.

Quickcam BW Video For Linux
CONFIG_VIDEO_BWQCAM
  Say Y have if you the black and white version of the QuickCam
  camera. See the next option for the color version. 

  This driver is also available as a module called bw-qcam.o ( = code
  which can be inserted in and removed from the running kernel
  whenever you want). If you want to compile it as a module, say M
  here and read Documentation/modules.txt.

Colour QuickCam Video For Linux
CONFIG_VIDEO_CQCAM
  This is the video4linux driver for the colour version of the
  Connectix Quickcam. If you have one of these cameras, say Y here,
  otherwise say N. This driver does not work with the original
  monochrome Quickcam, Quickcam VC or QuickClip. It is also available
  as a module (c-qcam.o). Read Documentation/video4linux/CQcam.txt for
  more information.

CPiA Video For Linux
CONFIG_VIDEO_CPIA
  This is the video4linux driver for cameras based on Vision's CPiA
  (Colour Processor Interface ASIC), such as the Creative Labs Video
  Blaster Webcam II. If you have one of these cameras, say Y here
  and select parallel port and/or USB lowlevel support below,
  otherwise say N. This will not work with the Creative Webcam III.
  
  Please read Documentation/video4linux/README.cpia for more
  information.
  
  This driver is also available as a module (cpia.o).

CPiA Parallel Port Lowlevel Support
CONFIG_VIDEO_CPIA_PP
  This is the lowlevel parallel port support for cameras based on
  Vision's CPiA (Colour Processor Interface ASIC), such as the
  Creative Webcam II. If you have the parallel port version of one
  of these cameras, say Y here, otherwise say N. It is also available
  as a module (cpia_pp.o).

CPiA USB Lowlevel Support
CONFIG_VIDEO_CPIA_USB
  This is the lowlevel USB support for cameras based on Vision's CPiA
  (Colour Processor Interface ASIC), such as the Creative Webcam II.
  If you have the USB version of one of these cameras, say Y here,
  otherwise say N. This will not work with the Creative Webcam III.
  It is also available as a module (cpia_usb.o).

Mediavision Pro Movie Studio Video For Linux
CONFIG_VIDEO_PMS
  Say Y if you have such a thing. This driver is also available as a
  module called pms.o ( = code which can be inserted in and removed
  from the running kernel whenever you want). If you want to compile
  it as a module, say M here and read Documentation/modules.txt.

SAB3036 tuner support
CONFIG_TUNER_3036
  Say Y here to include support for Philips SAB3036 compatible tuners.
  If in doubt, say N.

Compaq SMART2 support
CONFIG_BLK_CPQ_DA
   This is the driver for Compaq Smart Array controllers.  
   Everyone using these boards should say Y here.  
   See the file Documentation/cpqarray.txt for the current list of 
   boards supported by this driver, and for further information 
   on the use of this driver. 

#
# ARM options
#
ARM System type
CONFIG_ARCH_ARCA5K
  This selects what ARM system you wish to build the kernel for. It
  also selects to some extent the CPU type. If you are unsure what
  to set this option to, please consult any information supplied with
  your system.

2MB physical memory
CONFIG_PAGESIZE_16
  Say Y here if your Archimedes or A5000 system has only 2MB of
  memory, otherwise say N.  The resulting kernel will not run on a
  machine with 4MB of memory.

Include support for the CATS
CONFIG_ARCH_CATS
  Say Y here if you intend to run this kernel on the CATS.

  Saying N will reduce the size of the Footbridge kernel.

Include support for the EBSA285
CONFIG_ARCH_EBSA285
  Say Y here if you intend to run this kernel on the EBSA285 card
  in host ("central function") mode.

  Saying N will reduce the size of the Footbridge kernel.

Include support for the LinkUp Systems L7200 SDB
CONFIG_ARCH_L7200
  Say Y here if you intend to run this kernel on a LinkUp Systems
  L7200 Software Development Board which uses an ARM720T processor.
  Information on this board can be obtained at:

  http://www.linkupsys.com/

  If you have any questions or comments about the Linux kernel port
  to this board, send e-mail to sjhill@cotw.com

Include support for the NetWinder
CONFIG_ARCH_NETWINDER
  Say Y here if you intend to run this kernel on the Rebel.COM
  NetWinder.  Information about this machine can be found at:

  http://www.netwinder.org/

  Saying N will reduce the size of the Footbridge kernel.

Include support for the Compaq Personal Server
CONFIG_ARCH_PERSONAL_SERVER
  Say Y here if you intend to run this kernel on the Compaq
  Personal Server.
  
  Saying N will reduce the size of the Footbridge kernel.

  The Compaq Personal Server is not available for purchase. 
  There are no product plans beyond the current research
  prototypes at this time.  Information is available at:
  
  http://crl.research.compaq.com/projects/personalserver
  
  If you have any questions or comments about the  Compaq Personal
  Server, send e-mail to skiff@crl.dec.com

Include support for Assabet
CONFIG_SA1100_ASSABET
  Say Y here if you are using the Intel(R) StrongARM(R) SA-1110
  Microprocessor Development Board (also known as the Assabet).

Include support for Neponset
CONFIG_ASSABET_NEPONSET
  Say Y here if you are using the Intel(R) StrongARM(R) SA-1110
  Microprocessor Development Board (Assabet)  with the SA-1111
  Development Board (Nepon).

Include support for the Compaq iPAQ H3600 (Bitsy)
CONFIG_SA1100_BITSY
  Say Y here if you intend to run this kernel on the Compaq iPAQ 
  H3600 handheld computer.  Information about this machine and the
  Linux port to this machine can be found at:

  http://www.handhelds.org/Compaq/index.html#iPAQ_H3600
  http://www.compaq.com/products/handhelds/pocketpc/

Include support for Brutus
CONFIG_SA1100_BRUTUS
  Say Y here if you are using the Intel(R) StrongARM(R) SA-1100
  Microprocessor Development Board (also known as the Brutus).

Include support for LART
CONFIG_SA1100_LART
  Say Y here if you are using the Linux Advanced Radio Terminal
  (also known as the LART).  See http://www.lart.tudelft.nl/ for
  information on the LART.

Include support for GraphicsClient
CONFIG_SA1100_GRAPHICSCLIENT
  Say Y here if you are using an Applied Data Systems Intel(R)
  StrongARM(R) SA-1100 based Graphics Client SBC.  See
  http://www.flatpanels.com/ for information on this system.

Include support for Victor
CONFIG_SA1100_VICTOR
  Say Y here if you are using a Visu Aide Intel(R) StrongARM(R)
  SA-1100 based Victor Digital Talking Book Reader.  See
  http://www.visuaide.com/pagevictor.en.html for information on
  this system.

Support ARM610 processor
CONFIG_CPU_ARM6
  Say Y here if you wish to include support for the ARM610 processor.

Support ARM710 processor
CONFIG_CPU_ARM7
  Say Y here if you wish to include support for the ARM710 processor.

Support StrongARM(R) SA-110 processor
CONFIG_CPU_SA110
  Say Y here if you wish to include support for the Intel(R)
  StrongARM(R) SA-110 processor.

Support ARM720 processor
CONFIG_CPU_ARM720
  Say Y here if you wish to include support for the ARM720 processor.

Support ARM920
CONFIG_CPU_ARM920
  Say Y here if you wish to include support for the ARM920 processor.

Support ARM610 processor
CONFIG_CPU_ARM6
  Say Y here if you wish to include support for the ARM610 processor.

Support ARM710 processor
CONFIG_CPU_ARM7
  Say Y here if you wish to include support for the ARM710 processor.

Support StrongARM(R) SA-110 processor
CONFIG_CPU_SA110
  Say Y here if you wish to include support for the Intel(R)
  StrongARM(R) SA-110 processor.

Support ARM720 processor
CONFIG_CPU_ARM720
  Say Y here if you wish to include support for the ARM720 processor.

Support ARM920
CONFIG_CPU_ARM920
  Say Y here if you wish to include support for the ARM920 processor.

Math emulation
CONFIG_NWFPE
  Say Y to include the NWFPE floating point emulator in the kernel.
  This is necessary to run most binaries. Linux does not currently
  support floating point hardware so you need to say Y here even if
  your machine has an FPA or floating point co-processor podule.

  It is also possible to say M to build the emulator as a module
  (nwfpe.o) or indeed to leave it out altogether. However, unless you
  know what you are doing this can easily render your machine
  unbootable. Saying Y is the safe option.

  You may say N here if you are going to load the Acorn FPEmulator
  early in the bootup.

DS1620 Thermometer support
CONFIG_DS1620
  Say Y here to include support for the thermal management hardware
  found in the NetWinder. This driver allows the user to control the
  temperature set points and to read the current temperature.

  It is also possible to say M here to build it as a module (ds1620.o)
  It is recommended to be used on a NetWinder, but it is not a
  necessity.

Verbose kernel error messages
CONFIG_DEBUG_ERRORS
  This option controls verbose debugging information which can be
  printed when the kernel detects an internal error. This debugging
  information is useful to kernel hackers when tracking down problems,
  but mostly meaningless to other people. It's safe to say Y unless
  you are concerned with the code size or don't want to see these
  messages.

Compile kernel with frame pointer
CONFIG_FRAME_POINTER
  If you say Y here, the resulting kernel will be slightly larger and
  slower, but it will give useful debugging information. If you don't
  debug the kernel, you can say N.

User fault debugging
CONFIG_DEBUG_USER
  When a user program crashes due to an exception, the kernel can
  print a brief message explaining what the problem was. This is
  sometimes helpful for debugging but serves no purpose on a
  production system. Most people should say N here.

Include gdb debugging information in kernel binary
CONFIG_DEBUG_INFO
  Say Y here to include source-level debugging information in the
  `vmlinux' binary image. This is handy if you want to use gdb or
  addr2line to debug the kernel. It has no impact on the in-memory
  footprint of the running kernel but it can increase the amount of
  time and disk space needed for compilation of the kernel. If in
  doubt say N.

Kernel low-level debugging functions
CONFIG_DEBUG_LL
  Say Y here to include definitions of printascii, printchar, printhex
  in the kernel.  This is helpful if you are debugging code that
  executes before the console is initialized.

Kernel low-level debugging messages via footbridge serial port
CONFIG_DEBUG_DC21285_PORT
  Say Y here if you want the low-level print routines to direct their
  output to the serial port in the DC21285 (Footbridge).

Split initialisation functions into discardable section
CONFIG_TEXT_SECTIONS
  If you say Y here, kernel code that is only used during
  initialisation is collected into a special area of the kernel so
  that it can be discarded and the memory reclaimed when
  initialisation is complete. In addition, if the kernel you wish to
  build is able to run on multiple architectures, it allows the unused
  code to be discarded. Some versions of binutils, however, have a bug
  that causes the kernel to crash during startup when this option is
  enabled. Say Y unless you experience problems that you suspect may
  be caused by this.

Disable pgtable cache (EXPERIMENTAL)
CONFIG_NO_PGT_CACHE
  Normally the kernel maintains a `quicklist' of preallocated
  pagetable structures in order to increase performance. On machines
  with very few pages this may however be a loss. Say Y here to
  disable the pgtable cache.

RISC OS personality
CONFIG_ARTHUR
  Say Y here to include the kernel code necessary if you want to run
  Acorn RISC OS/Arthur binaries under Linux. This code is still very 
  experimental; if this sounds frightening, say N and sleep in peace.
  You can also say M here to compile this support as a module (which
  will be called arthur.o).

Initial kernel command line
CONFIG_CMDLINE
  On some architectures (EBSA110 and CATS), there is currently no way
  for the boot loader to pass arguments to the kernel. For these
  architectures, you should supply some command-line options at build
  time by entering them here. As a minimum, you should specify the
  memory size and the root device (e.g., mem=64M root=/dev/nfs)

Hardware alignment trap (EXPERIMENTAL)
CONFIG_ALIGNMENT_TRAP
  ARM processors can not fetch/store information which is not
  naturally aligned on the bus, i.e., a 4 byte fetch must start at an
  address divisible by 4. On 32-bit ARM processors, these non-aligned
  fetch/store instructions will be emulated in software if you say
  here, which has a severe performance impact. This is necessary for
  correct operation of some network protocols. With an IP-only
  configuration it is safe to say N, otherwise say Y.

21285 serial port support
CONFIG_SERIAL_21285
  If you have a machine based on a 21285 (Footbridge) StrongARM(R)/
  PCI bridge you can enable its onboard serial port by enabling this
  option. The device has major ID 4, minor 64.

Console on 21285 serial port
CONFIG_SERIAL_21285_CONSOLE
  If you have enabled the serial port on the 21285 footbridge you can
  make it the console by answering Y to this option.

SA1100 serial port support
CONFIG_SERIAL_SA1100
  If you have a machine based on a SA1100/SA1110 StrongARM CPU you can
  enable its onboard serial port by enabling this option.
  Please read Documentation/arm/SA1100/serial_UART for further info.

Console on SA1100 serial port
CONFIG_SERIAL_SA1100_CONSOLE
  If you have enabled the serial port on the SA1100/SA1110 StrongARM
  CPU you can make it the console by answering Y to this option.

L7200 serial port support
CONFIG_SERIAL_L7200
  If you have a LinkUp Systems L7200 board you can enable its two
  onboard serial ports by enabling this option. The device numbers
  are major ID 4 with minor 64 and 65 respectively.

Console on L7200 serial port
CONFIG_SERIAL_L7200_CONSOLE
  If you have enabled the serial ports on the L7200 development board
  you can make the first serial port the console by answering Y to
  this option.

Footbridge Mode
CONFIG_HOST_FOOTBRIDGE
  The 21285 Footbridge chip can operate in either `host mode' or
  `add-in' mode.  Say Y if your 21285 is in host mode, and therefore
  is the configuration master, otherwise say N. This must not be
  set to Y if the card is used in 'add-in' mode.

MFM hard disk support
CONFIG_BLK_DEV_MFM
  Support the MFM hard drives on the Acorn Archimedes both
  on-board the A4x0 motherboards and via the Acorn MFM podules.
  Drives up to 64MB are supported. If you haven't got one of these
  machines or drives just say N.

Old Archimedes floppy (1772) support
CONFIG_BLK_DEV_FD1772
  Support the floppy drive on the Acorn Archimedes (A300, A4x0, A540,
  R140 and R260) series of computers; it supports only 720K floppies
  at the moment. If you don't have one of these machines just answer
  N.

Autodetect hard drive geometry
CONFIG_BLK_DEV_MFM_AUTODETECT
  If you answer Y, the MFM code will attempt to automatically detect
  the cylinders/heads/sectors count on your hard drive. WARNING: This
  sometimes doesn't work and it also does some dodgy stuff which
  potentially might damage your drive.

NetWinder /dev/flash support
CONFIG_NWFLASH
  If you say Y here and create a character device /dev/flash with
  major 10 and minor 160 you can manipulate the flash ROM containing
  the NetWinder firmware. Be careful as accidentally overwriting the
  flash contents can render your computer unbootable. On no account
  allow random users access to this device. :-)

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called nwflash.o. If you want to compile it as a
  module, say M here and read Documentation/modules.txt.

  If you're not sure, say N.

Footbridge internal watchdog
CONFIG_21285_WATCHDOG
  The Intel Footbridge chip contains a builtin watchdog circuit. Say Y 
  here if you wish to use this. Alternatively say M to compile the
  driver as a module, which will be called wdt285.o.

  This driver does not work on all machines. In particular, early CATS 
  boards have hardware problems that will cause the machine to simply 
  lock up if the watchdog fires.

  "If in doubt, leave it out" - say N.

NetWinder WB977 watchdog
CONFIG_977_WATCHDOG
  Say Y here to include support for the WB977 watchdog included in 
  NetWinder machines. Alternatively say M to compile the driver as
  a module, which will be called wdt977.o.

  Not sure? It's safe to say N.

IrDA subsystem support
CONFIG_IRDA
  Say Y here if you want to build support for the IrDA (TM) protocols.
  The Infrared Data Associations (tm) specifies standards for wireless
  infrared communication and is supported by most laptops and PDA's.

  To use Linux support for the IrDA (tm) protocols, you will also need
  some user-space utilities like the irmanager and probably irattach
  as well. For more information, see the file
  Documentation/networking/irda.txt. You also want to read the
  IR-HOWTO, available at http://www.linuxdoc.org/docs.html#howto .

  This support is also available as a module called irda.o. If you
  want to compile it as a module, say M here and read
  Documentation/modules.txt.

IrDA Cache last LSAP
CONFIG_IRDA_CACHE_LAST_LSAP
  Say Y here if you want IrLMP to cache the last LSAP used. This makes
  sense since most frames will be sent/received on the same
  connection. Enabling this option will save a hash-lookup per frame.

  If unsure, say Y.

IrDA Fast RR's
CONFIG_IRDA_FAST_RR
  Say Y here is you want IrLAP to send fast RR (Receive Ready) frames
  when acting as a primary station. This will make IrLAP send out a RR
  frame immediately when receiving a frame if its own transmit queue
  is currently empty. This will give a lot of speed improvement when
  receiving much data since the secondary station will not have to
  wait the max. turn around time before it is allowed to transmit the
  next time. If the transmit queue of the secondary is also empty the
  primary will back off waiting longer for sending out the RR frame
  until the timeout reaches the normal value. Enabling this option
  will make the IR-diode burn more power and thus reduce your battery
  life.

  If unsure, say N.

IrDA Debug
CONFIG_IRDA_DEBUG
  Say Y here if you want the IrDA subsystem to write debug information
  to your syslog. You can change the debug level in
  /proc/sys/net/irda/debug

  If unsure, say Y (since it makes it easier to find the bugs).

IrLAP Compression support
CONFIG_IRDA_COMPRESSION
  Compression is _not_ part of the IrDA(tm) protocol specification,
  but it's working great! Linux is the first to try out compression
  support at the IrLAP layer. This means that you will only benefit
  from compression if you are running a Linux <-> Linux configuration.
  
  If you say Y here, you also need to say Y or M to a compression
  protocol below.

IrLAP Deflate Compression Protocol (EXPERIMENTAL)
CONFIG_IRDA_DEFLATE
  Say Y here if you want to build support for the Deflate compression
  protocol. The deflate compression (GZIP) is exactly
  the same as the one used by the PPP protocol. 

  If you want to compile this compression support as a module, say M
  here and read Documentation/modules.txt. The module will be called
  irda_deflate.o.

IrLAN Protocol 
CONFIG_IRLAN
  Say Y here if you want to build support for the IrLAN protocol. If
  you want to compile it as a module (irlan.o), say M here and read
  Documentation/modules.txt. IrLAN emulates an Ethernet and makes it
  possible to put up a wireless LAN using infrared beams.

  The IrLAN protocol can be used to talk with infrared access points 
  like the HP NetbeamIR, or the ESI JetEye NET. You can also connect 
  to another Linux machine running the IrLAN protocol for ad-hoc 
  networking!

IrCOMM Protocol
CONFIG_IRCOMM
  Say Y here if you want to build support for the IrCOMM protocol. If
  you want to compile it as a module (you will get ircomm.o and
  ircomm-tty.o), say M here and read Documentation/modules.txt. IrCOMM
  implements serial port emulation, and makes it possible to use all
  existing applications that understands TTY's with an infrared link.
  Thus you should be able to use application like PPP, minicom and
  others. Enabling this option will create two modules called ircomm
  and ircomm_tty.

IrTTY IrDA Device Driver
CONFIG_IRTTY_SIR
  Say Y here if you want to build support for the IrTTY line
  discipline. If you want to compile it as a module (irtty.o), say M
  here and read Documentation/modules.txt. IrTTY makes it possible to
  use Linux's own serial driver for all IrDA ports that are 16550
  compatible. Most IrDA chips are 16550 compatible so you should
  probably say Y to this option. Using IrTTY will however limit the
  speed of the connection to 115200 bps (IrDA SIR mode)

  If unsure, say Y.

IrPORT IrDA Device Driver
CONFIG_IRPORT_SIR
  Say Y here if you want to build support for the IrPORT IrDA device
  driver. If you want to compile it as a module (irport.o), say M here
  and read Documentation/modules.txt. IrPORT can be used instead of
  IrTTY and sometimes this can be better. One example is if your IrDA
  port does not have echo-canceling, which will work OK with IrPORT
  since this driver is working in half-duplex mode only. You don't
  need to use irattach with IrPORT, but you just insert it the same
  way as FIR drivers (insmod irport io=0x3e8 irq=11). Notice that
  IrPORT is a SIR device driver which means that speed is limited to
  115200 bps.

  If unsure, say Y.

Winbond W83977AF IrDA Device Driver
CONFIG_WINBOND_FIR
  Say Y here if you want to build IrDA support for the Winbond
  W83977AF super-io chipset. This driver should be used for the IrDA
  chipset in the Corel NetWinder. The driver supports SIR, MIR and FIR
  (4Mbps) speeds.

  If you want to compile it as a module, say M here and read
  Documentation/modules.txt. The module will be called w83977af_ir.o.

NSC PC87108 IrDA Device Driver
CONFIG_NSC_FIR
  Say Y here if you want to build support for the NSC PC87108 and
  PC87338 IrDA chipsets. This driver supports SIR, 
  MIR and FIR (4Mbps) speeds. 

  If you want to compile it as a module, say M here and read
  Documentation/modules.txt. The module will be called nsc-ircc.o.

Toshiba Type-O IR Port Device Driver
CONFIG_TOSHIBA_FIR
  Say Y here if you want to build support for the Toshiba Type-O IR
  chipset. This chipset is used by the Toshiba Libretto 100CT, and
  many more laptops. If you want to compile it as a module, say M here
  and read Documentation/modules.txt. The module will be called
  toshoboe.o.

SMC IrCC (Experimental)
CONFIG_SMC_IRCC_FIR
  Say Y here if you want to build support for the SMC Infrared
  Communications Controller. It is used in the Fujitsu Lifebook 635t
  and Sony PCG-505TX. If you want to compile it as a module, say M
  here and read Documentation/modules.txt. The module will be called
  smc-ircc.o.

Serial dongle support
CONFIG_DONGLE
  Say Y here if you have an infrared device that connects to your
  computer's serial port. These devices are called dongles. Then say Y
  or M to the driver for your particular dongle below.

  Note that the answer to this question won't directly affect the
  kernel: saying N will just cause this configure script to skip all
  the questions about serial dongles.

ESI JetEye PC Dongle
CONFIG_ESI_DONGLE
  Say Y here if you want to build support for the Extended Systems
  JetEye PC dongle. If you want to compile it as a module, say M here
  and read Documentation/modules.txt. The ESI dongle attaches to the
  normal 9-pin serial port connector, and can currently only be used
  by IrTTY. To activate support for ESI dongles you will have to
  start irattach like this: "irattach -d esi".

ACTiSYS IR-220L and IR220L+ dongle
CONFIG_ACTISYS_DONGLE
  Say Y here if you want to build support for the ACTiSYS
  IR-220L and IR220L+ dongles. If you want to compile it as a module,
  say M here and read Documentation/modules.txt. The ACTiSYS dongles
  attaches to the normal 9-pin serial port connector, and can
  currently only be used by IrTTY. To activate support for ACTiSYS
  dongles you will have to start irattach like this: 
  "irattach -d actisys" or "irattach -d actisys+".

Tekram IrMate 210B dongle
CONFIG_TEKRAM_DONGLE
  Say Y here if you want to build support for the Tekram IrMate 210B 
  dongle. If you want to compile it as a module, say M here
  and read Documentation/modules.txt. The Tekram dongle attaches to
  the normal 9-pin serial port connector, and can currently only be
  used by IrTTY. To activate support for Tekram dongles you will have
  to start irattach like this: "irattach -d tekram".

Greenwich GIrBIL dongle
CONFIG_GIRBIL_DONGLE
  Say Y here if you want to build support for the Greenwich GIrBIL
  dongle. If you want to compile it as a module, say M here and read
  Documentation/modules.txt. The Greenwich dongle attaches to the
  normal 9-pin serial port connector, and can currently only be used
  by IrTTY. To activate support for Greenwich dongles you will have to
  insert "irattach -d girbil" in the /etc/irda/drivers script.

Parallax Litelink dongle
CONFIG_LITELINK_DONGLE
  Say Y here if you want to build support for the Parallax Litelink
  dongle. If you want to compile it as a module, say M here and read
  Documentation/modules.txt. The Parallax dongle attaches to the
  normal 9-pin serial port connector, and can currently only be used
  by IrTTY. To activate support for Parallax dongles you will have to
  start irattach like this "irattach -d litelink".

Old Belkin dongle
CONFIG_OLD_BELKIN_DONGLE
  Say Y here if you want to build support for the Adaptec Airport 1000
  and 2000 dongles. If you want to compile it as a module, say M here
  and read Documentation/modules.txt. The module will be called
  old_belkin.o. Some information is contained in the comments at the
  top of drivers/net/irda/old_belkin.c.

VME (Motorola and BVM) support
CONFIG_VME
  Say Y here if you want to build a kernel for a 680x0 based VME
  board.  Boards currently supported include Motorola boards MVME162,
  MVME166, MVME167, MVME172, and MVME177.  BVME4000 and BVME6000
  boards from BVM Ltd are also supported.

MVME162, 166 and 167 support
CONFIG_MVME16x
  Say Y to include support for Motorola VME boards.  This will build a
  kernel which can run on MVME162, MVME166, MVME167, MVME172, and
  MVME177 boards.  If you select this option you will have to select
  the appropriate drivers for SCSI, Ethernet and serial ports later
  on.

BVME4000 and BVME6000 support
CONFIG_BVME6000
  Say Y to include support for VME boards from BVM Ltd.  This will
  build a kernel which can run on BVME4000 and BVME6000 boards.  If
  you select this option you will have to select the appropriate
  drivers for SCSI, Ethernet and serial ports later on.

Use write-through caching for 68060 supervisor accesses
CONFIG_060_WRITETHROUGH
  The 68060 generally uses copyback caching of recently accessed data.
  Copyback caching means that memory writes will be held in an on-chip
  cache and only written back to memory some time later.  Saying Y
  here will force supervisor (kernel) accesses to use writethrough
  caching.  Writethrough caching means that data is written to memory
  straight away, so that cache and memory data always agree.
  Writethrough caching is less efficient, but is needed for some
  drivers on 68060 based systems where the 68060 bus snooping signal
  is hardwired on.  The 53c710 SCSI driver is known to suffer from
  this problem.

NCR53C710 SCSI driver for MVME16x
CONFIG_MVME16x_SCSI
  The Motorola MVME162, 166, 167, 172 and 177 boards use the NCR53C710
  SCSI controller chip.  Almost everyone using one of these boards
  will want to say Y to this question.

NCR53C710 SCSI driver for BVME6000
CONFIG_BVME6000_SCSI
  The BVME4000 and BVME6000 boards from BVM Ltd use the NCR53C710
  SCSI controller chip.  Almost everyone using one of these boards
  will want to say Y to this question.

MVME16x Ethernet support
CONFIG_MVME16x_NET
  This is the driver for the Ethernet interface on the Motorola
  MVME162, 166, 167, 172 and 177 boards.  Say Y here to include the
  driver for this chip in your kernel.   If you want to compile it as
  a module, say M here and read Documentation/modules.txt.

BVME6000 Ethernet support
CONFIG_BVME6000_NET
  This is the driver for the Ethernet interface on BVME4000 and
  BVME6000 VME boards.  Say Y here to include the driver for this chip
  in your kernel.   If you want to compile it as a module, say M here
  and read Documentation/modules.txt.

CD2401 support for MVME166/7 serial ports
CONFIG_SERIAL167
  This is the driver for the serial ports on the Motorola MVME166,
  167, and 172 boards.  Everyone using one of these boards should say
  Y here.

SCC support for MVME162 serial ports
CONFIG_MVME162_SCC
  This is the driver for the serial ports on the Motorola MVME162 and
  172 boards.  Everyone using one of these boards should say Y here.

SCC support for BVME6000 serial ports
CONFIG_BVME6000_SCC
  This is the driver for the serial ports on the BVME4000 and BVME6000
  boards from BVM Ltd.  Everyone using one of these boards should say
  Y here.

7-Segment Display support
CONFIG_DISPLAY7SEG
  This is the driver for the 7-segment display and LED present on
  Sun Microsystems CompactPCI models CP1400 and CP1500.

  This driver is also available as a module ( = code which can be
  inserted in and removed from the running kernel whenever you want).
  The module will be called display7seg.o. If you want to compile it
  as a module, say M here and read Documentation/modules.txt.

  If you do not have a CompactPCI model CP1400 or CP1500, or
  another UltraSPARC-IIi-cEngine boardset with a 7-segment display,
  you should say N to this option. 

IA-64 system type
CONFIG_IA64_GENERIC
  This selects the system type of your hardware.  A "generic" kernel
  will run on any supported IA-64 system.  However, if you configure
  a kernel for your specific system, it will be faster and smaller.

  To find out what type of IA-64 system you have, you may want to
  check the IA-64 Linux web site at http://www.linux-ia64.org/.
  As of the time of this writing, most hardware is DIG compliant,
  so the "DIG-compliant" option is usually the right choice.

  HP-simulator   For the HP simulator (http://software.hp.com/ia64linux/).
  SN1-simulator  For the SGI SN1 simulator.
  DIG-compliant  For DIG ("Developer's Interface Guide") compliant system.

  If you don't know what to do, choose "generic".

Kernel page size
CONFIG_IA64_PAGE_SIZE_4KB

  This lets you select the page size of the kernel.  For best IA-64
  performance, a page size of 8KB or 16KB is recommended.  For best
  IA-32 compatibility, a page size of 4KB should be selected (the vast
  majority of IA-32 binaries work perfectly fine with a larger page
  size).  For Itanium systems, do NOT chose a page size larger than
  16KB.

  4KB                For best IA-32 compatibility
  8KB                For best IA-64 performance
  16KB               For best IA-64 performance
  64KB               Not for Itanium.

  If you don't know what to do, choose 8KB.

Enable Itanium A-step specific code
CONFIG_ITANIUM_ASTEP_SPECIFIC
  Select this option to build a kernel for an Itanium prototype system
  with an A-step CPU.  You have an A-step CPU if the "revision" field in
  /proc/cpuinfo is 0.

Enable Itanium B-step specific code
CONFIG_ITANIUM_BSTEP_SPECIFIC
  Select this option to build a kernel for an Itanium prototype system
  with a B-step CPU.  You have a B-step CPU if the "revision" field in
  /proc/cpuinfo has a value in the range from 1 to 4.

Enable Itanium B0-step specific code
CONFIG_ITANIUM_B0_SPECIFIC
  Select this option to bild a kernel for an Itanium prototype system
  with a B0-step CPU.  You have a B0-step CPU if the "revision" field in
  /proc/cpuinfo is 1.

Force interrupt redirection
CONFIG_IA64_HAVE_IRQREDIR
  Select this option if you know that your system has the ability to
  redirect interrupts to different CPUs.  Select N here if you're
  unsure.

Enable use of global TLB purge instruction (ptc.g)
CONFIG_ITANIUM_PTCG
  Say Y here if you want the kernel to use the IA-64 "ptc.g"
  instruction to flush the TLB on all CPUs.  Select N here if
  you're unsure.

Enable SoftSDV hacks
CONFIG_IA64_SOFTSDV_HACKS
  Say Y here to enable hacks to make the kernel work on the Intel
  SoftSDV simulator.  Select N here if you're unsure.

Enable AzusA hacks
CONFIG_IA64_AZUSA_HACKS
  Say Y here to enable hacks to make the kernel work on the NEC
  AzusA platform.  Select N here if you're unsure.

Force socket buffers below 4GB?
CONFIG_SKB_BELOW_4GB
  Most of today's network interface cards (NICs) support DMA to
  the low 32 bits of the address space only.  On machines with
  more then 4GB of memory, this can cause the system to slow
  down if there is no I/O TLB hardware.  Turning this option on
  avoids the slow-down by forcing socket buffers to be allocated
  from memory below 4GB.  The downside is that your system could
  run out of memory below 4GB before all memory has been used up.
  If you're unsure how to answer this question, answer Y.

Enable IA-64 Machine Check Abort
CONFIG_IA64_MCA
  Say Y here to enable machine check support for IA-64.  If you're
  unsure, answer Y.

Performance monitor support
CONFIG_PERFMON
  Selects whether support for the IA-64 performance monitor hardware
  is included in the kernel.  This makes some kernel data-structures a
  little bigger and slows down execution a bit, but it is still
  usually a good idea to turn this on.  If you're unsure, say N.

/proc/pal support
CONFIG_IA64_PALINFO
  If you say Y here, you are able to get PAL (Processor Abstraction
  Layer) information in /proc/pal.  This contains useful information
  about the processors in your systems, such as cache and TLB sizes
  and the PAL firmware version in use.

  To use this option, you have to check that the "/proc file system
  support" (CONFIG_PROC_FS) is enabled, too.

#
# A couple of things I keep forgetting:
#   capitalize: AppleTalk, Ethernet, DOS, DMA, FAT, FTP, Internet, 
#               Intel, IRQ, ISDN, Linux, MSDOS, NetWare, NetWinder, 
#               NFS, PCI, SCSI, SPARC
#   two words:  file system, hard drive, hard disk, home page, 
#               user space, web site
#   other:      it's safe to save; daemon; use --, not - or ---;
#               use KB for 1024 bytes, not kB or K.
#
#
# This is used by Emacs' spell checker ispell.el:
#
# LocalWords:  CONFIG coprocessor DX Pentium SX lilo loadlin HOWTO ftp metalab
# LocalWords:  unc edu docs emu README kB BLK DEV FD Thinkpad fd MFM RLL IDE gz
# LocalWords:  cdrom diskless netboot nfs xzvf ATAPI MB ide pavia rubini pl pd
# LocalWords:  HD CDROMs IDECD NEC MITSUMI filesystem XT XD PCI BIOS cezar ATEN
# LocalWords:  ISA EISA Microchannel VESA BIOSes IPC SYSVIPC ipc Ctrl dmesg hlt
# LocalWords:  BINFMT Linkable http ac uk jo html GCC SPARC AVANTI CABRIOLET EB
# LocalWords:  netscape gcc LD CC toplevel MODVERSIONS insmod rmmod modprobe IP
# LocalWords:  genksyms INET loopback gatewaying ethernet PPP ARP Arp MEMSIZE
# LocalWords:  howto multicasting MULTICAST MBONE firewalling ipfw ACCT resp ip
# LocalWords:  proc acct IPIP encapsulator decapsulator klogd PCTCP RARP EXT PS
# LocalWords:  telnetting subnetted NAGLE rlogin NOSR ttyS TGA techinfo mbone nl
# LocalWords:  Mb SKB IPX Novell dosemu Appletalk DDP ATALK vmalloc visar ehome
# LocalWords:  SD CHR scsi thingy SG CD LUNs LUN jukebox Adaptec BusLogic EATA
# LocalWords:  buslogic DMA DPT ATT eata dma PIO UltraStor fdomain umsdos ext
# LocalWords:  QLOGIC qlogic TMC seagate Trantor ultrastor FASST wd NETDEVICES
# LocalWords:  unix BBS linux CSLIP PLIP Kirch's LDP CSlip SL SCC IRQ csustan
# LocalWords:  Turbo Laplink plip NCSA port's ReQuest IRQs EQL SMC AMD PCnet NE
# LocalWords:  COM ELPLUS Com EtherLinkIII VLB Arcnet Cabletron DEPCA DE carlos
# LocalWords:  depca EtherWorks EWRK ewrk SEEQ EtherExpress EEXPRESS NI xxx dia
# LocalWords:  EtherExpress WaveLAN wavelan PCLAN HPLAN VG SK Ansel Xen de ZNET
# LocalWords:  PCMCIA cb stanford LAN TEC RealTek ATP atp DLINK NetTools VISWS
# LocalWords:  TR Sony CDU caddyless cdu Mitsumi MCD cd mcd XA MultiSession CDA
# LocalWords:  Matsushita Panasonic SBPCD Soundblaster Longshine sbpcd Aztech
# LocalWords:  Okano Wearnes AZTCD CDD SE aztcd sonycd Goldstar GSCD Philips fs
# LocalWords:  LMS OPTCD Sanyo SJCD minix faqs xiafs XIA msdos mtools Cichocki
# LocalWords:  std softlinks umssync NetworkFileSharing nfsd mountd CDs HPFS TI
# LocalWords:  hpfs SYSV SCO iBCS Wyse WordPerfect tsx mit unixes sysv NR irisa
# LocalWords:  SMB WfW Cyclades async mux Logitech busmouse MouseSystem aka AST
# LocalWords:  PSMOUSE Compaq trackballs Travelmate Inport ATIXL ATI busmice ld
# LocalWords:  gpm config QIC DYNCONF FTAPE Stor Ftape ftape pcsndrv manpage NT
# LocalWords:  readprofile diskdrives org com masq EtherTalk tcp netrom sunacm
# LocalWords:  misc AIC aic pio scc Portmaster eql GIS PhotoCDs MCDX Perell PG
# LocalWords:  mcdx gscd optcd sjcd ISP hdparm Workgroups Lan samba PARIDE PCD
# LocalWords:  filesystems smbfs ATA ppp PCTech RZ www powerquest txt CMD ESDI
# LocalWords:  chipset FB multicast MROUTE appletalk ifconfig IBMTR multiport
# LocalWords:  Multisession STALDRV EasyIO EC EasyConnection ISTALLION ONboard
# LocalWords:  Brumby pci TNC cis ohio faq usenet NETLINK dev hydra ca Tyne mem
# LocalWords:  carleton DECstation SUNFD JENSEN Noname XXXM SLiRP LILO's amifb
# LocalWords:  pppd Zilog ZS SRM bootloader ez mainmenu rarp ipfwadm paride pcd
# LocalWords:  RTNETLINK mknod xos MTU lwared Macs mac netatalk macs cs Wolff
# LocalWords:  dartmouth flowerpt MultiMaster FlashPoint tudelft etherexpress
# LocalWords:  ICL EtherTeam ETH IDESCSI TXC SmartRAID SmartCache httpd sjc dlp
# LocalWords:  thesphere TwoServers BOOTP DHCP ncpfs BPQETHER BPQ MG HIPPI cern
# LocalWords:  bsd comp SPARCstation le SunOS ie Gracilis PackeTwin PT pt LU FX
# LocalWords:  FX TEAC CR LCS mS ramdisk IDETAPE cmd fperllo encis tcfs unisa
# LocalWords:  Vertos Genoa Funai hsfs NCP NetWare tgz APM apm ioctls UltraLite
# LocalWords:  TravelMate CDT LCD backlight VC RPC Mips AXP barlow cdrecord pg
# LocalWords:  PMAX MILO Alphas Multia Tseng linuxelf endian mipsel mips drv HT
# LocalWords:  kerneld callouts AdvanSys advansys Admin WDT DataStor EP verden
# LocalWords:  wdt hdb hdc bugfix SiS vlb Acculogic CSA DTC dtc Holtek ht QDI
# LocalWords:  QD qd UMC umc ALI ali lena fnet fr azstarnet cdr fb MDA ps esdi
# LocalWords:  Avanti XL AlphaStations Jensen DECpc AXPpci UDB Cabriolet MCA RC
# LocalWords:  AlphaPC mca AOUT OUTput PPro sipx gwdg lo nwe FourPort Boca unm
# LocalWords:  Keepalive linefill RELCOM keepalive analogue CDR conf CDI INIT
# LocalWords:  OPTi isp irq noisp VFAT vfat NTFS losetup dmsdosfs dosfs ISDN MP
# LocalWords:  NOWAYOUT behaviour dialin isdn callback BTX Teles  XXXX LVM lvm
ICN EDSS Cisco
# LocalWords:  ipppd syncppp RFC MPP VJ downloaded icn NICCY Creatix shmem ufr
# LocalWords:  ibp md ARCnet ether encap NDIS arcether ODI Amigas AmiTCP NetBSD
# LocalWords:  initrd tue util DES funet des OnNet BIOSP smc Travan Iomega CMS
# LocalWords:  FC DC dc PPA IOMEGA's ppa RNFS FMV Fujitsu ARPD arpd loran layes
# LocalWords:  FRAD indiana framerelay DLCI DCLIs Sangoma SDLA mrouted sync sec
# LocalWords:  Starmode Metricom MosquitoNet mosquitonet kbit nfsroot Digiboard
# LocalWords:  DIGI Xe Xeve digiboard UMISC touchscreens mtu ethernets HBAs MEX
# LocalWords:  Shifflett netcom js jshiffle WIC DECchip ELCP EtherPower dst RTC
# LocalWords:  rtc SMP lp Digi Intl RightSwitch DGRS dgrs AFFS Amiga UFS SDL AP
# LocalWords:  Solaris RISCom riscom syncPPP PCBIT pcbit sparc anu au artoo MFB
# LocalWords:  hitchcock Crynwr cnam pktdrvr NCSA's CyDROM CyCDROM FreeBSD NeXT
# LocalWords:  NeXTstep disklabel disklabels SMD FFS tm AmigaOS diskfiles Un IQ
# LocalWords:  Bernd informatik rwth aachen uae affs multihosting bytecode java
# LocalWords:  applets applet JDK ncsa cabi SNI Alphatronix readme LANs scarab
# LocalWords:  winsock RNIS caltech OSPF honour Honouring Mbit LocalTalk DEFRAG
# LocalWords:  localtalk download Packetwin Baycom baycom interwork ASCII JNT
# LocalWords:  Camtec proxying indyramp defragment defragmented UDP FAS FASXX
# LocalWords:  FastSCSI SIO FDC qlogicfas QLogic qlogicisp setbaycom ife ee LJ
# LocalWords:  ethz ch Travelmates ProAudioSpectrum ProAudio SoundMan SB SBPro
# LocalWords:  Thunderboard SM OPL FM ADLIB TSR Gravis MPU PSS ADI SW DSP codec
# LocalWords:  ADSP ESC ASIC daughtercard GUSMAX MSS NX AdLib Excell Ensoniq YM
# LocalWords:  SoundScape Spea MediaTriX AudioTriX WSS OTI ThunderBoard VoxWare
# LocalWords:  Soundscape SSCAPE TRIX MediaTrix PnP Maui dsp midixx EIA getty
# LocalWords:  mgetty sendfax gert greenie muc lowlevel Lasermate LanManager io
# LocalWords:  OOPSes trackball binghamton mobileip ncr IOMAPPED settags ns ser
# LocalWords:  setsync NEGO MPARITY autotuning prefetch PIIX cdwrite utils rc
# LocalWords:  PCWATCHDOG berkprod bitgate boldt ucsb jf kyoto jp euc Tetsuyasu 
# LocalWords:  YAMADA tetsu cauchy nslab ntt nevod perm su doc kaf kheops wsc
# LocalWords:  traduc Bourgin dbourgin menuconfig kfill READMEs HOWTOs Virge WA
# LocalWords:  IDEDISK IDEFLOPPY EIDE firewalls QMAGIC ZMAGIC LocalWords opti
# LocalWords:  SVGATextMode vga svga Xkernel syr jmwobus comfaqs dhcp flakey GD
# LocalWords:  IPv IPng interoperability ipng ipv radio's tapr pkthome PLP nano
# LocalWords:  Ses Mhz sethdlc SOUNDMODEM WindowsSoundSystem smdiag pcf inka ES
# LocalWords:  smmixer ptt circ soundmodem MKISS FDDI DEFEA DEFPA DEFXX redhat
# LocalWords:  HyperNews khg mconv sed lina wuftpd MicroChannel netlink irc cum
# LocalWords:  raudio RealAudio PPROP NETBIOS GUI IBMMCA ELMC Racal Interlan fi
# LocalWords:  eth shapecfg src esp PCWD PREVSTAT bootparam sig bitwizard SBC
# LocalWords:  downloads AFSK TCM FP Karn KA FSK RUH LinkSys cron mouseman LLC
# LocalWords:  SyQuest SyQuest's CCITT MicroSolutions BPCD bpcd ESPSERIAL PROM
# LocalWords:  SUNESP openprom OPENPROMIO quango themall al TT MC MMU LC RMW AA
# LocalWords:  INSNS Ataris AutoConfig ZORRO OCS AMIFB Agnus Denise ECS CDTV GB
# LocalWords:  AGA Cybervision CYBER GSP TMS DMI Zorro ACSI ROMs SLM BioNet GVP
# LocalWords:  PAMsNet TekMagic Cyberstorm MkI CYBERSTORMII MkII BLZ onboard cx
# LocalWords:  Village Tronic ATARILANCE RieblCard PAMCard VME MFP sangoma LAPB
# LocalWords:  Rhotron BioData's Multiface AMIGAMOUSE COPCON Amiga's bitplanes
# LocalWords:  ATARIMOUSE MFPSER SCC's MegaSTE ESCC Atari's GVPIOEXT DMASOUND
# LocalWords:  fdutils cisco univercd rpcg htm iface lapb LAPBETHER tpqic qic
# LocalWords:  SYNTH xd en binfmt aout ipip terra ipx sd sr sg wic framebuffer
# LocalWords:  ibmmca lapbether mkiss dlci sdla fmv eepro eexpress ni hp ne es
# LocalWords:  ibmtr isofs ROMFS romfs pcxx cyclades istallion psaux msbusmouse
# LocalWords:  atixlmouse sbin softdog pcwd USS Lite ACI miroSOUND PCM miroPCM
# LocalWords:  microcontroller miro Voxware downloading teles acsi slm gvp ltpc
# LocalWords:  atari ariadne amigamouse atarimouse builtin IPDDP maths bradford
# LocalWords:  AppleTalk Farallon PhoneNet Zubkoff lnz SCCB HAPN WANs vesafb nt
# LocalWords:  wanrouter WANPIPE multiprotocol Mbps wanpipe EtherWORKS nodma SC
# LocalWords:  smp HiSax SiemensChipSet Siemens AVM Elsa ITK hisax PCC MICROR
# LocalWords:  Mircolink EURO DSS Spellcaster BRI sc spellcast Digiboards GPIO
# LocalWords:  SYMBIOS COMPAT SDMS rev ASUS Tekram HX VX API ibmmcascsi ASY asy
# LocalWords:  loader's PCnetPCI automounter AUTOFS amd autofs VT Gallant's Pnp
# LocalWords:  AEDSP aedsp enskip tik Sysctl sysctl PARPORT parport pnp IDs EPP
# LocalWords:  Autoprobe bart patrickr HDLS READBACK AB usr DAMA DS SparQ aten
# LocalWords:  Symbios PCscsi tmscsim RoamAbout GHz Hinds contrib mathematik ok
# LocalWords:  darmstadt okir DIGIEPCA International's Xem digiepca epca bootup
# LocalWords:  zorro CAPI AVMB capi avmb VP SYN syncookies EM em pc Ethertalk
# LocalWords:  Dayna DL Daynatalk LT PhoneNET ATB Daystar queueing CMDS SCBs ls
# LocalWords:  SCB STATS Thinnet ThunderLAN TLAN Netelligent NetFlex tlan james
# LocalWords:  caldera Preload Preloading slowdowns schoebel uni NBD nbd prog
# LocalWords:  stuttgart rdist TRANS hostnames mango jukeboxes ESS userland PD
# LocalWords:  hardlinked NAMETRANS env mtab fstab umount nologin runlevel gid
# LocalWords:  adm Nodename hostname uname Kernelname bootp nmi DI OV StegFS
# LocalWords:  KERNNAME kname ktype kernelname Kerneltype KERNTYPE Alt RX mdafb
# LocalWords:  dataless kerneltype SYSNAME Comtrol Rocketport palmtop fbset EGS
# LocalWords:  nvram SYSRQ SysRq PrintScreen sysrq NVRAMs NvRAM Shortwave RTTY
# LocalWords:  Sitor Amtor Pactor GTOR hayes TX TMOUT JFdocs BIGMEM DAC IRQ's
# LocalWords:  IDEPCI IDEDMA PDC pdc TRM trm raidtools luthien nuclecu BAGET VR
# LocalWords:  unam mx miguel koobera uic EMUL solaris pp ieee lpsg co DMAs TOS
# LocalWords:  BLDCONFIG preloading jumperless BOOTINIT modutils multipath GRE
# LocalWords:  misconfigured autoconfiguration IPGRE ICMP tracert ipautofw PIM
# LocalWords:  netis rlynch autofw ipportfw monmouth ipsubs portforwarding pimd
# LocalWords:  portfw PIMSM netweb usc pim pf EUI aggregatable PB decapsulate
# LocalWords:  ipddp Decapsulation DECAP bool HAMRADIO tcpdump af CDs tx FBCON
# LocalWords:  ethertap multisession PPC MMIO GDT GDTH ICP gdth hamradio  bpp
# LocalWords:  lmh weejock AIMSlab RadioTrack RTRACK HZP OptoSCC TRX rx TRXECHO
# LocalWords:  DMASCC paccomm dmascc addr cfg oevsv oe kib picpar FDX baudrate
# LocalWords:  baudrates fdx HDX hdx PSK kanren frforum QoS SCHED CBQ SCH sched
# LocalWords:  sch cbq CSZ Shenker Zhang csz SFQ sfq TBF tbf PFIFO fifo PRIO RW
# LocalWords:  prio Micom xIO dwmw rimi OMIRR omirr omirrd unicode ntfs cmu NIC
# LocalWords:  Braam braam Schmidt's freiburg nls codepages codepage Romanian
# LocalWords:  Slovak Slovenian Sorbian Nordic iso Catalan Faeroese Galician SZ
# LocalWords:  Valencian Slovene Esperanto Estonian Latvian Byelorussian KOI mt
# LocalWords:  charset Inuit Greenlandic Sami Lappish koi Alexey Kuznetsov's sa
# LocalWords:  Specialix specialix DTR RTS RTSCTS cycladesZ Exabyte ftape's inr
# LocalWords:  Iomega's LBFM claus ZFTAPE VFS zftape zft William's lzrw DFLT kb
# LocalWords:  MTSETBLK MTIOCTOP qft setblk zftape's tar's afio's setdrvbuffer
# LocalWords:  Procfs Exabyte's THR FCD sysvinit init PSC pscwdt VMIDI Euro SAB
# LocalWords:  Mostek Fastlane PowerMac PReP PMAC PowerPC Macintoshes Starmax
# LocalWords:  PowerStack Starmaxes MCOMMON DEVICETREE ATY IMS IMSTT videodev
# LocalWords:  BT Hauppauge STB bttv Quickcam BW BWQCAM bw qcam Mediavision PMS
# LocalWords:  pms Avatar Freecom Imation Superdisk BPCK bpck COMM comm DSTR ru
# LocalWords:  dstr EPAT EPEZ epat EPIA epia FreeCom FRPW frpw KingByte KBIC HW
# LocalWords:  KingByte's kbic OnSpec ValuStore FASTROUTE fastroute FLOWCONTROL
# LocalWords:  struct APIC realtime OSs LynxOS CNC tmp cvf HFS hfs ADFS Risc os
# LocalWords:  adfs ncpmount namespace SUBDIR reexport NDS kcore FT SPX spx DAT
# LocalWords:  interserver BLKSZ NUMBUFFERS apmd Tadpole ANA roestock QuickCam
# LocalWords:  isapnptools Colour CQCAM colour Connectix QuickClip prive mentre
# LocalWords:  KMOD kmod conformant utexas kharker UnixWare Mwave cgi cl ts ibm
# LocalWords:  eXchange threepio oakland simtel pre ULTRAMCA EtherLink isa luik
# LocalWords:  EtherLink OpenBSD pts DEVPTS devpts ptmx ttyp glibc readback SA
# LocalWords:  mwave OLDCARD isdnloop linklevel loopctrl Eicon Diehl DIEHLDIVA
# LocalWords:  ASUSCOM AsusCom TELEINT semiactiv Sedlbauer Sportster TA MIC ITH
# LocalWords:  NETjet NetJet Niccy Neuhaus sparcs AOC AOCD AOCE Microlink SAA
# LocalWords:  teletext WinTV saa iproute tc Quadra Performa PowerBook tor AUN
# LocalWords:  setserial compsoc steve Econet econet AUNUDP psched TEQL TLE CLS
# LocalWords:  teql FW Ingres TwistedPair MTRR MTRRs mtrr cfs crypto TD ktti KT
# LocalWords:  PHd ICS ipchains adelaide rustcorp syslog Cumana steganography
# LocalWords:  AcornSCSI EcoSCSI EESOX EESOXSCSI Powertec POWERTECSCSI dec SF
# LocalWords:  RadioReveal gatekeeper aimslab aztech FMI sf fmi RTL rtl cesdis
# LocalWords:  Yellowfin gsfc nasa gov yellowfin pcnet Mylex LNE lne EtherH hs
# LocalWords:  EBSA chattr RiscOS Winmodem AGP Atomwide DUALSP pcsp robinson CT
# LocalWords:  SGALAXY Waverider DSPxxx TRXPRO AudioTrix OSWF MOT CFB DSY kbps
# LocalWords:  tuwien kkudielk LVD mega lun MAXTAGS Gbps arcnet Olicom SNA PAE
# LocalWords:  SysKonnect tms sna etherboot ufs NetBEUI MultiSound MSNDCLAS GX
# LocalWords:  MSNDINIT MSNDPERM MSNDPIN PNDSPINI PNDSPERM Ensoniq's RetinaZ SS
# LocalWords:  AudioPCI lspci SonicVibes sonicvibes SPARCs roadrunner CLgen UPA
# LocalWords:  swansea shtml Zoltrix zoltrix BINUTILS EGCS binutils VIDC DACs
# LocalWords:  CyberVision Cirrus PowerBooks Topcat SBUS CGsix TurboGX BWtwo SS
# LocalWords:  CGthree TCX unswapable vfb fbcon hicolor truecolor AFB ILBM SOC
# LocalWords:  IPLAN gracilis Fibre SBus SparcSTORAGE SV jnewbigin swin QNX qnx
# LocalWords:  PTY PTYS ptyxx ttyxx PTYs ssh sb Avance ALS pss pvv kerneli hd
# LocalWords:  synth WaveFront MSND NONPNP AudioExcelDSP STRAM APUS CHRP MBX Nx
# LocalWords:  PowerMac's BMAC radiotrack rtrack miropcm OFFBOARD HPT UDMA DVD
# LocalWords:  hpt fokus gmd Cyrix DXL SLC DLC NexGen MediaGX GXm IDT WinChip
# LocalWords:  MMX MII valkyrie mdacon vdolive VDOLive cuseeme CU hippi rrunner
# LocalWords:  SeeMe ipmasqadm juanjox ipmarkfw markfw TNCs Microdyne rhine lib
# LocalWords:  libc jsX gamepad gameport CHF FCS FPGaming MadCatz ASSASIN GrIP
# LocalWords:  Assasin gamepads GamePad PDPI gamecards gamecard WingMan BSP WCS
# LocalWords:  ThunderPad CyberMan SideWinder ThrustMaster DirectConnect NES XF
# LocalWords:  Millenium SNES PSX Multisystem Nintendo PlayStation Amstrad CPC
# LocalWords:  Sega TurboGraFX Steffen Schwenke Multiststem PDIF FIFOSIZE EPLUS
# LocalWords:  PowerUP RoadRunner tahallah dos functionkey setterm imladris Woz
# LocalWords:  PowerMacs Winbond Algorithmics ALGOR algor ECOFF IRIX SGI SGI's
# LocalWords:  gfx virtualized Xpmac mklinux XFree FBDev Woodhouse mvhi Seeq fp
# LocalWords:  SGISEEQ HIgh ADB ADBMOUSE crosscompiler CROSSCOMPILE FPE GDB gdb
# LocalWords:  JOYPORT rp spoofing DawiControl NOGENSUPP EEPROM HSSI Alessandro
# LocalWords:  singleprocessor tex MATHEMU FRIQ Maxell friq Alcor XLT AlphaBook
# LocalWords:  AlphaPCI DP LX Miata Mikasa Noritake RPX UX BX Takara EV PRIMO
# LocalWords:  TSC Matrox Productiva matroxfb matrox multihead ia linuxhq MFW
# LocalWords:  mfw AAA MCS Initio XXU initio imm AutoDetect IZIP CTR usec HDLC
# LocalWords:  COSA SRP muni cz kas cosa Alteon AceNIC acenic VTOC OSes GMT SAx
# LocalWords:  Inspiron localtime INTS Thinkpads Ralf Brown's Flightstick NNN
# LocalWords:  Xterminator Blackhawk NN mpu ioports DCA HPDCA HPLANCE DIO Corel
# LocalWords:  GemTek gemtek CMDLINE IrDA PDA's irmanager irattach RR AVA DN rg
# LocalWords:  uit dagb irda LSAP IrLMP RR's IrLAP IR alloc skb's kfree skb's
# LocalWords:  GZIP IrLAN NetbeamIR ESI JetEye IrOBEX IrCOMM TTY's minicom dti
# LocalWords:  ircomm ircomm pluto thiguchi IrTTY Linux's bps NetWinder MIR NSC
# LocalWords:  ACTiSYS Dongle dongle dongles esi actisys IrMate tekram BVM MVME
# LocalWords:  BVME BVME WRITETHROUGH copyback writethrough fwmark syncookie tu
# LocalWords:  alphalinux GOBIOS csn chemnitz nat ACARD AMI MegaRAID megaraid
# LocalWords:  QNXFS ISI isicom xterms Apollos VPN RCPCI rcpci sgi visws pcmcia
# LocalWords:  IrLPT UIRCC Tecra Strebel jstrebel suse Eichwalder ke INI INIA
# LocalWords:  FCP qlogicfc sym isapnp DTLK DoubleTalk rcsys dtlk DMAP SGIVW ar
# LocalWords:  dmabuf EcoRadio MUTEFREQ GIrBIL girbil tepkom vol mha diplom PQS
# LocalWords:  bmac Microgate SyncLink synclink hdlc excl ioaddr Tane tanep TCQ
# LocalWords:  PDS SMALLDOS charsets bigfoot kernelfr mcs cls fw rsvp SKnet sk
# LocalWords:  SKMC USB UHCI OHCI intel compaq usb ohci HCD Virt Compaq's hcd
# LocalWords:  VROOTHUB KBD ARRs MCRs NWBUTTON nwbutton NUM WaveArtist APNE cpu
# LocalWords:  apne blackhawke PlanB lu mlan planb NWFPE FPA nwfpe unbootable
# LocalWords:  FPEmulator ds vmlinux initialisation discardable pgtable PGT mdw
# LocalWords:  quicklist pagetable arthur StrongARM podule podules Autodetect
# LocalWords:  dodgy IrPORT irport Litelink litelink SuSE rtfm internet hda CY
# LocalWords:  multmode DriveReady SeekComplete DriveStatusError miscompile AEC
# LocalWords:  mainboard's Digital's alim FastTrak aec PIIXn piix Gayle Eyetech
# LocalWords:  Catweasel IDEDOUBLER Powerbook Centris ICSIDE RapIDE OSM HDM IOP
# LocalWords:  HDM's OSM's lan FibreChannel ECP autoprobe itg lbl ipmasq cjb IC
# LocalWords:  bieringer Caulfield's dreamtime decnet SIOCFIGCONF SIOCGIFCONF
# LocalWords:  rtnetlink Endnode Aironet Arlan Telxon ylenurme arlan ACB aeschi
# LocalWords:  Sealevel sealevel Cyclom br wanconfig tarball conectiva cycsyn
# LocalWords:  devel bazar cyclomx NetGear GA IBMOL Lanstreamer uhci eu efs CYZ
# LocalWords:  olympic linuxtr usbcore acm EZUSB downloader EFS XFS INTR op IIC
# LocalWords:  heine soundcore JavaStations JavaStation GemTeks TerraTec TODO
# LocalWords:  ActiveRadio Standalone terratec Rolf Offermanns rolf offermanns
# LocalWords:  Zoran ZR Buz LML CPQ DA cpqarray PPDEV deviceid vlp ppdev atyfb
# LocalWords:  AcceleRAID eXtremeRAID NETFILTER Netfilter masqueraded netfilter
# LocalWords:  kernelnotes Cardbus PCMCIA's CardBus clgenfb Permedia YAM MMAP
# LocalWords:  mmapped ATM atm PVCs SVCs InARP ATMARP neighbour neighbours MPOA
# LocalWords:  VCs ENI FPGA Tonga MMF MF UTP printks ZeitNet ZN ZATM uPD SAR PN
# LocalWords:  approx NICStAR NICs ForeRunnerLE Madge Collage ATMizer Dxxxx VCI
# LocalWords:  ServeRAID IPS ips ipslinux gzip BSDCOMP LZW RAYCS Interphase app
# LocalWords:  Tachyon IPHASE Surfboard NextLevel SURFboard jacksonville Tigon
# LocalWords:  fventuri adelphia siglercm linuxpower AceNICs Starfire starfire
# LocalWords:  ISOC CPiA cpia uss ACPI UDF DirectCD udf CDRW's OSF Manx acpi DM
# LocalWords:  Unixware cymru Computone IntelliPort Intelliport computone SI sx
# LocalWords:  adbmouse DRI DRM dlabs GMX PLCs Applicom fieldbus applicom int
# LocalWords:  VWSND eg ESSSOLO CFU CFNR scribed eiconctrl eicon hylafax KFPU
# LocalWords:  EXTRAPREC fpu mainboards KHTTPD kHTTPd khttpd Xcelerator SBNI tw
# LocalWords:  LOGIBUSMOUSE Granch granch sbni Raylink NOHIGHMEM Athlon SIM sim
# LocalWords:  hpl Tourrilhes DuraLAN starfile Davicom davicom dmfe auk tms tr
# LocalWords:  TokenExpress Belkin Peracom eTek DVDs infradead Cxxx Adlib AV ZX
# LocalWords:  NeoMagic CPi CPt Celeron decapsulation Undeletion BFS bfs nVidia
# LocalWords:  OnStream Irongate Riva phonedev QuickNet LineJack PhoneJack IXJ
# LocalWords:  Quicknet PhoneJACK LineJACK ixj pnpdump Quicknet's Joandi SSID
# LocalWords:  aironet quickconfig adhoc btw bap NONCS cardservices Xircom lin
# LocalWords:  Netwave AirSurfer netwave HomePNA failover MVP iMacs ALi aktual
# LocalWords:  Aladin HIDBP usbkbd KEYBDEV MOUSEDEV JOYDEV EVDEV UAB WhiteHEAT
# LocalWords:  Handspring ov DABUSB URB URB's dabusb CRAMFS NFSv ELV IOAPIC WIP
# LocalWords:  NLMv SMBus ALGOBIT algo PHILIPSPAR philips elv Velleman velleman
# LocalWords:  ALGOPCF Elektor elektor CHARDEV dfx TDFX tdfx Extensa dof gravis
# LocalWords:  assasin logitech Overdrive thrustmaster DWave Aureal magellan db
# LocalWords:  SpaceTec SpaceOrb SpaceBall spaceorb FLX spaceball turbografx zr
# LocalWords:  amiga ESS's WaveWatcher Maxi belkin RW's ata glx GART MPV Baget
# LocalWords:  OpenGL Xserver agpgart HOTPLUG CyberPro Integraphics Netwinder
# LocalWords:  aty FONTWIDTH eni zatm nicstar ForeRunner OC DECstations DEC's
# LocalWords:  PHYsical SUNI reinsertion ChipSAR KVC PHY ClassID iphase iadbg
# LocalWords:  DEVS FireWire PCILynx pcilynx LOCALRAM miro's DV RAWIO GRED Mk
# LocalWords:  Diffserv DSMARK Ingress Qdisc TCINDEX TMSPCI tmspci Ringode JE
# LocalWords:  MADGEMC madgemc TokenRing SMCTR TokenCard smctr Wacom Graphire
# LocalWords:  WMFORCE mousedev ConnectTech HandSpring Xirlink IBMCAM ibmcam SN
# LocalWords:  DEVICEFS yyy Cymraeg Dwave SIMM JSFLASH JavaStation's multilink
# LocalWords:  nsc ircc DDB Vrc CMN TB PROMs Vino rivafb DDC Matroxes MGA TVO
# LocalWords:  MAVEN fbdev crtc maven matroxset NTSC PCA SBA AAL SKFP DAS SAS
# LocalWords:  skfp Intuos ADMtek's pegasus PLUSB plusb pointopoint mp rio Xeon
# LocalWords:  DEVFS devfs dd bs EDSS german TELESPCI FRITZPCI HFC HFCS BDS HST
# LocalWords:  ISURF ISAR Saphir HSTSAPHIR Telekom BKM Scitel Quadro SCT Gazel
# LocalWords:  SP PRI Hypercope HYSDN Hypercope's hysdn IbssJoinNetTimeout FTDI
# LocalWords:  ARCNet Keyspan PDA ADMtek sgalaxy sgbase opl mpuio mpuirq sbio
# LocalWords:  sbirq sbdma gus uart mssio mssirq mssdma sscape maui mouirq iph
# LocalWords:  CHDLC UPS's usbmouse wacom wmforce keybdev joydev fibre Trunking
# LocalWords:  Etherchannel IOC Moxa Intellio moxa SmartIO mxser Mixcom EFI ir
# LocalWords:  MIXCOMWD mixcomwd SENDCOMPLETE GMAC iBook gmac OAKNET oaknet PCG
# LocalWords:  diffserv irlan irtty toshoboe IrCC Lifebook idex AUTODMA FIP Cxx
# LocalWords:  Yenta Databook TCIC FMVJ fmvj NMCLAN LiveWire nmclan XIRC xirc
# LocalWords:  loadkeys setfont shm SuperIO soc SOCAL socal FCAL fc fcal COMX
# LocalWords:  MultiGate ITConsult comx CMX HiCOMX downloadable hw LoCOMX PROTO
# LocalWords:  locomx MixCOM mixcom proto MyriCOM MYRI Sbus myri sbus IBMLS hme
# LocalWords:  lanstreamer baseT HAPPYMEAL qfe sunhme SUNLANCE sunlance BigMAC
# LocalWords:  SUNBMAC sunbmac QuadEthernet SUNQE qe FastEthernet sunqe DSB PTI
# LocalWords:  DSBR dsbr procinfo QLOGICPTI qpti ptisp QLGC qlogicpti se LBA NF
# LocalWords:  OPENPROMFS OpenPROM openpromfs OBP OpenBoot flashable Multiboard
# LocalWords:  SPARCAUDIO SparcClassic Ultras DBRI Sparcbook sparcaudio SUNBPP
# LocalWords:  UltraDMA WDC CRC CONNTRACK IPTABLES iptables nfmark interface's
# LocalWords:  tdfxfb TNTx HGA hgafb VERBOSEDEBUG SunTrunking SunSoft XIRTULIP
# LocalWords:  ethercards PNIC Macronix MXIC ASIX xircom Mustek MDC gphoto mdc
# LocalWords:  CramFs Cramfs uid cramfs AVM's kernelcapi PCIV cdrdao Cdparanoia
# LocalWords:  DMX Domex dmx wellington ftdi sio Accton Billington Corega FEter
# LocalWords:  MELCO LUA PNA Linksys SNC chkdsk AWACS Webcam RAMFS Ramfs ramfs
# LocalWords:  ramfiles MAKEDEV pty WDTPCI APA apa

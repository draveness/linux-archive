#
# Network configuration
#
mainmenu_option next_comment
comment 'Networking options'
tristate 'Packet socket' CONFIG_PACKET
if [ "$CONFIG_PACKET" != "n" ]; then
   bool '  Packet socket: mmapped IO' CONFIG_PACKET_MMAP
fi
bool 'Kernel/User netlink socket' CONFIG_NETLINK
if [ "$CONFIG_NETLINK" = "y" ]; then
   bool '  Routing messages' CONFIG_RTNETLINK
   tristate '  Netlink device emulation' CONFIG_NETLINK_DEV
fi
bool 'Network packet filtering (replaces ipchains)' CONFIG_NETFILTER
if [ "$CONFIG_NETFILTER" = "y" ]; then
   bool '  Network packet filtering debugging' CONFIG_NETFILTER_DEBUG
fi
bool 'Socket Filtering'  CONFIG_FILTER
tristate 'Unix domain sockets' CONFIG_UNIX
bool 'TCP/IP networking' CONFIG_INET
if [ "$CONFIG_INET" = "y" ]; then
   source net/ipv4/Config.in
   if [ "$CONFIG_EXPERIMENTAL" = "y" ]; then
#   IPv6 as module will cause a CRASH if you try to unload it
      tristate '  The IPv6 protocol (EXPERIMENTAL)' CONFIG_IPV6
      if [ "$CONFIG_IPV6" != "n" ]; then
	 source net/ipv6/Config.in
      fi
   fi
   if [ "$CONFIG_EXPERIMENTAL" = "y" ]; then
      source net/khttpd/Config.in
   fi
fi
if [ "$CONFIG_EXPERIMENTAL" = "y" ]; then
   bool 'Asynchronous Transfer Mode (ATM) (EXPERIMENTAL)' CONFIG_ATM
   if [ "$CONFIG_ATM" = "y" ]; then
      if [ "$CONFIG_INET" = "y" ]; then
	 bool '  Classical IP over ATM' CONFIG_ATM_CLIP
	 if [ "$CONFIG_ATM_CLIP" = "y" ]; then
	    bool '    Do NOT send ICMP if no neighbour' CONFIG_ATM_CLIP_NO_ICMP
	 fi
      fi
      tristate '  LAN Emulation (LANE) support' CONFIG_ATM_LANE
      if [ "$CONFIG_INET" = "y" -a "$CONFIG_ATM_LANE" != "n" ]; then
	 tristate '    Multi-Protocol Over ATM (MPOA) support' CONFIG_ATM_MPOA
      fi
   fi
fi

comment ' '
tristate 'The IPX protocol' CONFIG_IPX
if [ "$CONFIG_IPX" != "n" ]; then
   source net/ipx/Config.in
fi
tristate 'Appletalk protocol support' CONFIG_ATALK
tristate 'DECnet Support' CONFIG_DECNET
if [ "$CONFIG_DECNET" != "n" ]; then
   source net/decnet/Config.in
fi
tristate '802.1d Ethernet Bridging' CONFIG_BRIDGE
if [ "$CONFIG_EXPERIMENTAL" = "y" ]; then
   tristate 'CCITT X.25 Packet Layer (EXPERIMENTAL)' CONFIG_X25
   tristate 'LAPB Data Link Driver (EXPERIMENTAL)' CONFIG_LAPB
   bool '802.2 LLC (EXPERIMENTAL)' CONFIG_LLC
   bool 'Frame Diverter (EXPERIMENTAL)' CONFIG_NET_DIVERT
#   if [ "$CONFIG_LLC" = "y" ]; then
#      bool '  Netbeui (EXPERIMENTAL)' CONFIG_NETBEUI
#   fi
   if [ "$CONFIG_INET" = "y" ]; then
      tristate 'Acorn Econet/AUN protocols (EXPERIMENTAL)' CONFIG_ECONET
   fi
   if [ "$CONFIG_ECONET" != "n" ]; then
      bool '  AUN over UDP' CONFIG_ECONET_AUNUDP
      bool '  Native Econet' CONFIG_ECONET_NATIVE
   fi
   tristate 'WAN router' CONFIG_WAN_ROUTER
   bool 'Fast switching (read help!)' CONFIG_NET_FASTROUTE
   bool 'Forwarding between high speed interfaces' CONFIG_NET_HW_FLOWCONTROL
   if [ "$CONFIG_EXPERIMENTAL" = "y" ]; then
      mainmenu_option next_comment
      comment 'QoS and/or fair queueing'
      bool 'QoS and/or fair queueing (EXPERIMENTAL)' CONFIG_NET_SCHED
      if [ "$CONFIG_NET_SCHED" = "y" ]; then
	 source net/sched/Config.in
      fi
#      bool 'Network code profiler' CONFIG_NET_PROFILE
      endmenu
   fi
fi
endmenu

menu "Kernel hacking"

source "lib/Kconfig.debug"

config CMDLINE_ON_HOST
	bool "Show command line arguments on the host in TT mode"
	depends on MODE_TT
	default !DEBUG_INFO
	help
	This controls whether arguments in guest processes should be shown on
	the host's ps output.
	Enabling this option hinders debugging on some recent GDB versions
	(because GDB gets "confused" when we do an execvp()). So probably you
	should disable it.

config PT_PROXY
	bool "Enable ptrace proxy"
	depends on XTERM_CHAN && DEBUG_INFO && MODE_TT
	help
	This option enables a debugging interface which allows gdb to debug
	the kernel without needing to actually attach to kernel threads.
	If you want to do kernel debugging, say Y here; otherwise say N.

config GPROF
	bool "Enable gprof support"
	depends on DEBUG_INFO && MODE_SKAS && !MODE_TT
	help
        This allows profiling of a User-Mode Linux kernel with the gprof
        utility.

        See <http://user-mode-linux.sourceforge.net/gprof.html> for more
        details.

        If you're involved in UML kernel development and want to use gprof,
        say Y.  If you're unsure, say N.

config GCOV
	bool "Enable gcov support"
	depends on DEBUG_INFO && MODE_SKAS
	help
        This option allows developers to retrieve coverage data from a UML
        session.

        See <http://user-mode-linux.sourceforge.net/gprof.html> for more
        details.

        If you're involved in UML kernel development and want to use gcov,
        say Y.  If you're unsure, say N.

config DEBUG_STACK_USAGE
	bool "Stack utilization instrumentation"
	default N
	help
	  Track the maximum kernel stack usage - this will look at each
	  kernel stack at process exit and log it if it's the deepest
	  stack seen so far.

	  This option will slow down process creation and destruction somewhat.
endmenu
